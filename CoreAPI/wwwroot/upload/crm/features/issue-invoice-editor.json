{
    "Id": "00213f0c-0000-0000-8000-de80e4c37f4a",
    "Name": "issue-invoice-editor",
    "Label": "Issue Invoice Editor",
    "ParentId": "009b3b78-0000-0000-8000-38a9f8f617fc",
    "Order": 0,
    "Style": "width:99%;",
    "Script": "return {\r\n    OnSave: function (form, gridview) {\r\n        if (this.Entity.ActionId == 1) {\r\n            this.Entity.ActionId = 2;\r\n        }\r\n    },\r\n    CalcPrice: function (com, entity) {\r\n        var exUSD = this.Decimal(this.EditForm.Entity.ExchangeRateINV);\r\n        entity.Quantity = this.Decimal(entity.Quantity || 0);\r\n        entity.Amount = this.Decimal(entity.Amount || 0);\r\n        entity.TotalAmount = (entity.Quantity || this.Decimal(0)).times(entity.Amount || this.Decimal(0));\r\n        var vat = this.Decimal(entity.Vat || 0);\r\n        if (vat.isNegative()) {\r\n            entity.AmountTax = this.Decimal(entity.Vat).abs();\r\n        } else {\r\n            entity.AmountTax = (entity.TotalAmount).times(entity.Vat || this.Decimal(0)).div(100);\r\n        }\r\n        entity.TotalAmountTax = entity.TotalAmount.plus(entity.AmountTax);\r\n        if (entity.CurrencyCode == \"USD\") {\r\n            entity.ExchangeRateINV = exUSD;\r\n        }\r\n        else {\r\n            entity.ExchangeRateINV = this.Decimal(entity.ExchangeRateINV);\r\n        }\r\n        entity.ExchangeRateINV2 = entity.ExchangeRateINV.div(exUSD);\r\n        if (this.EditForm.Entity.CurrencyCode != \"VND\") {\r\n            entity.ExchangeRateINV = this.Decimal(1);\r\n            entity.ExAmount = this.Decimal(entity.Amount).times(entity.ExchangeRateINV)\r\n            entity.ExTotalAmount = this.Decimal(entity.ExAmount).times(entity.Quantity)\r\n            if (vat.isNegative()) {\r\n                entity.ExAmountTax = this.Decimal(entity.Vat).abs().times(entity.ExchangeRateINV)\r\n            } else {\r\n                entity.ExAmountTax = this.Decimal(entity.ExTotalAmount).times(vat.div(this.Decimal(100)))\r\n            }\r\n            entity.ExTotalAmountTax = this.Decimal(entity.ExTotalAmount).plus(entity.ExAmountTax);\r\n            if (entity.TypeId === 2 || ([3, 4].includes(entity.TypeId) && !entity.IsAdvCustomer)) {\r\n                entity.Payable = entity.ExTotalAmountTax;\r\n                entity.Receivable = null;\r\n            }\r\n            else {\r\n                entity.Receivable = entity.ExTotalAmountTax;\r\n                entity.Payable = null;\r\n            }\r\n        }\r\n        else {\r\n            entity.ExAmount = (this.Decimal(entity.Amount).times(entity.ExchangeRateINV)).toDP(0);\r\n            entity.ExTotalAmount = (this.Decimal(entity.ExAmount).times(entity.Quantity)).toDP(0);\r\n            if (vat.isNegative()) {\r\n                entity.ExAmountTax = (this.Decimal(entity.Vat).abs().times(entity.ExchangeRateINV)).toDP(0);\r\n            } else {\r\n                entity.ExAmountTax = (this.Decimal(entity.ExTotalAmount).times(vat.div(this.Decimal(100)))).toDP(0);\r\n            }\r\n            entity.ExTotalAmountTax = this.Decimal(entity.ExTotalAmount).plus(entity.ExAmountTax);\r\n            if (entity.TypeId === 2 || ([3, 4].includes(entity.TypeId) && !entity.IsAdvCustomer)) {\r\n                entity.Payable = entity.ExTotalAmountTax;\r\n                entity.Receivable = null;\r\n            }\r\n            else {\r\n                entity.Receivable = entity.ExTotalAmountTax;\r\n                entity.Payable = null;\r\n            }\r\n        }\r\n        com.Parent.UpdateView(false);\r\n    },\r\n    ChangeExchangeRate2: function (com, entity) {\r\n        entity.ExchangeRateINV = this.Decimal(entity.ExchangeRateINV);\r\n        if (entity.CurrencyCode == \"USD\") {\r\n            this.EditForm.Entity.ExchangeRateINV = entity.ExchangeRateINV;\r\n            this.EditForm.Entity.ExchangeRateINV2 = this.Decimal(1).div(this.EditForm.Entity.ExchangeRateINV);\r\n            this.EditForm.UpdateView(true, false, \"ExchangeRateINV\");\r\n        }\r\n        var component = this.GET(\"ShipmentInvoiceDetail\");\r\n        var exUSD = this.Decimal(this.Entity.ExchangeRateINV);\r\n        if (this.EditForm.Entity.CurrencyCode != \"VND\") {\r\n            component.Item.filter(x => x.Entity.CurrencyId == entity.CurrencyId || x.Entity.CurrencyCode == \"USD\").forEach(item => {\r\n                if (!item.Entity.IsLock) {\r\n                    item.Selected = true;\r\n                    item.Entity.ExchangeRateINV = this.Decimal(1);\r\n                    item.Entity.ExchangeRateINV2 = item.Entity.ExchangeRateINV.div(exUSD);\r\n                    var vat = this.Decimal(item.Entity.Vat || 0);\r\n                    item.Entity.ExAmount = this.Decimal(item.Entity.Amount).times(item.Entity.ExchangeRateINV)\r\n                    item.Entity.ExTotalAmount = this.Decimal(item.Entity.ExAmount).times(item.Entity.Quantity)\r\n                    if (vat.isNegative()) {\r\n                        item.Entity.ExAmountTax = this.Decimal(item.Entity.Vat).abs().times(item.Entity.ExchangeRateINV)\r\n                    } else {\r\n                        item.Entity.ExAmountTax = this.Decimal(item.Entity.ExTotalAmount).times(vat.div(this.Decimal(100)))\r\n                    }\r\n                    item.Entity.ExTotalAmountTax = this.Decimal(item.Entity.ExTotalAmount).plus(item.Entity.ExAmountTax);\r\n                    if (item.Entity.TypeId === 2 || ([3, 4].includes(item.Entity.TypeId) && !item.Entity.IsAdvCustomer)) {\r\n                        item.Entity.Payable = item.Entity.ExTotalAmountTax;\r\n                        item.Entity.Receivable = null;\r\n                    }\r\n                    else {\r\n                        item.Entity.Receivable = item.Entity.ExTotalAmountTax;\r\n                        item.Entity.Payable = null;\r\n                    }\r\n                    item.UpdateView(false);\r\n                }\r\n                else {\r\n                    item.Selected = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            component.Item.filter(x => x.Entity.CurrencyId == entity.CurrencyId || x.Entity.CurrencyCode == \"USD\").forEach(item => {\r\n                if (!item.Entity.IsLock) {\r\n                    item.Selected = true;\r\n                    if (item.Entity.CurrencyCode == \"USD\") {\r\n                        item.Entity.ExchangeRateINV = exUSD;\r\n                    }\r\n                    else {\r\n                        item.Entity.ExchangeRateINV = entity.ExchangeRateINV;\r\n                    }\r\n                    item.Entity.ExchangeRateINV2 = item.Entity.ExchangeRateINV.div(exUSD);\r\n                    var vat = this.Decimal(item.Entity.Vat || 0);\r\n                    item.Entity.ExAmount = (this.Decimal(item.Entity.Amount).times(item.Entity.ExchangeRateINV)).toDP(0);\r\n                    item.Entity.ExTotalAmount = (this.Decimal(item.Entity.ExAmount).times(item.Entity.Quantity)).toDP(0);\r\n                    if (vat.isNegative()) {\r\n                        item.Entity.ExAmountTax = (this.Decimal(item.Entity.Vat).abs().times(item.Entity.ExchangeRateINV)).toDP(0);\r\n                    } else {\r\n                        item.Entity.ExAmountTax = (this.Decimal(item.Entity.ExTotalAmount).times(vat.div(this.Decimal(100)))).toDP(0);\r\n                    }\r\n                    item.Entity.ExTotalAmountTax = this.Decimal(item.Entity.ExTotalAmount).plus(item.Entity.ExAmountTax);\r\n                    if (item.Entity.TypeId === 2 || ([3, 4].includes(item.Entity.TypeId) && !item.Entity.IsAdvCustomer)) {\r\n                        item.Entity.Payable = item.Entity.ExTotalAmountTax;\r\n                        item.Entity.Receivable = null;\r\n                    }\r\n                    else {\r\n                        item.Entity.Receivable = item.Entity.ExTotalAmountTax;\r\n                        item.Entity.Payable = null;\r\n                    }\r\n                    item.UpdateView(false);\r\n                }\r\n                else {\r\n                    item.Selected = false;\r\n                }\r\n            });\r\n        }\r\n    },\r\n    UpdateParent: function () {\r\n        var component = this.GET(\"ShipmentInvoice\");\r\n        component.ReloadData();\r\n    },\r\n    ChangeFileNo: function (com, entity) {\r\n        this.Entity.MblNos = com.MatchedItems.map(x => x.MblNo).filter(x => x).join(',')\r\n        this.EditForm.UpdateView(false, false, \"MblNos\");\r\n    },\r\n    Invoice: function (com, entity) {\r\n        if (this.Entity.Id.startsWith(\"-\")) {\r\n            var grid = this.GET(\"ShipmentInvoiceDetail\");\r\n            var data = grid.AllListViewItem.filter(x => x.Selected && !x.Entity.IsLock);\r\n            if (!data || data.length == 0) {\r\n                this.Toast.Warning(\"Please selected fee issued\");\r\n            }\r\n            else {\r\n                this.EditForm.SaveSelectedDetail().then(() => {\r\n                    var component = this.GET(\"ShipmentInvoice\");\r\n                    component.ReloadData().then();\r\n                    if (this.EditForm.Entity.ReceiverIds) {\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.Entity.ActionId == 3) {\r\n                this.EditForm.OpenConfig(\"Are you sure you want to void this invoice?\", () => {\r\n                    this.SavePatch();\r\n                }, () => { }, false, [], true);\r\n            }\r\n            else {\r\n                this.EditForm.SavePatch();\r\n            }\r\n        }\r\n    },\r\n    AddInvoice: function (com, entity) {\r\n        var hblGrid = this.GET(\"ShipmentDetail\");\r\n        var issueInvoice = JSON.parse(JSON.stringify(this.Entity));\r\n        issueInvoice.Id = this.Uuid7.NewGuid();\r\n        issueInvoice.StatusId = 1;\r\n        issueInvoice.ExchangeRateINV = issueInvoice.CurrencyCode ? this.Decimal(JSON.parse(localStorage.getItem(\"ExchangeRateVND\"))[\"USD\"]) : this.Decimal(1);\r\n        issueInvoice.Code = null;\r\n        issueInvoice.FeeTypeId = \"ds.TypeId in (1,2,3,4)\";\r\n        issueInvoice.ActionId = 1;\r\n        issueInvoice.UserApprovedIds = null;\r\n        issueInvoice.ShipmentInvoiceId = null;\r\n        issueInvoice.HblIds = this.EditForm.HblIds || issueInvoice.HblIds;\r\n        issueInvoice.FileIds = this.EditForm.FileIds || issueInvoice.FileIds;\r\n        issueInvoice.RequestTypeId = null;\r\n        issueInvoice.DeadlineDate = null;\r\n        issueInvoice.ReceiverIds = null;\r\n        issueInvoice.Remark = null;\r\n        issueInvoice.SeqKey = null;\r\n        issueInvoice.RevisedDate = null;\r\n        issueInvoice.DueDate = null;\r\n        issueInvoice.IsSendPartner = false;\r\n        issueInvoice.PostOtherDate = null;\r\n        issueInvoice.OtherCode = null;\r\n        issueInvoice.PaymentMethodId = null;\r\n        issueInvoice.ProgressId = 1;\r\n        issueInvoice.UserViewIds = null;\r\n        issueInvoice.InsertedBy = this.UserId;\r\n        issueInvoice.PostDate = this.dayjs().format('YYYY-MM-DDTHH:mm:ss');\r\n        issueInvoice.InvoiceDate = this.dayjs().format('YYYY-MM-DDTHH:mm:ss');\r\n        this.EditForm.Entity = issueInvoice;\r\n        this.EditForm.UpdateView(true, false);\r\n        this.ChangeDataFee();\r\n        var comShipmentInvoice = this.EditForm.FirstCom(\"ShipmentInvoice\");\r\n        comShipmentInvoice.ReloadData().then(() => {\r\n            if (this.EditForm.Entity.Id) {\r\n                var item = comShipmentInvoice.Item.find(x => x.Entity.Id == this.EditForm.Entity.Id);\r\n                if (comShipmentInvoice && comShipmentInvoice.Item && item) {\r\n                    item.Element.click();\r\n                }\r\n            }\r\n            else {\r\n                if (comShipmentInvoice && comShipmentInvoice.Item && comShipmentInvoice.Item[0]) {\r\n                    comShipmentInvoice.Item[0].Element.click();\r\n                }\r\n            }\r\n        })\r\n    },\r\n    IntUpdateFee: 0,\r\n    ChangeDataFee: function () {\r\n        var exUSD = this.Decimal(this.Entity.ExchangeRateINV);\r\n        var exVND = this.Decimal(1);\r\n        window.clearTimeout(this.EditForm.IntUpdateFee);\r\n        this.EditForm.IntUpdateFee = window.setTimeout(() => {\r\n            var component = this.GET(\"ShipmentInvoiceDetail\");\r\n            component.ReloadData().then(() => {\r\n                if (this.EditForm.Entity.CurrencyCode != \"VND\") {\r\n                    component.Item.forEach(item => {\r\n                        if (!item.Entity.IsLock) {\r\n                            component.Dirty = true;\r\n                            item.Selected = true;\r\n                            item.Entity.ExchangeRateINV = this.Decimal(1);\r\n                            item.Entity.ExchangeRateINV2 = item.Entity.ExchangeRateINV.div(exUSD);\r\n                            var vat = this.Decimal(item.Entity.Vat || 0);\r\n                            item.Entity.ExAmount = this.Decimal(item.Entity.Amount).times(item.Entity.ExchangeRateINV)\r\n                            item.Entity.ExTotalAmount = this.Decimal(item.Entity.ExAmount).times(item.Entity.Quantity)\r\n                            if (vat.isNegative()) {\r\n                                item.Entity.ExAmountTax = this.Decimal(item.Entity.Vat).abs().times(item.Entity.ExchangeRateINV)\r\n                            } else {\r\n                                item.Entity.ExAmountTax = this.Decimal(item.Entity.ExTotalAmount).times(vat.div(this.Decimal(100)))\r\n                            }\r\n                            item.Entity.ExTotalAmountTax = this.Decimal(item.Entity.ExTotalAmount).plus(item.Entity.ExAmountTax);\r\n                            if (item.Entity.TypeId === 2 || ([3, 4].includes(item.Entity.TypeId) && !item.Entity.IsAdvCustomer)) {\r\n                                item.Entity.Payable = item.Entity.ExTotalAmountTax;\r\n                                item.Entity.Receivable = null;\r\n                            }\r\n                            else {\r\n                                item.Entity.Receivable = item.Entity.ExTotalAmountTax;\r\n                                item.Entity.Payable = null;\r\n                            }\r\n                            item.UpdateView(false);\r\n                        }\r\n                        else {\r\n                            item.Selected = false;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    component.Item.forEach(item => {\r\n                        if (!item.Entity.IsLock) {\r\n                            component.Dirty = true;\r\n                            item.Selected = true;\r\n                            if (item.Entity.CurrencyCode == \"USD\") {\r\n                                item.Entity.ExchangeRateINV = exUSD;\r\n                            }\r\n                            else {\r\n                                item.Entity.ExchangeRateINV = this.Decimal(item.Entity.ExchangeRateINV || this.Decimal(JSON.parse(localStorage.getItem(\"ExchangeRateVND\"))[item.Entity.CurrencyCode]));\r\n                            }\r\n                            item.Entity.ExchangeRateINV2 = item.Entity.ExchangeRateINV.div(exUSD);\r\n                            var vat = this.Decimal(item.Entity.Vat || 0);\r\n                            item.Entity.ExAmount = (this.Decimal(item.Entity.Amount).times(item.Entity.ExchangeRateINV)).toDP(0);\r\n                            item.Entity.ExTotalAmount = (this.Decimal(item.Entity.ExAmount).times(item.Entity.Quantity)).toDP(0);\r\n                            if (vat.isNegative()) {\r\n                                item.Entity.ExAmountTax = (this.Decimal(item.Entity.Vat).abs().times(item.Entity.ExchangeRateINV)).toDP(0);\r\n                            } else {\r\n                                item.Entity.ExAmountTax = (this.Decimal(item.Entity.ExTotalAmount).times(vat.div(this.Decimal(100)))).toDP(0);\r\n                            }\r\n                            item.Entity.ExTotalAmountTax = this.Decimal(item.Entity.ExTotalAmount).plus(item.Entity.ExAmountTax);\r\n                            if (item.Entity.TypeId === 2 || ([3, 4].includes(item.Entity.TypeId) && !item.Entity.IsAdvCustomer)) {\r\n                                item.Entity.Payable = item.Entity.ExTotalAmountTax;\r\n                                item.Entity.Receivable = null;\r\n                            }\r\n                            else {\r\n                                item.Entity.Receivable = item.Entity.ExTotalAmountTax;\r\n                                item.Entity.Payable = null;\r\n                            }\r\n                            item.UpdateView(false);\r\n                        }\r\n                        else {\r\n                            item.Selected = false;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    },\r\n    ViewDetail: function (grid, entity) {\r\n        this.Entity = entity;\r\n        this.EditForm.UpdateView(false, false);\r\n    },\r\n    AddContextMenu: function (gridview, context) {\r\n        if (this.Entity.ActionId == 2 && this.Entity.ProgressId == 1) {\r\n            var data = gridview.AllListViewItem.filter(x => x.Selected && x.Entity.IsLock);\r\n            if (data && data.length > 0) {\r\n                context.MenuItems.push({\r\n                    Icon: \"fas fa-page-break\",\r\n                    Text: \"Split Fee\",\r\n                    Click: () => this.SplitFee(data.map(x => x.Entity.Id), gridview)\r\n                });\r\n            }\r\n        }\r\n        if (this.Entity.Id.startsWith('-') && this.Entity.ProgressId == 1) {\r\n            var data2 = gridview.AllListViewItem.filter(x => x.Selected && !x.Entity.IsLock);\r\n            if (data2 && data2.length > 0) {\r\n                context.MenuItems.push({\r\n                    Icon: \"fas fa-plus\",\r\n                    Text: \"Add Fee\",\r\n                    Click: () => this.AddFee(data2, gridview)\r\n                });\r\n            }\r\n        }\r\n    },\r\n    SplitFee: function (data, gridview) {\r\n        var form = gridview.EditForm.OpenConfig(\"Do do want split fee!\", async () => {\r\n            var rs = await gridview.EditForm.Client.PostAsync({ ShipmentInvoiceDetailId: data, ShipmentInvoiceId: this.EditForm.Entity.Id }, \"/api/SplitFee\");\r\n            if (rs) {\r\n                gridview.ApplyFilter();\r\n                var comShipmentInvoice = this.EditForm.FirstCom(\"ShipmentInvoice\");\r\n                comShipmentInvoice.ReloadData().then(() => {\r\n                    if (this.EditForm.Entity.Id) {\r\n                        var item = comShipmentInvoice.Item.find(x => x.Entity.Id == this.EditForm.Entity.Id);\r\n                        if (comShipmentInvoice && comShipmentInvoice.Item && item) {\r\n                            item.Element.click();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (comShipmentInvoice && comShipmentInvoice.Item && comShipmentInvoice.Item[0]) {\r\n                            comShipmentInvoice.Item[0].Element.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }, () => { }, false, []);\r\n    },\r\n    AddFee: function (data, gridview) {\r\n        var shipment = gridview.EditForm.Meta.GridPolicies.find(x => x.FieldName == \"ViewShipmentInvoiceId\");\r\n        var form = gridview.EditForm.OpenConfig(\"Do do want add fee!\", async () => {\r\n            for (const element of data) {\r\n                let patchVM = {\r\n                    Table: \"ShipmentFee\",\r\n                    Changes: [\r\n                        { Field: \"Id\", Value: element.Entity.ShipmentFeeId },\r\n                        { Field: \"DescriptionId\", Value: element.Entity.DescriptionId },\r\n                        { Field: \"TotalAmountTax\", Value: element.Entity.TotalAmountTax },\r\n                        { Field: \"TotalAmount\", Value: element.Entity.TotalAmount },\r\n                        { Field: \"AmountTax\", Value: element.Entity.AmountTax },\r\n                        { Field: \"Amount\", Value: element.Entity.Amount },\r\n                        { Field: \"Quantity\", Value: element.Entity.Quantity },\r\n                        { Field: \"UnitId\", Value: element.Entity.UnitId },\r\n                        { Field: \"Vat\", Value: element.Entity.Vat },\r\n                        { Field: \"Tax\", Value: element.Entity.Tax },\r\n                        { Field: \"ExchangeRateINV\", Value: element.Entity.ExchangeRateINV },\r\n                        { Field: \"ExchangeRateVND\", Value: element.Entity.ExchangeRateINV },\r\n                        { Field: \"ExchangeRateUSD\", Value: element.Entity.ExchangeRateINV2 },\r\n                        { Field: \"ExTotalAmountTax\", Value: element.Entity.ExTotalAmountTax },\r\n                        { Field: \"ExTotalAmount\", Value: element.Entity.ExTotalAmount },\r\n                        { Field: \"ExAmountTax\", Value: element.Entity.ExAmountTax },\r\n                        { Field: \"ExAmount\", Value: element.Entity.ExAmount },\r\n                    ]\r\n                };\r\n                await this.Client.PatchAsync(patchVM);\r\n            }\r\n            var rs = await gridview.EditForm.Client.PostAsync({ ShipmentInvoiceId: gridview.Entity.ViewShipmentInvoiceId, ShipmentInvoiceDetailId: data.map(x => x.Entity.ShipmentFeeId) }, \"/api/AddFee\");\r\n            if (rs) {\r\n                gridview.ApplyFilter();\r\n                var comShipmentInvoice = this.EditForm.FirstCom(\"ShipmentInvoice\");\r\n                comShipmentInvoice.ReloadData().then(() => {\r\n                    if (this.EditForm.Entity.Id) {\r\n                        var item = comShipmentInvoice.Item.find(x => x.Entity.Id == this.EditForm.Entity.Id);\r\n                        if (comShipmentInvoice && comShipmentInvoice.Item && item) {\r\n                            item.Element.click();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (comShipmentInvoice && comShipmentInvoice.Item && comShipmentInvoice.Item[0]) {\r\n                            comShipmentInvoice.Item[0].Element.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }, () => { }, true, [shipment]);\r\n    },\r\n    ChangeCurrency: function () {\r\n        this.EditForm.Entity.ExchangeRateINV = this.Decimal(JSON.parse(localStorage.getItem(\"ExchangeRateVND\"))[this.EditForm.Entity.Currency.Code]);\r\n        this.EditForm.Entity.ExchangeRateINV2 = this.Decimal(1).div(this.EditForm.Entity.ExchangeRateINV);\r\n        this.EditForm.UpdateView(true, false, \"ExchangeRateINV\", \"ExchangeRateINV2\");\r\n        this.ChangeDataFee();\r\n    },\r\n    ChangeExchangeRate: function () {\r\n        this.EditForm.Entity.ExchangeRateINV2 = this.Decimal(1).div(this.EditForm.Entity.ExchangeRateINV);\r\n        this.EditForm.UpdateView(true, false, \"ExchangeRateINV2\");\r\n        this.ChangeDataFee();\r\n    },\r\n    VatInvoice: function (com) {\r\n        if (this.EditForm.Entity.VatInvoiceId) {\r\n            this.OpenPopup(\"vatinvoice-editor\", { Id: this.EditForm.Entity.VatInvoiceId }, true);\r\n            return;\r\n        }\r\n        var exUSD = this.Decimal(this.Entity.ExchangeRateINV);\r\n        var entity = {\r\n            Id: this.Uuid7.NewGuid(),\r\n            StatusId: this.SalesFunction[\"APPROVE_VAT_INV\"] ? 3 : 1,\r\n            NoApproved: this.SalesFunction[\"APPROVE_VAT_INV\"] ? true : false,\r\n            VoucherTypeId: 12,\r\n            IssueInvoiceId: this.Entity.Id,\r\n            HblIds: this.EditForm.Entity.HblIds,\r\n            FileIds: this.EditForm.Entity.FileIds,\r\n            CustomerId: this.EditForm.Entity.VendorIds,\r\n            InsertedBy: this.Token.UserId,\r\n            InvoiceIds: this.EditForm.Entity.Id,\r\n            TypeId: 3,\r\n            IsMultiple: true,\r\n            ObhTypeId: 1,\r\n            ActionId: 2,\r\n            PostDate: this.dayjs().format('YYYY-MM-DDTHH:mm:ss'),\r\n            InvoiceDate: this.dayjs().format('YYYY-MM-DDTHH:mm:ss')\r\n        }\r\n        var company = this.EditForm.Entity.VendorIdsMasterData;\r\n        if (company.AssignmentInvId) {\r\n            company = company.AssignmentInv;\r\n        }\r\n        entity.DueDate = this.EditForm.Entity.DueDate;\r\n        entity.CompanyId = company.Id;\r\n        entity.CompanyIdText = company.CompanyNameInv;\r\n        entity.CompanyAddress = company.AddressInv;\r\n        entity.TaxCode = company.TaxCode;\r\n        var component = this.GET(\"ShipmentInvoiceDetail\");\r\n        var vatDetail = JSON.parse(JSON.stringify(component.Item.map(x => x.Entity)));\r\n        vatDetail.forEach(item => {\r\n            item.Id = this.Uuid7.NewGuid();\r\n            item.ShipmentFeeId = item.ShipmentFeeId;\r\n            item.InsertedBy = this.Token.UserId;\r\n            item.DescriptionIdText = item.Description ? item.Description.Name : null;\r\n            if (this.EditForm.Entity.CurrencyCode != \"VND\") {\r\n                item.ExchangeRateINV = this.Decimal(JSON.parse(localStorage.getItem(\"ExchangeRateVND\"))[item.CurrencyCode]);\r\n                item.ExchangeRateINV2 = item.ExchangeRateINV.div(exUSD);\r\n                var vat = this.Decimal(item.Vat || 0);\r\n                item.ExAmount = (this.Decimal(item.Amount).times(item.ExchangeRateINV)).toDP(0);\r\n                item.ExTotalAmount = (this.Decimal(item.ExAmount).times(item.Quantity)).toDP(0);\r\n                if (vat.isNegative()) {\r\n                    item.ExAmountTax = (this.Decimal(item.Vat).abs().times(item.ExchangeRateINV)).toDP(0);\r\n                } else {\r\n                    item.ExAmountTax = (this.Decimal(item.ExTotalAmount).times(vat.div(this.Decimal(100)))).toDP(0);\r\n                }\r\n                item.ExTotalAmountTax = this.Decimal(item.ExTotalAmount).plus(item.ExAmountTax);\r\n            }\r\n            else {\r\n                item.ExchangeRateINV = item.ExchangeRateINV;\r\n                item.ExchangeRateINV2 = item.ExchangeRateINV2;\r\n            }\r\n            item.IsManual = true;\r\n            item.IsLock = false;\r\n            item.NoSubmit = false;\r\n            item.IsInvoice = false;\r\n            item.IsPayment = false;\r\n            item.IsInvoice = false;\r\n            item.IsPaymentAcc = false;\r\n            item.IsDebtAcc = false;\r\n            item.IsPaid = false;\r\n        });\r\n        entity.ShipmentInvoiceDetail = vatDetail;\r\n        if (entity.ShipmentInvoiceDetail && entity.ShipmentInvoiceDetail.length > 0) {\r\n            const calculateTotal = (field) => entity.ShipmentInvoiceDetail.reduce((acc, x) => acc.plus(this.Decimal(x[field] || 0)), this.Decimal(0));\r\n            if (entity.IsMultiple) {\r\n                const totalAmount = calculateTotal(\"ExTotalAmount\").toDP(0);\r\n                const amountTax = calculateTotal(\"ExAmountTax\").toDP(0);\r\n                entity.TotalAmountTax = totalAmount.plus(amountTax);\r\n                entity.TotalAmount = totalAmount;\r\n                entity.AmountTax = amountTax;\r\n            }\r\n            else {\r\n                const totalAmount = calculateTotal(\"ExTotalAmount\").toDP(0);\r\n                const amountTax = (totalAmount.times(entity.VatInv || new this.Decimal(0)).div(100)).toDP(0);\r\n                const totalAmountTax = totalAmount.plus(amountTax);\r\n                entity.TotalAmountTax = totalAmountTax;\r\n                entity.TotalAmount = totalAmount;\r\n                entity.AmountTax = amountTax;\r\n            }\r\n        }\r\n        else {\r\n            entity.TotalAmountTax = this.Decimal(0);\r\n            entity.TotalAmount = this.Decimal(0);\r\n            entity.AmountTax = this.Decimal(0);\r\n        }\r\n        this.OpenPopup(\"vatinvoice-editor\", entity, false, { Dirty: true });\r\n    }\r\n}",
    "Events": "{\r\n    \"saved\": \"UpdateParent\"\r\n}",
    "EntityId": "ShipmentInvoice",
    "Active": true,
    "ComponentGroup": [
        {
            "Id": "00094060-0000-0000-8000-65447f83e2e4",
            "Order": 6,
            "ComponentType": "Section",
            "Label": "Invoice history",
            "ClassName": "card-body",
            "XxlCol": 12,
            "Active": true,
            "ParentId": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "XxlOuterColumn": 12,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "00fa4000-0000-0000-8000-af05bc46316c",
                    "FieldName": "ShipmentInvoice",
                    "Order": 3,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 200,
                    "Label": "ShipmentInvoice",
                    "ClassName": "sticky",
                    "ChildStyle": "height:330px;",
                    "Events": "{\r\n    \"click\": \"ViewDetail\"\r\n}",
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"select * from ShipmentInvoice as ds where (FileIds like '%{FileIds}%' and ActionId != 1 and TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from ShipmentInvoice as ds where (FileIds like '%{FileIds}%' and ActionId != 1 and TypeId = 1)\"\r\n}",
                    "RefName": "ShipmentInvoice",
                    "PreQuery": "{\r\n    \"FileIds\": this.EditForm.Entity.FileIds\r\n}",
                    "OrderBy": "ds.InsertedDate desc",
                    "ReportTypeId": 1
                }
            ]
        },
        {
            "Id": "00223f44-0000-0000-8000-f298eeda2d6f",
            "Order": 1,
            "ComponentType": "Section",
            "Label": "Invoice Infor",
            "ClassName": "card-body",
            "XxlCol": 12,
            "Active": true,
            "DisabledExp": "(this.Entity.ActionId != 2 && !this.Entity.Id.startsWith('-')) || [2, 3].includes(this.Entity.ProgressId) || this.Entity.ShipmentInvoiceId",
            "ParentId": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "XxlOuterColumn": 6,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "001d405c-0000-0000-8000-9d66d798fb79",
                    "FieldName": "IsSendPartner",
                    "Order": 4,
                    "ComponentType": "Checkbox",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Send Partner",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "002a4058-0000-0000-8000-31cd2147d9dd",
                    "FieldName": "PostDate",
                    "Order": 5,
                    "ComponentType": "Datepicker",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Post Date",
                    "ShowLabel": true,
                    "Disabled": true,
                    "Active": true,
                    "DisabledExp": "!this.Entity.Id.startsWith('-')",
                    "ReportTypeId": 1
                },
                {
                    "Id": "002a4058-0000-0000-8001-71cef67a518e",
                    "FieldName": "DueDate",
                    "Order": 8,
                    "ComponentType": "Datepicker",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Due Date",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "00314050-0000-0000-8000-13c2c6d0e659",
                    "FieldName": "PostOtherDate",
                    "Order": 14,
                    "ComponentType": "Datepicker",
                    "Column": 2,
                    "Row": 50,
                    "Label": "Date Other Ref",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "00314050-0000-0000-8001-b72e81da4ebb",
                    "FieldName": "RevisedDate",
                    "Order": 7,
                    "ComponentType": "Datepicker",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Revised Date",
                    "ShowLabel": true,
                    "Disabled": true,
                    "Active": true,
                    "DisabledExp": "true",
                    "ReportTypeId": 1
                },
                {
                    "Id": "00574088-0000-0000-8000-e36b5c3d13ec",
                    "FieldName": "InvoiceDate",
                    "Order": 6,
                    "ComponentType": "Datepicker",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Invoice Date",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "0060405c-0000-0000-8000-fb71db986413",
                    "FieldName": "InvoiceTypeId",
                    "Order": 2,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 3,
                    "Row": 100,
                    "Label": "Voucher Type",
                    "ShowLabel": true,
                    "DefaultVal": "1",
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Debit/Credit Note\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Invoice\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "ReportTypeId": 1
                },
                {
                    "Id": "009440e8-0000-0000-8000-2b53895b7210",
                    "FieldName": "Code",
                    "Order": 1,
                    "ComponentType": "Input",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Ref No",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "00a24000-0000-0000-8000-b79ba6281032",
                    "FieldName": "OtherCode",
                    "Order": 13,
                    "ComponentType": "Input",
                    "Column": 2,
                    "Row": 50,
                    "Label": "Other Ref No",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "00c440a4-0000-0000-8000-01270b0233cb",
                    "FieldName": "PaymentMethodId",
                    "Order": 12,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "Column": 2,
                    "Row": 100,
                    "Precision": 7,
                    "Label": "Method",
                    "ShowLabel": true,
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Bank\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Cash\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "ReportTypeId": 1
                },
                {
                    "Id": "00fd4060-0000-0000-8000-68ac436ab047",
                    "FieldName": "ActionId",
                    "Order": 3,
                    "ComponentType": "Select",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Status",
                    "ShowLabel": true,
                    "DefaultVal": "1",
                    "Active": true,
                    "Query": "if (this.EditForm.Entity.Id.startsWith('-') || this.EditForm.Entity.ActionId == 1) {\r\n    return [\r\n        {\r\n            \"Id\": 1,\r\n            \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #007bff;'><i class='fas fa-edit mr-1'></i>Draft</span>\"\r\n        },\r\n        {\r\n            \"Id\": 2,\r\n            \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #28a745;'><i class='fas fa-check-circle mr-1'></i>Issued</span>\"\r\n        },\r\n        {\r\n            \"Id\": 3,\r\n            \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #dc3545;'><i class='fas fa-ban mr-1'></i>Void</span>\"\r\n        }\r\n    ]\r\n}\r\nelse {\r\n    return [\r\n        {\r\n            \"Id\": 2,\r\n            \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #28a745;'><i class='fas fa-check-circle mr-1'></i>Issued</span>\"\r\n        },\r\n        {\r\n            \"Id\": 3,\r\n            \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #dc3545;'><i class='fas fa-ban mr-1'></i>Void</span>\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372e7-f9c3-77a4-b753-66d65ca2709e",
                    "FieldName": "ProgressId",
                    "Order": 15,
                    "ComponentType": "Select",
                    "FormatData": "{Description}",
                    "PlainText": "Select data",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Progress",
                    "ShowLabel": true,
                    "DefaultVal": "1",
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"To Do\",\r\n        \"Description\": \"<span style='padding: 5px 8px; border-radius: 10px; color: #fff; background-color: #95a5a6; display: inline-block;'> <i class='fal fa-clipboard-list mr-1'></i> To Do</span>\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"In Progress\",\r\n        \"Description\": \"<span style='padding: 5px 8px; border-radius: 10px; color: #fff; background-color: #3498db; display: inline-block;'><i class='fal fa-spinner fa-spin mr-1'></i> In Progress</span>\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"Complete\",\r\n        \"Description\": \"<span style='padding: 5px 8px; border-radius: 10px; color: #fff; background-color: #28a745; display: inline-block;'><i class='fal fa-check-circle mr-1'></i> Complete</span>\"\r\n    },\r\n    {\r\n        \"Id\": 4,\r\n        \"Name\": \"Pending\",\r\n        \"Description\": \"<span style='padding: 5px 8px; border-radius: 10px; color: #fff; background-color: #f39c12; display: inline-block;'><i class='fal fa-hourglass-half mr-1'></i> Pending</span>\"\r\n    },\r\n    {\r\n        \"Id\": 5,\r\n        \"Name\": \"Cancel\",\r\n        \"Description\": \"<span style='padding: 5px 8px; border-radius: 10px; color: #fff; background-color: #e74c3c; display: inline-block;'><i class='fal fa-times-circle mr-1'></i> Cancel</span>\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Description\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "ReportTypeId": 1
                },
                {
                    "Id": "019399d2-0d77-70fe-bab7-679cb1bbdda2",
                    "FieldName": "ExchangeRateINV",
                    "Order": 11,
                    "ComponentType": "Number",
                    "Column": 2,
                    "Row": 50,
                    "Precision": 3,
                    "Label": "USD => VND",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ChangeExchangeRate\"\r\n}",
                    "Active": true,
                    "GroupTypeId": "00ec1404-0000-0000-8000-858f8a4d5181",
                    "ReportTypeId": 1
                },
                {
                    "Id": "0195a3db-3bee-7551-90d9-88a7a611d60d",
                    "FieldName": "CurrencyId",
                    "Order": 10,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Code}",
                    "PlainText": "Select data",
                    "Column": 1,
                    "Row": 100,
                    "Label": "Currency",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
                    "DefaultVal": "00e70228-0000-0000-8000-af9d4b995deb",
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency' and ds.Name = 'VND'\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency' and ds.Name = 'VND'\"\r\n}",
                    "RefName": "MasterData",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Currency\", \"ComponentType\" : \"Input\" }]",
                    "OrderBy": "ds.Enum asc",
                    "ReportTypeId": 1
                }
            ]
        },
        {
            "Id": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "FieldName": "Container ",
            "Order": 3,
            "ComponentType": "Section",
            "ClassName": "scroll-content",
            "XxlCol": 12,
            "Active": true,
            "ReportTypeId": 1
        },
        {
            "Id": "00223fdc-0000-0000-8000-009a5f6a27ee",
            "FieldName": "Button",
            "Order": 1,
            "ComponentType": "Section",
            "ClassName": "ribbon-group",
            "XxlCol": 12,
            "Active": true,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "00223f50-0000-0000-8000-3c41117d4a45",
                    "FieldName": "btnSave",
                    "Order": 7,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Save",
                    "Icon": "fal fa-save",
                    "ClassName": "btn detail-button primary",
                    "HotKey": "Ctrl-S",
                    "Events": "{ \"click\" : \"Invoice\" }",
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "00624058-0000-0000-8000-e3d51ccacbfb",
                    "FieldName": "btnPrint",
                    "Order": 1,
                    "ComponentType": "Pdf",
                    "Column": 1,
                    "GroupFormat": "Print",
                    "Label": "Print INV One VAT",
                    "Icon": "fal fa-print",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{\r\n    \"click\": \"PrintPdf\"\r\n}",
                    "Active": true,
                    "Query": "WITH  hblnolist AS \r\n(\r\n SELECT\r\n s.HblNo AS hblNos,\r\n SUM(s.Quantity) AS quanty,\r\n s.ContainerText textc,\r\n si.Id AS idinv\r\nFROM ShipmentInvoice si\r\nCROSS APPLY STRING_SPLIT(si.HblIds, ',') AS split_hbl\r\nLEFT JOIN Shipment s ON s.Id = split_hbl.value\r\nwhere si.Id='{Id}'\r\nGROUP BY si.Id,s.Quantity,s.ContainerText,s.HblNo\r\n),\r\nCurrencySums AS (\r\n    SELECT \r\n       SUM(dt.Quantity*dt.Amount) AS TotalAmount,\r\n\t\tSUM(dt.TotalAmountTax) AS TotalAFT,\r\n\t\tSUM(ABS(dt.AmountTax)) AS TaxAmount,\r\n\t\tdt.Vat,\r\n        curr.Code AS CurrencyCode,\r\n\t\tcurr.IsLocal AS localcurr\r\n    FROM dbo.ShipmentInvoiceDetail dt\r\n    LEFT JOIN dbo.MasterData curr ON curr.Id = dt.CurrencyId\r\n\tLEFT JOIN dbo.ShipmentInvoice sm ON sm.Id=dt.ShipmentInvoiceId\r\n    WHERE sm.Id = '{Id}'\r\n    GROUP BY curr.Code,curr.IsLocal,dt.Vat\r\n),\r\nVAT AS \r\n (\r\n  SELECT (CASE WHEN ISNULL(smdt.Vat,0)=10 THEN ROUND(SUM(smdt.TotalAmount*smdt.ExchangeRateINV)*0.1,0) ELSE 0 END) AS tax10,\r\n         (CASE WHEN ISNULL(smdt.Vat,0)=8 THEN ROUND(SUM(smdt.TotalAmount*smdt.ExchangeRateINV)*0.08,0) ELSE 0 END) AS tax8,\r\n\t\t (CASE WHEN ISNULL(smdt.Vat,0)<0 THEN ROUND((ABS(smdt.Vat)*smdt.ExchangeRateINV),0) ELSE 0 END) AS taxOT,\r\n\t\t (CASE WHEN ISNULL(smdt.Vat,0)=5.26 THEN ROUND(SUM(smdt.TotalAmount*smdt.ExchangeRateINV)*0.0526,0) ELSE 0 END) AS tax5\r\n  FROM dbo.ShipmentInvoiceDetail smdt LEFT JOIN dbo.ShipmentInvoice sminv ON smdt.ShipmentInvoiceId=sminv.Id\r\n  WHERE sminv.Id='{Id}'\r\n  GROUP BY smdt.Vat,smdt.ExchangeRateINV\r\n ),\r\n Amountbft AS \r\n ( SELECT \r\n CASE WHEN (smv3.CurrencyCode IS NULL OR  smv3.CurrencyCode<>'VND') THEN dt3.TotalAmount \r\n ELSE ROUND(ROUND(dt3.Amount*dt3.ExchangeRateINV,0)*dt3.Quantity,0) END AS BFT\r\n FROM dbo.ShipmentInvoiceDetail dt3 JOIN dbo.ShipmentInvoice smv3 ON dt3.ShipmentInvoiceId=smv3.Id\r\n   WHERE smv3.Id='{Id}'\r\n   GROUP BY smv3.Id,smv3.CurrencyCode,dt3.TotalAmount,dt3.Amount,dt3.ExchangeRateINV,dt3.Quantity\r\n )\r\nSELECT sminv.VoucherTypeId, cus.CompanyName AS  Partnerv, \r\nISNULL(cus.Address,'') AS addv,\r\nISNULL(cus.PhoneNumber,'') AS Tel,\r\nISNULL(cus.Fax,'') AS Fax,\r\nISNULL(sminv.Code,'DRAFT') AS Invno,\r\nISNULL(FORMAT(sminv.InvoiceDate,'dd MMM, yyyy'),'') AS Dateinv,\r\nsm.MblNo AS MBLNo,\r\npol.Name AS POLName,\r\nPOD.Name AS PODName,\r\nISNULL(FORMAT(sm.EtdDate,'dd MMM'),'') AS ETD,\r\nISNULL(FORMAT(sm.EtaDate,'dd MMM'),'') AS ETA,\r\nISNULL(sm.Quantity,'') AS Volume,\r\n\r\n(ISNULL(sm.Vessel,'') + ' ' + ISNULL(sm.VesselVoy,'')) AS vessal ,\r\n\r\nCASE WHEN sminv.RevisedDate IS NOT NULL THEN '<Strong>Revised Date: </Strong>' +  ISNULL(FORMAT(sminv.RevisedDate,'dd MMM, yyy'),'') ELSE '' end AS Reviseddate,\r\nCASE \r\n\tWHEN sminv.InvoiceTypeId = 1 AND sminv.DebitAmount<0 THEN 'CREDIT NOTE'\r\n\tWHEN sminv.InvoiceTypeId = 1 AND sminv.DebitAmount>=0 THEN 'DEBIT NOTE'\r\nELSE\r\n\t'INVOICE'\r\nEND\r\nAS Titles,\r\nCASE WHEN sminv.CurrencyId IS NULL THEN 'Original Curr' ELSE curr.Name END AS Currinv,\r\nFORMAT(CASE WHEN sminv.CurrencyId IS NULL THEN 1 ELSE sminv.ExchangeRateINV END,'#,##.00') AS EXT,\r\ncurr.Code, \r\n\r\nISNULL(FORMAT(sminv.DueDate,'dd MMM, yy'),'') AS Duedate,\r\n \r\n(SELECT SUM(hblnolist.quanty) FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS Quantity1,\r\n(SELECT STRING_AGG(hblnolist.hblNos,'/') FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS HBLs,\r\n(SELECT STRING_AGG(hblnolist.textc,' & ') FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS conttext2,\r\nCASE WHEN sminv.CurrencyCode='VND' THEN \r\nCASE WHEN (SELECT SUM(VAT.tax8) FROM VAT WHERE VAT.tax8 IS NOT NULL )>0 THEN '8%: ' + CONVERT(VARCHAR(50),FORMAT((SELECT SUM(VAT.tax8) FROM VAT WHERE VAT.tax8 IS NOT NULL ) ,'N0') ) ELSE '' end \r\nELSE (SELECT '8% '+  STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), ' ') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.Vat=8)\r\nEND AS Tax8 ,\r\nCASE WHEN sminv.CurrencyCode='VND' THEN \r\nCASE WHEN ((SELECT SUM(VAT.tax10) FROM VAT WHERE VAT.tax10 IS NOT NULL )>0) THEN '10%: '+ CONVERT(VARCHAR(50), FORMAT((SELECT SUM(VAT.tax10) FROM VAT WHERE VAT.tax10 IS NOT NULL ),'N0')) ELSE ''  END \r\nELSE \r\n(SELECT '10%: '+  STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), ' ') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.Vat=10) END \r\nAS Tax10 ,\r\n\r\nCASE WHEN sminv.CurrencyCode='VND' THEN \r\nCASE WHEN ((SELECT SUM(VAT.tax5) FROM VAT WHERE VAT.tax5 IS NOT NULL )>0) THEN '5%: '+ CONVERT(VARCHAR(50),format((SELECT SUM(VAT.tax5) FROM VAT WHERE VAT.tax5 IS NOT NULL ),'N0')) ELSE '' END \r\nELSE \r\n(SELECT '5%: '+  STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), ' ') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.Vat LIKE '5.%') END \r\nAS Tax5 ,\r\nCASE  WHEN sminv.CurrencyCode='VND' THEN\r\nCASE WHEN ((SELECT SUM(VAT.taxOT) FROM VAT WHERE VAT.taxOT IS NOT NULL )>0) THEN 'OT Tax: '+ CONVERT(VARCHAR(50),format((SELECT SUM(VAT.taxOT) FROM VAT WHERE VAT.taxOT IS NOT NULL ),'N0') ) ELSE '' END \r\nELSE\r\n  (SELECT 'OT Tax: '+  STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), ' ') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.Vat<0)\r\nEND AS OTtax ,\r\n\r\nformat((SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL),'N0') AS BFT,\r\nFORMAT(((SELECT SUM(VAT.tax8) FROM VAT WHERE VAT.tax8 IS NOT NULL ) + (SELECT SUM(VAT.tax10) FROM VAT WHERE VAT.tax10 IS NOT NULL )+ (SELECT SUM(VAT.taxOT) FROM VAT WHERE VAT.taxOT IS NOT NULL ) + (SELECT SUM(VAT.tax5) FROM VAT WHERE VAT.tax5 IS NOT NULL ) + (SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL) ),'N0') AS TotalAFTAX,\r\n\r\n\r\nCASE WHEN sminv.CurrencyCode='VND' THEN format((SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL),'N0')\r\nELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(TotalAmount, 'N0')\r\n\tELSE FORMAT(TotalAmount,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE TotalAmount IS NOT NULL)\r\nEND AS AmountText,\r\nCASE WHEN sminv.CurrencyCode<> 'VND' THEN FORMAT(((SELECT SUM(VAT.tax8) FROM VAT WHERE VAT.tax8 IS NOT NULL ) + (SELECT SUM(VAT.tax10) FROM VAT WHERE VAT.tax10 IS NOT NULL )+ (SELECT SUM(VAT.taxOT) FROM VAT WHERE VAT.taxOT IS NOT NULL ) + (SELECT SUM(VAT.tax5) FROM VAT WHERE VAT.tax5 IS NOT NULL ) + (SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL) ),'N0') \r\nELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TotalAFT, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.TotalAFT IS NOT NULL)\r\nEND AS TotalAFTAX_bo,\r\nCASE WHEN sminv.CurrencyCode='VND' THEN format((SELECT SUM(VAT.tax8) FROM VAT WHERE VAT.tax8 IS NOT NULL ) + (SELECT SUM(VAT.tax10) FROM VAT WHERE VAT.tax10 IS NOT NULL ) +  (SELECT SUM(VAT.taxOT) FROM VAT WHERE VAT.taxOT IS NOT NULL ) +  (SELECT SUM(VAT.tax5) FROM VAT WHERE VAT.tax5 IS NOT NULL ),'N0')\r\nELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TaxAmount,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE TaxAmount IS NOT NULL)\r\nEND AS TotalVAT\r\n\r\nFROM dbo.ShipmentInvoice sminv LEFT JOIN dbo.Partner cus ON cus.Id=sminv.VendorIds\r\nLEFT JOIN dbo.Shipment sm ON sm.Id = sminv.FileIds\r\nLEFT JOIN dbo.MasterData curr ON curr.Id = sminv.CurrencyId\r\nLEFT JOIN dbo.Terminal pol ON pol.Id = sm.PolId \r\nLEFT JOIN dbo.Terminal POD ON POD.Id = sm.PodId\r\n WHERE sminv.Id='{Id}'\r\n\r\n \r\n\r\n\r\n SELECT\r\nFORMAT(CASE WHEN sminv.DebitAmount>= 0 AND dt.TypeId=2 THEN \r\n\t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END) * (-1)\r\n\r\nWHEN sminv.DebitAmount>= 0 AND dt.TypeId=1 THEN (\r\n\t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END))\r\n\r\nWHEN sminv.DebitAmount< 0 AND dt.TypeId=1 THEN (CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END) * (-1)\r\nELSE \t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END)\r\nEND,(CASE WHEN curr.Name='VND' THEN 'N0' ELSE 'N2' END)) AS AmountINV\r\n,FORMAT((CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\nELSE dt.Quantity * dt.Amount END),(CASE WHEN curr.Name='VND' THEN 'N0' ELSE 'N2' END))\r\nAS Amountvnd,\r\n\r\nfee.Name AS namefee,\r\nunit.Name AS unit, \r\nformat(dt.Quantity,'N{CQuantity}') AS Qty, \r\n FORMAT(dt.Amount,(CASE WHEN curdt.Name='VND' THEN 'N0' ELSE 'N2' END)) AS amountOG,\r\ncurdt.Code AS curdt,\r\nformat(dt.Vat,'N{CQuantity}') AS VAT,\r\nROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS Sott\r\n\r\n\r\nFROM dbo.ShipmentInvoice sminv LEFT JOIN dbo.Partner cus ON cus.Id=sminv.VendorIds\r\nLEFT JOIN dbo.ShipmentInvoiceDetail dt ON dt.ShipmentInvoiceId = sminv.Id \r\nLEFT JOIN dbo.Shipment sm ON sm.Id = sminv.ShipmentId\r\nLEFT JOIN dbo.MasterData curr ON curr.Id = sminv.CurrencyId\r\nLEFT JOIN dbo.FeeType fee ON fee.Id=dt.DescriptionId\r\nLEFT JOIN  dbo.MasterData curdt ON curdt.Id=dt.CurrencyId\r\nLEFT JOIN dbo.MasterData unit ON unit.Id=dt.UnitId\r\nLEFT JOIN dbo.Terminal pol ON pol.Id = sm.PolId \r\nLEFT JOIN dbo.Terminal POD ON POD.Id = sm.PodId\r\n WHERE sminv.Id='{Id}'\r\n  ORDER BY dt.[Order] ASC",
                    "Template": "<p>&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 99.8319%; height: 244.875px; border-style: hidden;\" border=\"0\"><colgroup><col style=\"width: 12.2065%;\"><col style=\"width: 1.76177%;\"><col style=\"width: 11.3257%;\"><col style=\"width: 25.4198%;\"><col style=\"width: 12.2065%;\"><col style=\"width: 1.63593%;\"><col style=\"width: 35.3612%;\"></colgroup>\n<tbody>\n<tr style=\"height: 19px;\">\n<td colspan=\"4\"><strong>BILL TO</strong></td>\n<td style=\"vertical-align: middle; text-align: center;\" colspan=\"3\" rowspan=\"3\">\n<div style=\"font-size: 28pt; min-width: 350px; display: inline-block; border-radius: 29px; border: 1px solid rgb(0, 0, 0); text-align: center; font-weight: 600;\">${Titles}</div>\n</td>\n</tr>\n<tr style=\"height: 17.75px;\">\n<td colspan=\"4\"><strong>${Partnerv}</strong></td>\n</tr>\n<tr style=\"height: 17.75px;\">\n<td colspan=\"4\">&nbsp;${addv}</td>\n</tr>\n<tr style=\"height: 22.6979px;\">\n<td colspan=\"4\">&nbsp;TELL: ${Tel} ${Fax}</td>\n<td style=\"text-align: center;\" colspan=\"3\" rowspan=\"2\">\n<div><strong>Number:</strong> ${Invno}</div>\n<p><strong>Date:</strong> ${Dateinv}</p>\n<p>${Reviseddate}</p>\n</td>\n</tr>\n<tr style=\"height: 25.9688px;\">\n<td colspan=\"4\">&nbsp;</td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n<tr style=\"height: 22.125px;\">\n<td><strong>MBL/MAWB</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${MBLNo}</td>\n<td><strong>Volume</strong></td>\n<td><strong>:</strong></td>\n<td>${conttext2}</td>\n</tr>\n<tr style=\"height: 21.0625px;\">\n<td><strong>HBL/HAWB</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${HBLs}</td>\n<td><strong>Q'ty</strong></td>\n<td><strong>:</strong></td>\n<td>${Quantity1}</td>\n</tr>\n<tr style=\"height: 22.9375px;\">\n<td><strong>POL/AOL</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${POLName}</td>\n<td><strong>ETD / ETA</strong></td>\n<td><strong>:</strong></td>\n<td>${ETD} / ${ETA}</td>\n</tr>\n<tr style=\"height: 22.9375px;\">\n<td><strong>POD/AOD</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${PODName}</td>\n<td><strong>VSL./ FLT.</strong></td>\n<td><strong>:</strong></td>\n<td>${vessal}</td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><strong>Currency:</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${Currinv}</td>\n<td><strong>Due Date</strong></td>\n<td><strong>:</strong></td>\n<td>${Duedate}</td>\n</tr>\n<tr style=\"height: 19.3125px;\">\n<td><strong>Ext rate</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${EXT}</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<table class=\"dashaze dashez dazhed dashed\" style=\"border-collapse: collapse; width: 100.21%; height: 113.063px; border-style: solid; border-width: 1px;\" border=\"1\"><colgroup><col style=\"width: 6.15836%;\"><col style=\"width: 24.3821%;\"><col style=\"width: 11.5626%;\"><col style=\"width: 11.5624%;\"><col style=\"width: 14.8306%;\"><col style=\"width: 7.79221%;\"><col style=\"width: 6.78676%;\"><col style=\"width: 16.9669%;\"></colgroup>\n<thead>\n<tr style=\"height: 22.625px;\">\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>No</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Description</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Quantity</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Unit</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Price</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>VAT %</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Curr.</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Amount</strong></td>\n</tr>\n</thead>\n<tbody data-table=\"c0\">\n<tr style=\"height: 21.4375px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{Sott}</p>\n</td>\n<td style=\"text-align: left; vertical-align: middle; border: 1px solid #000000;\">\n<p>{namefee}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{Qty}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{unit}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{amountOG}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{VAT}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{curdt}</p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: right;\">\n<p>{AmountINV}</p>\n</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid rgb(0, 0, 0);\" colspan=\"6\">\n<p><strong>Total Before Tax<br></strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\" colspan=\"2\">\n<p><strong>${BFT}</strong></p>\n</td>\n</tr>\n<tr style=\"height: 20.6667px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid rgb(0, 0, 0);\" colspan=\"6\">\n<p><strong>TAX Amount: ${Tax5} ${Tax8} ${Tax10} ${OTtax} </strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\" colspan=\"2\">\n<p><strong>${TotalVAT}</strong></p>\n</td>\n</tr>\n<tr style=\"height: 26.6667px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid rgb(0, 0, 0);\" colspan=\"6\">\n<p><strong> Total</strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\" colspan=\"2\">\n<p><strong>${TotalAFTAX}</strong></p>\n</td>\n</tr>\n</tfoot>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 41.9748%; height: 100px;\" border=\"1\"><colgroup><col style=\"width: 37.9101%;\"><col style=\"width: 4.81806%;\"><col style=\"width: 57.1715%;\"></colgroup>\n<tbody>\n<tr style=\"height: 16.6667px;\">\n<td colspan=\"2\"><span style=\"font-size: 13.3333px; white-space-collapse: collapse;\">BANKING DETAILS<br></span></td>\n<td><span style=\"font-size: 13.3333px; white-space-collapse: collapse;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td>ACCOUNT NAME<span style=\"font-size: 13.3333px;\"><br></span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">BANK NAME</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">BANK ADRESS</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">SWIFT CODE</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">ACCOUNT NO</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n</tbody>\n</table>",
                    "ShowHotKey": true,
                    "ShowExp": "!this.EditForm.Entity.Id.startsWith(\"-\")",
                    "ReportTypeId": 1
                },
                {
                    "Id": "01932e1d-d69f-70ef-9d75-f2053a7a486c",
                    "FieldName": "btnAddInvoice",
                    "Order": 6,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Refresh",
                    "Icon": "far fa-sync",
                    "ClassName": "btn detail-button secondary-outline",
                    "HotKey": "Ctrl-S",
                    "Events": "{\r\n    \"click\": \"AddInvoice\"\r\n}",
                    "Active": true,
                    "ShowExp": "!this.EditForm.Entity.ShipmentInvoiceId",
                    "ReportTypeId": 1
                },
                {
                    "Id": "01948ba5-fe50-7408-a258-c97391669d3e",
                    "FieldName": "btnVatInv",
                    "Order": 5,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "VAT Invoice",
                    "Icon": "far fa-file-invoice-dollar",
                    "ClassName": "btn detail-button secondary-outline",
                    "HotKey": "Ctrl-S",
                    "Events": "{\r\n    \"click\": \"VatInvoice\"\r\n}",
                    "Active": true,
                    "PreQuery": "{\r\n    \"ShipmentInvoiceId\" : this.EditForm.Entity.Id\r\n}",
                    "ShowExp": "this.EditForm.Entity.ActionId == 2 && this.Token.RoleNames.some(x => x.toUpperCase() == \"CREATE VATINV FROM DEBIT\") && !this.EditForm.Entity.VatInvoiceId",
                    "ReportTypeId": 1
                },
                {
                    "Id": "01959379-1940-725b-93f5-0d0481d78f58",
                    "FieldName": "btnPrint",
                    "Order": 2,
                    "ComponentType": "Pdf",
                    "Column": 1,
                    "GroupFormat": "Print",
                    "Label": "Print INV Multi VAT",
                    "Icon": "fal fa-print",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{\r\n    \"click\": \"PrintPdf\"\r\n}",
                    "Active": true,
                    "Query": "WITH  hblnolist AS \r\n(\r\n SELECT\r\n s.HblNo AS hblNos,\r\n SUM(s.Quantity) AS quanty,\r\n s.ContainerText textc,\r\n si.Id AS idinv\r\nFROM ShipmentInvoice si\r\nCROSS APPLY STRING_SPLIT(si.HblIds, ',') AS split_hbl\r\nLEFT JOIN Shipment s ON s.Id = split_hbl.value\r\nwhere si.Id='{Id}'\r\nGROUP BY si.Id,s.Quantity,s.ContainerText,s.HblNo\r\n),\r\nCurrencySums AS (\r\n  SELECT SUM(CASE WHEN (sm.DebitAmount>0 AND dt.TypeId=1) THEN  \r\n       (dt.Quantity*dt.Amount) \r\nWHEN sm.DebitAmount>0 AND dt.TypeId<>1 THEN \r\n\t   (dt.Quantity*dt.Amount) * (-1)\r\n\r\nWHEN sm.DebitAmount<0 AND dt.TypeId=1 THEN \r\n\t(dt.Quantity*dt.Amount)* (-1)\r\nWHEN sm.DebitAmount<0 AND dt.TypeId<>1 THEN \r\n\t(dt.Quantity*dt.Amount)\r\nEND)\r\nAS TotalAmount,\r\nSUM( CASE WHEN (sm.DebitAmount>0 AND dt.TypeId=1) THEN  \r\n\t\t(ABS(dt.AmountTax)) \r\nWHEN sm.DebitAmount>0 AND dt.TypeId<>1 THEN\r\n\t\t(ABS(dt.AmountTax)) * (-1)\r\nWHEN sm.DebitAmount<0 AND dt.TypeId=1 THEN \r\n\t\t(ABS(dt.AmountTax))* (-1)\r\nWHEN sm.DebitAmount<0 AND dt.TypeId<>1 THEN \r\n\t\t(ABS(dt.AmountTax)) \r\nEND ) AS TaxAmount,\r\nSUM ( CASE WHEN (sm.DebitAmount>0 AND dt.TypeId=1) THEN  \r\n\t\t( (dt.Quantity*dt.Amount) + ABS(dt.AmountTax)) \r\n\tWHEN sm.DebitAmount>0 AND dt.TypeId<>1 THEN\r\n\t\t((dt.Quantity*dt.Amount) + ABS(dt.AmountTax))  *(-1)\r\n\tWHEN sm.DebitAmount<0 AND dt.TypeId=1 THEN \r\n\t\t( (dt.Quantity*dt.Amount) + ABS(dt.AmountTax)) *(-1)\r\n\tWHEN sm.DebitAmount<0 AND dt.TypeId<>1 THEN\r\n\t\t( (dt.Quantity*dt.Amount) + (ABS(dt.AmountTax))) \r\n END)\r\nAS TotalAFT,\r\n        curr.Code AS CurrencyCode,\r\n\t\tcurr.IsLocal AS localcurr\r\n    FROM dbo.ShipmentInvoiceDetail dt\r\n    LEFT JOIN dbo.MasterData curr ON curr.Id = dt.CurrencyId\r\n\tLEFT JOIN dbo.ShipmentInvoice sm ON sm.Id=dt.ShipmentInvoiceId\r\n    WHERE sm.Id = '{Id}'\r\n    GROUP BY curr.Code,curr.IsLocal,sm.DebitAmount\r\n),\r\nVAT AS \r\n (SELECT \r\nCASE WHEN (sminv.DebitAmount>0 AND smdt.TypeId=1) THEN \r\n\t\tCASE WHEN ISNULL(smdt.Vat,0)>0  THEN \r\n\t\tROUND(ROUND(ROUND(smdt.Amount*smdt.ExchangeRateINV,0)*smdt.Quantity,0)*(smdt.Vat/100),0)\r\n\t\tWHEN smdt.Vat<0 THEN ROUND(ABS(smdt.Vat*smdt.ExchangeRateINV),0) \r\n\t\tELSE 0 END\t\r\n\tWHEN (sminv.DebitAmount>0 AND smdt.TypeId<> 1) THEN \r\n\t\t(CASE WHEN ISNULL(smdt.Vat,0)>0  THEN \r\n\t\tROUND(ROUND(ROUND(smdt.Amount*smdt.ExchangeRateINV,0)*smdt.Quantity,0)*(smdt.Vat/100),0)\r\n\t\tWHEN smdt.Vat<0 THEN ROUND(ABS(smdt.Vat*smdt.ExchangeRateINV),0) \r\n\t\tELSE 0 END\t)*(-1)\r\n\tWHEN (sminv.DebitAmount<0 AND smdt.TypeId= 1) then\r\n\t(CASE WHEN ISNULL(smdt.Vat,0)>0  THEN \r\n\t\tROUND(ROUND(ROUND(smdt.Amount*smdt.ExchangeRateINV,0)*smdt.Quantity,0)*(smdt.Vat/100),0)\r\n\t\tWHEN smdt.Vat<0 THEN ROUND(ABS(smdt.Vat*smdt.ExchangeRateINV),0) \r\n\t\tELSE 0 END\t)*(-1)\r\n\tWHEN (sminv.DebitAmount<0 AND smdt.TypeId<> 1) then\r\n\t(CASE WHEN ISNULL(smdt.Vat,0)>0  THEN \r\n\t\tROUND(ROUND(ROUND(smdt.Amount*smdt.ExchangeRateINV,0)*smdt.Quantity,0)*(smdt.Vat/100),0)\r\n\t\tWHEN smdt.Vat<0 THEN ROUND(ABS(smdt.Vat*smdt.ExchangeRateINV),0) \r\n\t\tELSE 0 END\t)\r\nEND \r\n\t\tAS vatsum\r\n\r\n  FROM dbo.ShipmentInvoiceDetail smdt LEFT JOIN dbo.ShipmentInvoice sminv ON smdt.ShipmentInvoiceId=sminv.Id\r\n  WHERE sminv.Id='{Id}'\r\n ),\r\n Amountbft AS \r\n ( SELECT CASE WHEN (smv3.DebitAmount>0 AND dt3.TypeId=1) THEN \r\n\t\tCASE WHEN smv3.CurrencyCode<>'VND'OR smv3.CurrencyCode IS NULL THEN dt3.TotalAmount\r\n\t\tELSE ROUND(ROUND(dt3.Amount*dt3.ExchangeRateINV,0)*dt3.Quantity,0) END \r\nWHEN smv3.DebitAmount>0 AND dt3.TypeId<>1 THEN \r\n\t\tCASE WHEN smv3.CurrencyCode<>'VND' OR smv3.CurrencyCode IS NULL THEN dt3.TotalAmount*(-1)\r\n\t\tELSE ROUND(ROUND(dt3.Amount*dt3.ExchangeRateINV,0)*dt3.Quantity,0)*(-1) END \r\nWHEN smv3.DebitAmount<0 AND dt3.TypeId=1 THEN \r\n\t\tCASE WHEN smv3.CurrencyCode<>'VND' OR smv3.CurrencyCode IS NULL THEN dt3.TotalAmount*(-1)\r\n\t\tELSE ROUND(ROUND(dt3.Amount*dt3.ExchangeRateINV,0)*dt3.Quantity,0)*(-1) END \r\nWHEN smv3.DebitAmount<0 AND dt3.TypeId<>1 THEN \r\n\t\tCASE WHEN smv3.CurrencyCode<>'VND' OR smv3.CurrencyCode IS NULL THEN dt3.TotalAmount\r\n\t\tELSE ROUND(ROUND(dt3.Amount*dt3.ExchangeRateINV,0)*dt3.Quantity,0) END \r\nEND AS BFT\r\n\r\n FROM dbo.ShipmentInvoiceDetail dt3 JOIN ShipmentInvoice smv3 ON dt3.ShipmentInvoiceId=smv3.Id\r\n   WHERE smv3.Id='{Id}'\r\n   GROUP BY smv3.Id,smv3.CurrencyCode,dt3.TotalAmount,dt3.Amount,dt3.ExchangeRateINV,dt3.Quantity,dt3.TypeId,smv3.DebitAmount\r\n )\r\nSELECT sminv.VoucherTypeId, cus.CompanyName AS  Partnerv, \r\nISNULL(cus.Address,'') AS addv,\r\nISNULL(cus.PhoneNumber,'') AS Tel,\r\nISNULL(cus.Fax,'') AS Fax,\r\nISNULL(sminv.Code,'DRAFT') AS Invno,\r\nISNULL(FORMAT(sminv.InvoiceDate,'dd MMM, yyyy'),'') AS Dateinv,\r\nsm.MblNo AS MBLNo,\r\npol.Name AS POLName,\r\nPOD.Name AS PODName,\r\nISNULL(FORMAT(sm.EtdDate,'dd MMM'),'') AS ETD,\r\nISNULL(FORMAT(sm.EtaDate,'dd MMM'),'') AS ETA,\r\nISNULL(sm.Quantity,'') AS Volume,\r\n\r\n(ISNULL(sm.Vessel,'') + ' ' + ISNULL(sm.VesselVoy,'')) AS vessal ,\r\n\r\nCASE WHEN sminv.RevisedDate IS NOT NULL THEN '<Strong>Revised Date: </Strong>' +  ISNULL(FORMAT(sminv.RevisedDate,'dd MMM, yyy'),'') ELSE '' end AS Reviseddate,\r\nCASE \r\n\tWHEN sminv.InvoiceTypeId = 1 AND sminv.DebitAmount<0 THEN 'CREDIT NOTE'\r\n\tWHEN sminv.InvoiceTypeId = 1 AND sminv.DebitAmount>=0 THEN 'DEBIT NOTE'\r\nELSE\r\n\t'INVOICE'\r\nEND\r\nAS Titles,\r\nCASE WHEN sminv.CurrencyId IS NULL THEN 'Original Curr' ELSE curr.Name END AS Currinv,\r\nFORMAT(CASE WHEN sminv.CurrencyId IS NULL THEN 1 ELSE sminv.ExchangeRateINV END,'#,##.00') AS EXT,\r\ncurr.Code, \r\n\r\nISNULL(FORMAT(sminv.DueDate,'dd MMM, yy'),'') AS Duedate,\r\n \r\n(SELECT SUM(hblnolist.quanty) FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS Quantity1,\r\n(SELECT STRING_AGG(hblnolist.hblNos,'/') FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS HBLs,\r\n(SELECT STRING_AGG(hblnolist.textc,' & ') FROM hblnolist WHERE hblnolist.idinv=sminv.Id) AS conttext2,\r\nformat((SELECT SUM(VAT.vatsum) FROM VAT WHERE VAT.vatsum IS NOT NULL ),'N0') AS TotalVAT ,\r\nformat((SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL),'N0') AS BFT,\r\nFORMAT(((SELECT SUM(VAT.vatsum) FROM VAT WHERE VAT.vatsum IS NOT NULL ) + (SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL) ),'N0') AS TotalAFTAX,\r\nCASE WHEN sminv.CurrencyCode='VND' THEN format((SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL),'N0') \r\nELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(TotalAmount, 'N0')\r\n\tELSE FORMAT(TotalAmount,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE TotalAmount IS NOT NULL)\r\nEND AS BFTText,\r\nCASE WHEN sminv.CurrencyCode='VND' THEN format((SELECT SUM(VAT.vatsum) FROM VAT WHERE VAT.vatsum IS NOT NULL ),'N0')\r\nELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TaxAmount, 'N0')\r\n\tELSE FORMAT(CurrencySums.TaxAmount,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE CurrencySums.TaxAmount IS NOT NULL)\r\nEND AS TotalVATTEXT,\r\n  CASE WHEN sminv.CurrencyCode='VND' THEN  FORMAT(((SELECT SUM(VAT.vatsum) FROM VAT WHERE VAT.vatsum IS NOT NULL ) + (SELECT SUM(BFT) FROM Amountbft WHERE Amountbft.BFT IS NOT NULL) ),'N0') \r\n ELSE (SELECT STRING_AGG(CONCAT((CASE WHEN CurrencySums.localcurr = 1 \tTHEN  FORMAT(CurrencySums.TotalAFT, 'N0')\r\n\tELSE FORMAT(CurrencySums.TotalAFT,'N02') END), ' ', CurrencyCode), '</br>') \r\n     FROM CurrencySums\r\n     WHERE TotalAmount IS NOT NULL) END \r\n AS TotalAFTAXTEXT\r\n\r\n\r\nFROM dbo.ShipmentInvoice sminv LEFT JOIN dbo.Partner cus ON cus.Id=sminv.VendorIds\r\nLEFT JOIN dbo.Shipment sm ON sm.Id = sminv.FileIds\r\nLEFT JOIN dbo.MasterData curr ON curr.Id = sminv.CurrencyId\r\nLEFT JOIN dbo.Terminal pol ON pol.Id = sm.PolId \r\nLEFT JOIN dbo.Terminal POD ON POD.Id = sm.PodId\r\n WHERE sminv.Id='{Id}'\r\n\r\n SELECT\r\nFORMAT(CASE WHEN sminv.DebitAmount>= 0 AND dt.TypeId=2 THEN \r\n\t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END) * (-1)\r\n\r\nWHEN sminv.DebitAmount>= 0 AND dt.TypeId=1 THEN (\r\n\t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END))\r\n\r\nWHEN sminv.DebitAmount< 0 AND dt.TypeId=1 THEN (CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END) * (-1)\r\nELSE \t(CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\n\tELSE dt.Quantity * dt.Amount END)\r\nEND,(CASE WHEN curr.Name='VND' THEN 'N0' ELSE 'N2' END)) AS AmountINV\r\n,FORMAT((CASE \r\n\tWHEN sminv.CurrencyId IS NULL THEN  dt.Quantity * dt.Amount \r\n\tWHEN curr.Code = 'VND'  THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0),0)\r\nELSE dt.Quantity * dt.Amount END),(CASE WHEN curr.Name='VND' THEN 'N0' ELSE 'N2' END))\r\nAS Amountvnd,\r\n\r\nformat(( \r\nCASE WHEN sminv.DebitAmount> 0 AND dt.TypeId=1 THEN \r\n    CASE WHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat>0 THEN  (dt.Quantity * dt.Amount) * (ISNULL(dt.Vat,0)/100)\r\n\tWHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat < 0 THEN ABS(dt.Vat)\r\n\tWHEN curr.Code = 'VND' AND dt.Vat>0 THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0)*(ISNULL(dt.Vat,0)/100),0)\r\n\t WHEN curr.Code = 'VND' AND dt.Vat<0 THEN ABS(dt.Vat)*dt.ExchangeRateINV\r\n\tELSE ROUND(dt.Quantity * dt.Amount * (ISNULL(dt.Vat,0)/100),0) END\r\nWHEN \tsminv.DebitAmount > 0 AND dt.TypeId<>1 THEN \r\n\t(CASE WHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat>0 THEN  (dt.Quantity * dt.Amount) * (ISNULL(dt.Vat,0)/100)\r\n\tWHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat < 0 THEN ABS(dt.Vat)\r\n\tWHEN curr.Code = 'VND' AND dt.Vat>0 THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0)*(ISNULL(dt.Vat,0)/100),0)\r\n\t WHEN curr.Code = 'VND' AND dt.Vat<0 THEN ABS(dt.Vat)*dt.ExchangeRateINV\r\n\tELSE ROUND(dt.Quantity * dt.Amount * (ISNULL(dt.Vat,0)/100),0) END)*(-1)\r\nWHEN sminv.DebitAmount < 0 AND dt.TypeId=1 THEN \r\n\t(CASE WHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat>0 THEN  (dt.Quantity * dt.Amount) * (ISNULL(dt.Vat,0)/100)\r\n\tWHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat < 0 THEN ABS(dt.Vat)\r\n\tWHEN curr.Code = 'VND' AND dt.Vat>0 THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0)*(ISNULL(dt.Vat,0)/100),0)\r\n\t WHEN curr.Code = 'VND' AND dt.Vat<0 THEN ABS(dt.Vat)*dt.ExchangeRateINV\r\n\tELSE ROUND(dt.Quantity * dt.Amount * (ISNULL(dt.Vat,0)/100),0) END)*(-1)\r\nWHEN sminv.DebitAmount < 0 AND dt.TypeId<>1 THEN \r\n\t(CASE WHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat>0 THEN  (dt.Quantity * dt.Amount) * (ISNULL(dt.Vat,0)/100)\r\n\tWHEN (sminv.CurrencyId IS NULL OR sminv.CurrencyCode <> 'VND') AND dt.Vat < 0 THEN ABS(dt.Vat)\r\n\tWHEN curr.Code = 'VND' AND dt.Vat>0 THEN ROUND(dt.Quantity * ROUND(dt.Amount*dt.ExchangeRateINV,0)*(ISNULL(dt.Vat,0)/100),0)\r\n\t WHEN curr.Code = 'VND' AND dt.Vat<0 THEN ABS(dt.Vat)*dt.ExchangeRateINV\r\n\tELSE ROUND(dt.Quantity * dt.Amount * (ISNULL(dt.Vat,0)/100),0) END)\r\nEND)\r\n, (CASE WHEN sminv.CurrencyCode='VND' then 'N0' else 'N02' end))\r\n\r\nAS AmtVAT,\r\n\r\nfee.Name AS namefee,\r\nunit.Name AS unit, \r\nformat(dt.Quantity,'N{CQuantity}') AS Qty, \r\n FORMAT(dt.Amount,(CASE WHEN curdt.Name='VND' THEN 'N0' ELSE 'N2' END)) AS amountOG,\r\ncurdt.Code AS curdt,\r\nformat(dt.Vat,'N{CQuantity}') AS VAT,\r\nROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS Sott\r\n\r\n\r\nFROM dbo.ShipmentInvoice sminv LEFT JOIN dbo.Partner cus ON cus.Id=sminv.VendorIds\r\nLEFT JOIN dbo.ShipmentInvoiceDetail dt ON dt.ShipmentInvoiceId = sminv.Id \r\nLEFT JOIN dbo.Shipment sm ON sm.Id = sminv.ShipmentId\r\nLEFT JOIN dbo.MasterData curr ON curr.Id = sminv.CurrencyId\r\nLEFT JOIN dbo.FeeType fee ON fee.Id=dt.DescriptionId\r\nLEFT JOIN  dbo.MasterData curdt ON curdt.Id=dt.CurrencyId\r\nLEFT JOIN dbo.MasterData unit ON unit.Id=dt.UnitId\r\nLEFT JOIN dbo.Terminal pol ON pol.Id = sm.PolId \r\nLEFT JOIN dbo.Terminal POD ON POD.Id = sm.PodId\r\n WHERE sminv.Id='{Id}'\r\n  ORDER BY dt.[Order] ASC",
                    "Template": "<p>&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 99.8319%; height: 226.542px; border-style: hidden;\" border=\"0\"><colgroup><col style=\"width: 12.2065%;\"><col style=\"width: 1.76177%;\"><col style=\"width: 11.3257%;\"><col style=\"width: 25.4198%;\"><col style=\"width: 12.2065%;\"><col style=\"width: 1.63593%;\"><col style=\"width: 35.3612%;\"></colgroup>\n<tbody>\n<tr style=\"height: 16.3333px;\">\n<td><strong>BILL TO</strong></td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td style=\"vertical-align: middle; text-align: center;\" colspan=\"3\" rowspan=\"3\">\n<div style=\"font-size: 28pt; min-width: 350px; display: inline-block; border-radius: 29px; border: 1px solid rgb(0, 0, 0); text-align: center; font-weight: 600;\">${Titles}</div>\n</td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td colspan=\"4\"><strong> ${Partnerv}</strong></td>\n</tr>\n<tr style=\"height: 17.75px;\">\n<td colspan=\"4\">&nbsp;${addv}</td>\n</tr>\n<tr style=\"height: 19.9375px;\">\n<td colspan=\"4\">&nbsp;TELL: ${Tel} ${Fax}</td>\n<td style=\"text-align: center;\" colspan=\"3\" rowspan=\"2\">\n<div><strong>Number:</strong> ${Invno}</div>\n<p><strong>Date:</strong> ${Dateinv}</p>\n<p>${Reviseddate}</p>\n</td>\n</tr>\n<tr style=\"height: 12.7292px;\">\n<td colspan=\"4\">&nbsp;</td>\n</tr>\n<tr style=\"height: 17.75px;\">\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n<tr style=\"height: 22.125px;\">\n<td><strong>MBL/MAWB</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${MBLNo}</td>\n<td><strong>Volume</strong></td>\n<td><strong>:</strong></td>\n<td>${conttext2}</td>\n</tr>\n<tr style=\"height: 21.0625px;\">\n<td><strong>HBL/HAWB</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${HBLs}</td>\n<td><strong>Q'ty</strong></td>\n<td><strong>:</strong></td>\n<td>${Quantity1}</td>\n</tr>\n<tr style=\"height: 22.9375px;\">\n<td><strong>POL/AOL</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${POLName}</td>\n<td><strong>ETD / ETA</strong></td>\n<td><strong>:</strong></td>\n<td>${ETD} / ${ETA}</td>\n</tr>\n<tr style=\"height: 22.9375px;\">\n<td><strong>POD/AOD</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${PODName}</td>\n<td><strong>VSL./ FLT.</strong></td>\n<td><strong>:</strong></td>\n<td>${vessal}</td>\n</tr>\n<tr style=\"height: 17px;\">\n<td><strong>Currency:</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${Currinv}</td>\n<td><strong>Due Date</strong></td>\n<td><strong>:</strong></td>\n<td>${Duedate}</td>\n</tr>\n<tr style=\"height: 19.3125px;\">\n<td><strong>Ext rate</strong></td>\n<td><strong>:</strong></td>\n<td colspan=\"2\">${EXT}</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<table class=\"dashaze dashez dazhed dashed\" style=\"border-collapse: collapse; width: 100.252%; height: 97.0625px; border-style: solid; border-width: 1px;\" border=\"1\"><colgroup><col style=\"width: 4.91194%;\"><col style=\"width: 20.5313%;\"><col style=\"width: 9.94789%;\"><col style=\"width: 8.06061%;\"><col style=\"width: 10.9574%;\"><col style=\"width: 7.55682%;\"><col style=\"width: 6.80114%;\"><col style=\"width: 15.7434%;\"><col style=\"width: 15.4915%;\"></colgroup>\n<thead>\n<tr style=\"height: 22.625px;\">\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>No</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Description</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Quantity</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Unit</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Price</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>VAT %</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Curr.</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid rgb(0, 0, 0);\"><strong>VAT Amount</strong></td>\n<td style=\"vertical-align: middle; text-align: center; border: 1px solid #000000;\"><strong>Amount</strong></td>\n</tr>\n</thead>\n<tbody data-table=\"c0\">\n<tr style=\"height: 25.125px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{Sott}</p>\n</td>\n<td style=\"text-align: left; vertical-align: middle; border: 1px solid #000000;\">\n<p>{namefee}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{Qty}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{unit}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{amountOG}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{VAT}</p>\n</td>\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid #000000;\">\n<p>{curdt}</p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: right;\">\n<p>{AmtVAT}</p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: right;\">\n<p>{AmountINV}</p>\n</td>\n</tr>\n</tbody>\n<tfoot>\n<tr style=\"height: 22.6458px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid rgb(0, 0, 0);\" colspan=\"7\">\n<p><strong>Sub Total </strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\">\n<p><strong>${TotalVATTEXT}<br></strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\">\n<p><strong>${BFTText}<br></strong></p>\n</td>\n</tr>\n<tr style=\"height: 26.6667px;\">\n<td style=\"text-align: center; vertical-align: middle; border: 1px solid rgb(0, 0, 0);\" colspan=\"7\">\n<p><strong>Total</strong></p>\n</td>\n<td style=\"vertical-align: middle; border: 1px solid rgb(0, 0, 0); text-align: center;\" colspan=\"2\">\n<p><strong>${TotalAFTAXTEXT}</strong></p>\n</td>\n</tr>\n</tfoot>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 41.9748%; height: 100px;\" border=\"1\"><colgroup><col style=\"width: 37.9101%;\"><col style=\"width: 4.81806%;\"><col style=\"width: 57.1715%;\"></colgroup>\n<tbody>\n<tr style=\"height: 16.6667px;\">\n<td colspan=\"2\"><span style=\"font-size: 13.3333px; white-space-collapse: collapse;\">BANKING DETAILS<br></span></td>\n<td><span style=\"font-size: 13.3333px; white-space-collapse: collapse;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td>ACCOUNT NAME<span style=\"font-size: 13.3333px;\"><br></span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">BANK NAME</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">BANK ADRESS</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">SWIFT CODE</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n<tr style=\"height: 16.6667px;\">\n<td><span style=\"font-size: 13.3333px;\">ACCOUNT NO</span></td>\n<td><span style=\"font-size: 13.3333px;\">:</span></td>\n<td><span style=\"font-size: 13.3333px;\">&nbsp;</span></td>\n</tr>\n</tbody>\n</table>",
                    "ShowHotKey": true,
                    "ShowExp": "!this.EditForm.Entity.Id.startsWith(\"-\")",
                    "ReportTypeId": 1
                },
                {
                    "Id": "0195d7fc-14de-7219-8bd9-b27d84ce5fce",
                    "FieldName": "btnVatInv",
                    "Order": 5,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "View VAT Invoice",
                    "Icon": "far fa-file-invoice-dollar",
                    "ClassName": "btn detail-button secondary-outline",
                    "HotKey": "Ctrl-S",
                    "Events": "{\r\n    \"click\": \"VatInvoice\"\r\n}",
                    "Active": true,
                    "PreQuery": "{\r\n    \"ShipmentInvoiceId\" : this.EditForm.Entity.Id\r\n}",
                    "ShowExp": "this.EditForm.Entity.VatInvoiceId",
                    "ReportTypeId": 1
                }
            ]
        },
        {
            "Id": "009e404c-0000-0000-8000-e82a7e3ddd30",
            "Order": 5,
            "ComponentType": "Section",
            "Label": "Invoice Infor",
            "ClassName": "card-body",
            "XxlCol": 12,
            "Active": true,
            "DisabledExp": "(this.Entity.ActionId != 2 && !this.Entity.Id.startsWith('-')) || [2, 3].includes(this.Entity.ProgressId) || this.Entity.ShipmentInvoiceId",
            "ParentId": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "XxlOuterColumn": 12,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "01932dbc-046d-7708-8b42-8e7be803bff0",
                    "FieldName": "ShipmentInvoiceDetail",
                    "Order": 2,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 200,
                    "CanCache": true,
                    "Label": "ShipmentInvoiceDetail",
                    "ClassName": "sticky",
                    "ChildStyle": "height:330px;",
                    "Events": "{\r\n    \"contextmenu\": \"AddContextMenu\",\r\n    \"FirstLoad\": \"FirstLoadGrid\"\r\n}",
                    "DefaultVal": "{\r\n    \"ShipmentInvoiceId\": this.Entity.Id\r\n}",
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"SELECT ds.[TypeId] AS [TypeId],\r\n    ISNULL(ds.[ShipmentInvoiceId], sf1.[ShipmentInvoiceId]) AS [ShipmentInvoiceId],\r\n    ds.[ShipmentId], ds.FileId,\r\n    ISNULL(ds.[VendorId], sf1.[VendorId]) AS [VendorId],\r\n    ISNULL(ds.[DescriptionId], sf1.[DescriptionId]) AS [DescriptionId],\r\n    ISNULL(ds.[TotalAmountTax], sf1.[TotalAmountTax]) AS [TotalAmountTax],\r\n    ISNULL(ds.[TotalAmount], sf1.[TotalAmount]) AS [TotalAmount],\r\n    ISNULL(ds.[AmountTax], sf1.[AmountTax]) AS [AmountTax],\r\n    ISNULL(ds.[Amount], sf1.[Amount]) AS [Amount],\r\n    ISNULL(ds.[Quantity], sf1.[Quantity]) AS [Quantity],\r\n    ISNULL(ds.[UnitId], sf1.[UnitId]) AS [UnitId],\r\n    ISNULL(ds.[Vat], sf1.[Vat]) AS [Vat],\r\n    ISNULL(ds.[CurrencyId], sf1.[CurrencyId]) AS [CurrencyId],\r\n    ISNULL(ds.[CurrencyCode], sf1.[CurrencyCode]) AS [CurrencyCode],\r\n    ISNULL(ds.[Tax], sf1.[Tax]) AS [Tax],\r\n    ISNULL(ds.[Notes], sf1.[Notes]) AS [Notes],\r\n    ISNULL(ds.[Docs], sf1.[Docs]) AS [Docs],\r\n    ISNULL(ds.[IsObh], sf1.[IsObh]) AS [IsObh],\r\n    ISNULL(ds.[ObhId], sf1.[ObhId]) AS [ObhId],\r\n    ISNULL(ds.[IsNoDocs], sf1.[IsNoDocs]) AS [IsNoDocs],\r\n    ISNULL(ds.[ExchangeRateVND], sf1.[ExchangeRateVND]) AS [ExchangeRateVND],\r\n    ISNULL(ds.[ExchangeRateUSD], sf1.[ExchangeRateUSD]) AS [ExchangeRateUSD],\r\n    ISNULL(ds.[IsContainer], sf1.[IsContainer]) AS [IsContainer],\r\n    ISNULL(ds.[IsCBM], sf1.[IsCBM]) AS [IsCBM],\r\n    ISNULL(ds.[IsFreight], sf1.[IsFreight]) AS [IsFreight],\r\n    ISNULL(ds.[IsLogistics], sf1.[IsLogistics]) AS [IsLogistics],\r\n    ISNULL(ds.[IsTrucking], sf1.[IsTrucking]) AS [IsTrucking],\r\n    ISNULL(ds.[IsKGS], sf1.[IsKGS]) AS [IsKGS], \r\n    ISNULL(ds.[IsGW], sf1.[IsGW]) AS [IsGW], \r\n    ISNULL(ds.[Order], sf1.[Order]) AS [Order],\r\n    ISNULL(ds.[ExchangeRate], sf1.[ExchangeRate]) AS [ExchangeRate],\r\n    ISNULL(ds.[SettlementNo], sf1.[SettlementNo]) AS [SettlementNo],\r\n    ISNULL(ds.[Active], sf1.[Active]) AS [Active],\r\n    ISNULL(ds.[InsertedDate], sf1.[InsertedDate]) AS [InsertedDate],\r\n    ISNULL(ds.[InsertedBy], sf1.[InsertedBy]) AS [InsertedBy],\r\n    ISNULL(ds.[UpdatedDate], sf1.[UpdatedDate]) AS [UpdatedDate],\r\n    ISNULL(ds.[UpdatedBy], sf1.[UpdatedBy]) AS [UpdatedBy],\r\n    ISNULL(ds.[BasedId], sf1.[BasedId]) AS [BasedId],\r\n    ISNULL(ds.[PmTypeId], sf1.[PmTypeId]) AS [PmTypeId],\r\n    CASE WHEN ds.IsLock = 0 THEN CONCAT('-', NEWID()) ELSE sf1.Id END AS Id,\r\n    '{TokenUserId}' AS InsertedBy, '{ShipmentInvoiceId}' AS ShipmentInvoiceId,\r\n    ds.Id AS ShipmentFeeId,\r\n    ds.IsLock as IsLock,\r\n    ds.IsAdvCustomer as IsAdvCustomer,\r\n    ds.IsLock as NoSubmit,\r\n    sf1.ExTotalAmountTax,\r\n    sf1.ExTotalAmount,\r\n    sf1.ExAmountTax,\r\n    sf1.ExAmount,\r\n    sf1.Payable,\r\n    sf1.Receivable,\r\n    isnull(sf1.ExchangeRateINV,ds.ExchangeRateVND) as ExchangeRateINV,\r\n    isnull(sf1.ExchangeRateINV2,ds.ExchangeRateUSD) as ExchangeRateINV2\r\n    FROM ShipmentFee AS ds \r\n    left join ShipmentInvoiceDetail as sf1 on ds.Id = sf1.ShipmentFeeId and (sf1.ShipmentInvoiceId = '{ShipmentInvoiceId}' or sf1.ShipmentInvoiceId = ds.ShipmentInvoiceId)\r\n    left join MasterData cr on ds.CurrencyId = cr.Id \r\n    WHERE (( '{ShipmentInvoiceId}' LIKE N'-%' AND ds.ShipmentId IN ('{HblIds}') \r\n    AND ds.VendorId in (SELECT value FROM STRING_SPLIT('{VendorIds}', ',')) AND ({FeeTypeId}) AND ('1' = '{ObhTypeId}' OR ( '2' = '{ObhTypeId}' and ( ds.ObhId IS NOT NULL OR ds.ParentId IS NOT NULL) OR ( '3' = '{ObhTypeId}' AND ds.ObhId IS NULL AND ds.ParentId IS NULL)))) OR ( '{ShipmentInvoiceId}' NOT LIKE N'-%' AND ds.Id IN ( SELECT ShipmentFeeId FROM ShipmentInvoiceDetail WHERE ShipmentInvoiceId = '{ShipmentInvoiceId}')))\",\r\n    \"total\": \"select count(ds.Id) as total from ShipmentFee as ds WHERE (( '{ShipmentInvoiceId}' LIKE N'-%' AND ds.ShipmentId IN ('{HblIds}') AND ds.VendorId in (SELECT value FROM STRING_SPLIT('{VendorIds}', ',')) AND ({FeeTypeId}) AND ('1' = '{ObhTypeId}' OR ( '2' = '{ObhTypeId}' and ( ds.ObhId IS NOT NULL OR ds.ParentId IS NOT NULL) OR ( '3' = '{ObhTypeId}' AND ds.ObhId IS NULL AND ds.ParentId IS NULL)))) OR ( '{ShipmentInvoiceId}' NOT LIKE N'-%' AND ds.Id IN ( SELECT ShipmentFeeId FROM ShipmentInvoiceDetail WHERE ShipmentInvoiceId = '{ShipmentInvoiceId}')))\"\r\n}",
                    "RefName": "ShipmentInvoiceDetail",
                    "PreQuery": "{\r\n    \"HblIds\": this.EditForm.Entity.HblIds.split(',').join(\"','\"),\r\n    \"MblIds\": this.EditForm.Entity.FileIds.split(',').join(\"','\"),\r\n    \"VendorIds\": this.EditForm.Entity.VendorIds,\r\n    \"ShipmentInvoiceId\": this.EditForm.Entity.Id,\r\n    \"ExchangeRateINV\": this.EditForm.Entity.ExchangeRateINV || 1,\r\n    \"ExchangeRateINV2\": this.EditForm.Entity.ExchangeRateINV2 || 1,\r\n    \"ObhTypeId\": this.EditForm.Entity.ObhTypeId,\r\n    \"FeeTypeId\": this.EditForm.Entity.FeeTypeId || \"1,2,3,4\",\r\n    \"Currency\": this.EditForm.Entity.Currency ? this.EditForm.Entity.Currency.Code : 'VND',\r\n    \"CurrencyId\": this.EditForm.Entity.CurrencyId\r\n}",
                    "IsSumary": true,
                    "Editable": true,
                    "OrderBy": "ds.ShipmentId asc",
                    "EntityId": "ShipmentInvoice",
                    "IsMultiple": true,
                    "ReportTypeId": 1
                }
            ]
        },
        {
            "Id": "019372dd-08df-71c3-a77e-c184b6e15352",
            "Order": 2,
            "ComponentType": "Section",
            "Label": "Request infor",
            "ClassName": "card-body",
            "XxlCol": 12,
            "Active": true,
            "DisabledExp": "(this.Entity.ActionId != 2 && !this.Entity.Id.startsWith('-')) || [2, 3].includes(this.Entity.ProgressId) || this.Entity.ShipmentInvoiceId",
            "ParentId": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "XxlOuterColumn": 6,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "019372de-97c0-76c1-9c05-1ccc10acdbd7",
                    "FieldName": "RequestTypeId",
                    "Order": 1,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 3,
                    "Row": 100,
                    "Label": "Request Type",
                    "ShowLabel": true,
                    "DefaultVal": "3",
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Payment\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Issue Tax\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372de-97c0-76c1-9c05-2358e87184ef",
                    "FieldName": "ReceiverIds",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{FullName}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "User Receiver",
                    "ShowLabel": true,
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [User] as ds where (TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from [User] as ds where (TypeId = 1)\"\r\n}",
                    "RefName": "User",
                    "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"NickName\", \"Label\" : \"NickName\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"DepartmentId\", \"Label\" : \"Department\", \"ComponentType\" : \"Dropdown\", \"RefName\":\"MasterData\",\"FormatData\" : \"{Name}\" }]",
                    "IsMultiple": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372df-6402-72ed-8e41-daa4e9e7347a",
                    "FieldName": "DeadlineDate",
                    "Order": 2,
                    "ComponentType": "Datepicker",
                    "Column": 3,
                    "Row": 50,
                    "Label": "Deadline",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372e7-2610-72b0-84f2-9ed20b0291ee",
                    "FieldName": "Remark",
                    "Order": 4,
                    "ComponentType": "Textarea",
                    "Column": 12,
                    "RowSpan": 3,
                    "Row": 4,
                    "Label": "Remark",
                    "ShowLabel": true,
                    "Active": true,
                    "ReportTypeId": 1
                }
            ]
        },
        {
            "Id": "019372e0-2d7b-7410-9c68-cd2b03a693c6",
            "Order": 3,
            "ComponentType": "Section",
            "Label": "Filter Option",
            "ClassName": "card-body",
            "XxlCol": 24,
            "Active": true,
            "DisabledExp": "(this.Entity.ActionId != 2 && !this.Entity.Id.startsWith('-')) || [2, 3].includes(this.Entity.ProgressId) || this.Entity.ShipmentInvoiceId",
            "ParentId": "00223fb4-0000-0000-8000-a812d69d8f2e",
            "XxlOuterColumn": 12,
            "ReportTypeId": 1,
            "Components": [
                {
                    "Id": "019372e1-8223-7171-bff2-f1ebb1df2563",
                    "FieldName": "VendorIds",
                    "Order": 1,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 4,
                    "Row": 100,
                    "Label": "Partner",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('provider-editor',{ ServiceId: 3, ActionId: 1})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('provider-editor',this.Matched)\",\r\n    \"change\": \"ChangeDataFee\"\r\n}",
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"select * from Partner as ds where Id in (select distinct VendorId from ShipmentFee where ShipmentId in ('{HblIds}'))\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds where Id in (select distinct VendorId from ShipmentFee where ShipmentId in ('{HblIds}'))\"\r\n}",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "PreQuery": "{\r\n    \"HblIds\": this.EditForm.Entity.HblIds.split(',').join(\"','\"),\r\n    \"MblIds\": this.EditForm.Entity.FileIds.split(',').join(\"','\")\r\n}",
                    "DisabledExp": "[2,3].includes(this.EditForm.Entity.StatusId) || !this.Entity.Id.startsWith('-')",
                    "ShowHotKey": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372e1-8224-7582-8d7c-81603e2d2f06",
                    "FieldName": "ObhTypeId",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 4,
                    "Row": 100,
                    "Label": "On Behalf",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
                    "DefaultVal": "1",
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Include\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Only\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"Exclude\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "DisabledExp": "[2,3].includes(this.EditForm.Entity.StatusId) || !this.Entity.Id.startsWith('-')",
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372e2-5304-7270-91fe-0224045fd9d1",
                    "FieldName": "FeeTypeId",
                    "Order": 5,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 4,
                    "Row": 100,
                    "Label": "AR/AP",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
                    "DefaultVal": "ds.TypeId in (1,2,3,4)",
                    "Active": true,
                    "Query": "[\r\n    {\r\n        \"Id\": \"ds.TypeId in (1,2,3,4)\",\r\n        \"Name\": \"ALL\"\r\n    },\r\n    {\r\n        \"Id\": \"(ds.TypeId = 1 or (ds.TypeId in (3,4) and ds.IsAdvCustomer = 1))\",\r\n        \"Name\": \"Receivable\"\r\n    },\r\n    {\r\n        \"Id\": \"(ds.TypeId = 2 or (ds.TypeId in (3,4) and ds.IsAdvCustomer = 0))\",\r\n        \"Name\": \"Payable\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
                    "DisabledExp": "[2,3].includes(this.EditForm.Entity.StatusId) || !this.Entity.Id.startsWith('-')",
                    "ReportTypeId": 1
                },
                {
                    "Id": "019372e3-4e45-743d-ba61-5578e8188f52",
                    "FieldName": "FileNo",
                    "Order": 2,
                    "ComponentType": "Input",
                    "Column": 4,
                    "Row": 50,
                    "Label": "File No",
                    "ShowLabel": true,
                    "Disabled": true,
                    "Active": true,
                    "RefName": "Shipment",
                    "OrderBy": "ds.Code asc,ds.SeqKey asc",
                    "IsMultiple": true,
                    "ReportTypeId": 1
                },
                {
                    "Id": "01937740-1c00-750c-b8ca-a75f7a1fab98",
                    "FieldName": "HblIds",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{HblNo}",
                    "PlainText": "Select data",
                    "Column": 8,
                    "Row": 100,
                    "Label": "Hbl No",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
                    "Active": true,
                    "Query": "{\r\n    \"sql\": \"select * from Shipment as ds where ParentId = '{FileIds}'\",\r\n    \"total\": \"select count(ds.Id) as total from Shipment as ds where ParentId = '{FileIds}'\"\r\n}",
                    "RefName": "Shipment",
                    "Template": "[{ \"FieldName\" : \"HblNo\", \"Label\" : \"Hbl No\", \"ComponentType\" : \"Input\" }]",
                    "PreQuery": "{\r\n    \"FileIds\": this.EditForm.Entity.FileIds\r\n}",
                    "DisabledExp": "[2,3].includes(this.EditForm.Entity.StatusId) || !this.Entity.Id.startsWith('-')",
                    "EntityId": "CopyJob",
                    "IsMultiple": true,
                    "ReportTypeId": 1
                }
            ]
        }
    ],
    "GridPolicies": [
        {
            "Id": "001940c8-0000-0000-8000-2e0e9a9a3aec",
            "FieldName": "ExchangeRateINV",
            "Order": 7,
            "ComponentType": "Number",
            "Precision": 3,
            "Label": "Exchange Rate",
            "Events": "{\r\n    \"change\": \"ChangeExchangeRate2\"\r\n}",
            "Width": "101px",
            "Active": true,
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "101px",
            "MaxWidth": "101px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00ec1404-0000-0000-8000-858f8a4d5181",
            "ReportTypeId": 1
        },
        {
            "Id": "00434074-0000-0000-8000-2ec76ab138e4",
            "FieldName": "Payable",
            "Order": 9,
            "ComponentType": "Number",
            "Label": "Payable",
            "Events": "{\r\n    \"input\": \"CalcUnitPrice\"\r\n}",
            "Disabled": true,
            "Width": "142px",
            "Active": true,
            "FocusSearch": true,
            "IsSumary": true,
            "Summary": "Total",
            "SummaryColSpan": 3,
            "MinWidth": "142px",
            "MaxWidth": "142px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00eb142c-0000-0000-8000-2945bf4c2c78",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf4034-0000-0000-8000-bdc96943038e",
            "FieldName": "CurrencyId",
            "Order": 6,
            "ComponentType": "Dropdown",
            "FormatData": "{Code}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Currency",
            "Events": "{\"change\":\"CheckCurrency\"}",
            "Disabled": true,
            "Width": "99px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency'\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency'\"\r\n}",
            "RefName": "MasterData",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Currency\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "99px",
            "MaxWidth": "99px",
            "OrderBy": "ds.Enum asc",
            "EntityId": "ShipmentInvoiceDetail",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf4034-0000-0000-8001-8921e0aae01a",
            "FieldName": "Receivable",
            "Order": 10,
            "ComponentType": "Number",
            "Precision": 2,
            "GroupFormat": "const vndItems = this.ChildrenItems.map(x => x.Entity);\r\n\r\nconst vndAmount = vndItems.length === 0\r\n    ? ''\r\n    : vndItems\r\n        .reduce((a, b) => a.plus(b.Receivable || 0), new this.Decimal(0))\r\n        .toFixed(0)\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\nreturn vndAmount;",
            "Label": "Receivable",
            "Events": "{\r\n    \"input\": \"CalcUnitPrice\"\r\n}",
            "Disabled": true,
            "Width": "110px",
            "Active": true,
            "FocusSearch": true,
            "IsSumary": true,
            "Summary": "Total",
            "SummaryColSpan": 3,
            "MinWidth": "110px",
            "MaxWidth": "110px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00eb142c-0000-0000-8000-2945bf4c2c78",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf40d0-0000-0000-8001-f9d6b9eef11c",
            "FieldName": "DescriptionId",
            "Order": 2,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Description",
            "Events": "{\r\n    \"change\": \"UpdateGroupFee\"\r\n}",
            "Width": "286px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select * from FeeType as ds\",\r\n    \"total\": \"select count(ds.Id) as total from FeeType as ds\"\r\n}",
            "RefName": "FeeType",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Description\", \"Label\" : \"Description\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"GroupId\", \"Label\" : \"Group\", \"ComponentType\" : \"Dropdown\", \"RefName\" : \"MasterData\", \"FormatData\" : \"{Name}\" }]",
            "DisabledExp": "this.Entity.NoSubmit",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "286px",
            "MaxWidth": "286px",
            "OrderBy": "ds.IsFreight desc",
            "EntityId": "ShipmentInvoiceDetail",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf40d0-0000-0000-8002-2651a4d17663",
            "FieldName": "Quantity",
            "Order": 3,
            "ComponentType": "Number",
            "Precision": 3,
            "Label": "Quantity",
            "Events": "{\r\n    \"change\": \"CalcPrice\"\r\n}",
            "Width": "102px",
            "Active": true,
            "DisabledExp": "this.Entity.NoSubmit",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "102px",
            "MaxWidth": "102px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00d41484-0000-0000-8000-7725fc908bab",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf40d0-0000-0000-8003-e59cbb1c1e33",
            "FieldName": "UnitId",
            "Order": 4,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Unit",
            "Width": "90px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name in (N'Unit Type','LTL Type')\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name in (N'Unit Type','LTL Type')\"\r\n}",
            "RefName": "MasterData",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\"\r\n    },\r\n    {\r\n        \"FieldName\": \"Description\",\r\n        \"Label\": \"Description\",\r\n        \"ComponentType\": \"Input\"\r\n    }\r\n]",
            "DisabledExp": "this.Entity.NoSubmit",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "90px",
            "MaxWidth": "90px",
            "EntityId": "ShipmentInvoiceDetail",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf40d0-0000-0000-8004-d5c13e1b65d9",
            "FieldName": "Amount",
            "Order": 5,
            "ComponentType": "Number",
            "Precision": 3,
            "Label": "Unit Price",
            "Events": "{\r\n    \"change\": \"CalcPrice\"\r\n}",
            "Width": "93px",
            "Active": true,
            "DisabledExp": "this.Entity.NoSubmit",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "93px",
            "MaxWidth": "93px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00ec1404-0000-0000-8000-858f8a4d5181",
            "ReportTypeId": 1
        },
        {
            "Id": "00bf40d0-0000-0000-8005-c9ff6384d12c",
            "FieldName": "Vat",
            "Order": 8,
            "ComponentType": "Number",
            "Precision": 2,
            "Label": "VAT",
            "Events": "{\r\n    \"change\": \"CalcPrice\"\r\n}",
            "Width": "127px",
            "Active": true,
            "DisabledExp": "this.Entity.NoSubmit",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "127px",
            "MaxWidth": "127px",
            "EntityId": "ShipmentInvoiceDetail",
            "GroupTypeId": "00d41484-0000-0000-8000-7725fc908bab",
            "ReportTypeId": 1
        },
        {
            "Id": "00f340cc-0000-0000-8000-0563f6f4b421",
            "FieldName": "ShipmentId",
            "Order": 0,
            "ComponentType": "Dropdown",
            "FormatData": "{HblNo}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "HBL",
            "Width": "118px",
            "Active": true,
            "RefName": "Shipment",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
            "FocusSearch": true,
            "MinWidth": "118px",
            "MaxWidth": "118px",
            "EntityId": "ShipmentInvoiceDetail",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-0469-7659-acf9-72baa6e5adff",
            "FieldName": "VoucherTypeId",
            "Order": 8,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Column": 2,
            "Row": 100,
            "Label": "Voucher Type",
            "ShowLabel": true,
            "Disabled": true,
            "Width": "133px",
            "DefaultVal": "2",
            "Active": true,
            "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Debit/Credit Note\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Invoice\"\r\n    }\r\n]",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "133px",
            "MaxWidth": "133px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046a-7117-bcf4-c31b8780b8f1",
            "FieldName": "EntityIds",
            "Order": 9,
            "ComponentType": "Dropdown",
            "FormatData": "{Code}",
            "PlainText": "Select data",
            "Column": 6,
            "Row": 100,
            "Label": "File No",
            "ShowLabel": true,
            "Events": "{\r\n    \"change\":\"ChangeFileNo\"\r\n}",
            "Width": "142px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select * from Shipment as ds where ((ds.InsertedBy = '{TokenUserId}' or ds.UserApprovedIds like '%{TokenUserId}%' or ds.UserViewIds like '%{TokenUserId}%' or (ds.ReceiverIds like '%{TokenUserId}%' and ds.StatusId = 3) or (ds.ForwardId = '{TokenUserId}' and ds.StatusId = 3)) and TypeId = 1 and ParentId is null)\",\r\n    \"total\": \"select count(ds.Id) as total from Shipment as ds where ((ds.InsertedBy = '{TokenUserId}' or ds.UserApprovedIds like '%{TokenUserId}%' or ds.UserViewIds like '%{TokenUserId}%' or (ds.ReceiverIds like '%{TokenUserId}%' and ds.StatusId = 3) or (ds.ForwardId = '{TokenUserId}' and ds.StatusId = 3)) and TypeId = 1 and ParentId is null)\"\r\n}",
            "RefName": "Shipment",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Code\",\r\n        \"Label\": \"File No\",\r\n        \"ComponentType\": \"Input\"\r\n    },\r\n    {\r\n        \"FieldName\": \"MblNo\",\r\n        \"Label\": \"MBL No\",\r\n        \"ComponentType\": \"Input\"\r\n    }\r\n]",
            "MinWidth": "142px",
            "MaxWidth": "142px",
            "OrderBy": "ds.Code asc,ds.SeqKey asc",
            "EntityId": "ShipmentInvoice",
            "IsMultiple": true,
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046a-7117-bcf4-c8d4ba5a5334",
            "FieldName": "HblIds",
            "Order": 10,
            "ComponentType": "Dropdown",
            "FormatData": "{HblNo}",
            "PlainText": "Select data",
            "Column": 6,
            "Row": 100,
            "Label": "HBL",
            "ShowLabel": true,
            "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
            "Width": "162px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select * from Shipment as ds where ((ds.InsertedBy = '{TokenUserId}' or ds.UserApprovedIds like '%{TokenUserId}%' or ds.UserViewIds like '%{TokenUserId}%' or (ds.ReceiverIds like '%{TokenUserId}%' and ds.StatusId = 3) or (ds.ForwardId = '{TokenUserId}' and ds.StatusId = 3)) and TypeId = 1 and ParentId in ('{ParentIds}'))\",\r\n    \"total\": \"select count(ds.Id) as total from Shipment as ds where ((ds.InsertedBy = '{TokenUserId}' or ds.UserApprovedIds like '%{TokenUserId}%' or ds.UserViewIds like '%{TokenUserId}%' or (ds.ReceiverIds like '%{TokenUserId}%' and ds.StatusId = 3) or (ds.ForwardId = '{TokenUserId}' and ds.StatusId = 3)) and TypeId = 1 and ParentId in ('{ParentIds}'))\"\r\n}",
            "RefName": "Shipment",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"ParentId\",\r\n        \"Label\": \"File No\",\r\n        \"ComponentType\": \"Dropdown\",\r\n        \"RefName\": \"Shipment\",\r\n        \"FormatData\": \"{Code}\"\r\n    },\r\n    {\r\n        \"FieldName\": \"HblNo\",\r\n        \"Label\": \"Hbl No\",\r\n        \"ComponentType\": \"Input\"\r\n    }\r\n]",
            "PreQuery": "{\r\n    \"ParentIds\": this.Entity.EntityIds.split(',').join(\"','\")\r\n}",
            "MinWidth": "162px",
            "MaxWidth": "162px",
            "OrderBy": "ds.Code asc,ds.SeqKey asc",
            "EntityId": "ShipmentInvoice",
            "IsMultiple": true,
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046a-7117-bcf4-cdfae74cea63",
            "FieldName": "ObhTypeId",
            "Order": 12,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Column": 3,
            "Row": 100,
            "Label": "OBH",
            "ShowLabel": true,
            "Width": "94px",
            "DefaultVal": "1",
            "Active": true,
            "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"ALL\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Include\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"Exclude\"\r\n    }\r\n]",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "MinWidth": "94px",
            "MaxWidth": "94px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046b-7228-b4fd-22e22396c750",
            "FieldName": "FeeTypeId",
            "Order": 13,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Column": 3,
            "Row": 100,
            "Label": "AR/AP",
            "ShowLabel": true,
            "Width": "96px",
            "DefaultVal": "ds.TypeId in (1,2,3,4)",
            "Active": true,
            "Query": "[\r\n    {\r\n        \"Id\": \"ds.TypeId in (1,2,3,4)\",\r\n        \"Name\": \"ALL\"\r\n    },\r\n    {\r\n        \"Id\": \"(ds.TypeId = 1 or (ds.TypeId in (3,4) and ds.IsAdvCustomer = 1))\",\r\n        \"Name\": \"Receivable\"\r\n    },\r\n    {\r\n        \"Id\": \"(ds.TypeId = 2 or (ds.TypeId in (3,4) and ds.IsAdvCustomer = 0))\",\r\n        \"Name\": \"Payable\"\r\n    }\r\n]",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "MinWidth": "96px",
            "MaxWidth": "96px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046b-7228-b4fd-27f1716d9322",
            "FieldName": "ActionId",
            "Order": 2,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Column": 2,
            "Row": 100,
            "Label": "Status",
            "ShowLabel": true,
            "Width": "97px",
            "DefaultVal": "1",
            "Active": true,
            "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #007bff;'><i class='fas fa-edit mr-1'></i>Draft</span>\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #28a745;'><i class='fas fa-check-circle mr-1'></i>Issued</span>\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #dc3545;'><i class='fas fa-ban mr-1'></i>Void</span>\"\r\n    }\r\n]\r\n",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "97px",
            "MaxWidth": "97px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046b-7228-b4fd-2fea57b0557e",
            "FieldName": "Remark",
            "Order": 15,
            "ComponentType": "Textarea",
            "Column": 4,
            "Row": 4,
            "Label": "Remark",
            "ShowLabel": true,
            "Width": "130px",
            "Active": true,
            "MinWidth": "130px",
            "MaxWidth": "130px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046b-7228-b4fd-337bdcd33135",
            "FieldName": "Code",
            "Order": 0,
            "ComponentType": "Input",
            "Column": 2,
            "Row": 50,
            "Label": "Code",
            "ShowLabel": true,
            "Width": "131px",
            "Active": true,
            "FocusSearch": true,
            "MinWidth": "131px",
            "MaxWidth": "131px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046b-7228-b4fd-342a93955a3f",
            "FieldName": "RevisedDate",
            "Order": 7,
            "ComponentType": "Datepicker",
            "Column": 2,
            "Row": 50,
            "Label": "Revised Date",
            "ShowLabel": true,
            "Width": "113px",
            "Active": true,
            "FocusSearch": true,
            "MinWidth": "113px",
            "MaxWidth": "113px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-9e3d2b52ce3f",
            "FieldName": "PostOtherDate",
            "Order": 6,
            "ComponentType": "Datepicker",
            "Column": 2,
            "Row": 50,
            "Label": "Date of Other Ref",
            "ShowLabel": true,
            "Width": "117px",
            "Active": true,
            "MinWidth": "117px",
            "MaxWidth": "117px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-a06e3bd64ca9",
            "FieldName": "DueDate",
            "Order": 5,
            "ComponentType": "Datepicker",
            "Column": 2,
            "Row": 50,
            "Label": "Due Date",
            "ShowLabel": true,
            "Width": "81px",
            "Active": true,
            "MinWidth": "81px",
            "MaxWidth": "81px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-a7b3c11be5be",
            "FieldName": "PostDate",
            "Order": 4,
            "ComponentType": "Datepicker",
            "Column": 2,
            "Row": 50,
            "Label": "Post Date",
            "ShowLabel": true,
            "Width": "95px",
            "Active": true,
            "FocusSearch": true,
            "MinWidth": "95px",
            "MaxWidth": "95px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-a91a9b214acb",
            "FieldName": "DebitAmount",
            "Order": 3,
            "ComponentType": "Number",
            "Column": 2,
            "Row": 50,
            "Label": "Amount",
            "ShowLabel": true,
            "Width": "125px",
            "Active": true,
            "FocusSearch": true,
            "MinWidth": "125px",
            "MaxWidth": "125px",
            "EntityId": "ShipmentInvoice",
            "GroupTypeId": "00eb142c-0000-0000-8000-2945bf4c2c78",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-adf6e242422d",
            "FieldName": "MblNos",
            "Order": 11,
            "ComponentType": "Input",
            "Column": 3,
            "Row": 50,
            "Label": "MBL",
            "ShowLabel": true,
            "Width": "77px",
            "Active": true,
            "MinWidth": "77px",
            "MaxWidth": "77px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-b004e3e9971e",
            "FieldName": "ExchangeRateUSD",
            "Order": 14,
            "ComponentType": "Number",
            "Column": 2,
            "Row": 50,
            "Precision": 0,
            "Label": "Exchange Rate",
            "ShowLabel": true,
            "Events": "{\r\n    \"change\": \"ChangeDataFee\"\r\n}",
            "Width": "128px",
            "DefaultVal": "this.Decimal(JSON.parse(localStorage.getItem(\"ExchangeRateVND\"))[\"USD\"])",
            "Active": true,
            "MinWidth": "128px",
            "MaxWidth": "128px",
            "EntityId": "ShipmentInvoice",
            "GroupTypeId": "00ec1404-0000-0000-8000-858f8a4d5181",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046c-714f-bf93-b4bc9fd897dd",
            "FieldName": "IsLock",
            "Order": 1,
            "ComponentType": "Checkbox",
            "Column": 2,
            "Row": 50,
            "Label": "Invoice",
            "ShowLabel": true,
            "Disabled": true,
            "Width": "55px",
            "Active": true,
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "55px",
            "MaxWidth": "55px",
            "EntityId": "ShipmentInvoiceDetail",
            "ReportTypeId": 1
        },
        {
            "Id": "01932dbc-046d-7708-8b42-8726230cc5a8",
            "FieldName": "VendorIds",
            "Order": 1,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Column": 4,
            "Row": 100,
            "Label": "Provider",
            "ShowLabel": true,
            "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('provider-editor',{ ServiceId: 3, ActionId: 1})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('provider-editor',this.Matched)\",\r\n    \"change\": \"ChangeDataFee\"\r\n}",
            "Width": "386px",
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select * from Partner as ds where Id in (select distinct VendorId from ShipmentFee where ShipmentId in ('{HblIds}'))\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds where Id in (select distinct VendorId from ShipmentFee where ShipmentId in ('{HblIds}'))\"\r\n}",
            "RefName": "Partner",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
            "PreQuery": "{\r\n    \"HblIds\": this.EditForm.Entity.HblIds.split(',').join(\"','\"),\r\n    \"MblIds\": this.EditForm.Entity.EntityIds.split(',').join(\"','\")\r\n}",
            "DisabledExp": "!this.Entity.Id.startsWith('-')",
            "FocusSearch": true,
            "ShowHotKey": true,
            "MinWidth": "386px",
            "MaxWidth": "386px",
            "EntityId": "ShipmentInvoice",
            "ReportTypeId": 1
        },
        {
            "Id": "01932f24-59c9-72e9-a814-4aa5358d6b48",
            "FieldName": "ViewShipmentInvoiceId",
            "Order": 1,
            "ComponentType": "Dropdown",
            "FormatData": "{Code}",
            "PlainText": "Select data",
            "Column": 12,
            "Row": 100,
            "Label": "Invoice",
            "ShowLabel": true,
            "Active": true,
            "Query": "{\r\n    \"sql\": \"select * from ShipmentInvoice as ds where (FileIds like '%{FileIds}%' and ActionId = 2 and VendorIds in (SELECT value FROM STRING_SPLIT('{VendorIds}', ',')) and ds.TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from ShipmentInvoice as ds where (FileIds like '%{FileIds}%' and ActionId = 2 and VendorIds in (SELECT value FROM STRING_SPLIT('{VendorIds}', ',')) and ds.TypeId = 1)\"\r\n}",
            "RefName": "ShipmentInvoice",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Code\",\r\n        \"Label\": \"Code\",\r\n        \"ComponentType\": \"Input\"\r\n    },\r\n    {\r\n        \"FieldName\": \"PostDate\",\r\n        \"Label\": \"Post Date\",\r\n        \"ComponentType\": \"Datepicker\"\r\n    }\r\n]",
            "PreQuery": "{\r\n    \"FileIds\": this.EditForm.Entity.FileIds.split(',').join(\"','\"),\r\n    \"VendorIds\": this.Entity.VendorIds\r\n}",
            "Editable": true,
            "EntityId": "Options",
            "ReportTypeId": 1
        }
    ],
    "Components": [
        {
            "Id": "00223f50-0000-0000-8000-3c41117d4a45",
            "FieldName": "btnSave",
            "Order": 7,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Save",
            "Icon": "fal fa-save",
            "ClassName": "btn detail-button primary",
            "HotKey": "Ctrl-S",
            "Events": "{ \"click\" : \"Invoice\" }",
            "Active": true,
            "ReportTypeId": 1
        },
        {
            "Id": "01932e1d-d69f-70ef-9d75-f2053a7a486c",
            "FieldName": "btnAddInvoice",
            "Order": 6,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Refresh",
            "Icon": "far fa-sync",
            "ClassName": "btn detail-button secondary-outline",
            "HotKey": "Ctrl-S",
            "Events": "{\r\n    \"click\": \"AddInvoice\"\r\n}",
            "Active": true,
            "ShowExp": "!this.EditForm.Entity.ShipmentInvoiceId",
            "ReportTypeId": 1
        },
        {
            "Id": "01948ba5-fe50-7408-a258-c97391669d3e",
            "FieldName": "btnVatInv",
            "Order": 5,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "VAT Invoice",
            "Icon": "far fa-file-invoice-dollar",
            "ClassName": "btn detail-button secondary-outline",
            "HotKey": "Ctrl-S",
            "Events": "{\r\n    \"click\": \"VatInvoice\"\r\n}",
            "Active": true,
            "PreQuery": "{\r\n    \"ShipmentInvoiceId\" : this.EditForm.Entity.Id\r\n}",
            "ShowExp": "this.EditForm.Entity.ActionId == 2 && this.Token.RoleNames.some(x => x.toUpperCase() == \"CREATE VATINV FROM DEBIT\") && !this.EditForm.Entity.VatInvoiceId",
            "ReportTypeId": 1
        },
        {
            "Id": "0195d7fc-14de-7219-8bd9-b27d84ce5fce",
            "FieldName": "btnVatInv",
            "Order": 5,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "View VAT Invoice",
            "Icon": "far fa-file-invoice-dollar",
            "ClassName": "btn detail-button secondary-outline",
            "HotKey": "Ctrl-S",
            "Events": "{\r\n    \"click\": \"VatInvoice\"\r\n}",
            "Active": true,
            "PreQuery": "{\r\n    \"ShipmentInvoiceId\" : this.EditForm.Entity.Id\r\n}",
            "ShowExp": "this.EditForm.Entity.VatInvoiceId",
            "ReportTypeId": 1
        }
    ],
    "FeaturePolicies": [
        {
            "Id": "0A18E663-FA1F-4AA3-9F72-20843DA15A93",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba1",
            "CanRead": true,
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "3A7EE518-5915-4D4A-B2BE-8B4487BBF242",
            "RoleId": "0001fd80-0000-0000-8000-13a7c7a43b11",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "414F1532-6515-430B-9F70-8EF9443864A3",
            "RoleId": "0001f180-0000-0000-8000-13a7c7a43b11",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "74CEE178-72CB-4D25-BA67-0F525C65BCC6",
            "RoleId": "CUSTOMER",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "7625120F-997E-4FE3-9072-CE749928E767",
            "RoleId": "00012180-0000-0000-8000-13a7c7a23b11",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "8C0E5BAE-C8E7-468E-A320-1D3CF74B3D21",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba2",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "92302414-C86F-487E-8E31-523D5C40D16E",
            "RoleId": "0001fd80-0000-0000-8000-23a7c7a43ba7",
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "B196F48F-DBF9-45C1-99BE-20879B0B48F9",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba7",
            "CanRead": true,
            "CanWrite": true,
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "BE29AE97-FD95-4C38-9B64-69D33DB5990C",
            "RoleId": "00012180-0000-0000-8000-13a7a7a23b11",
            "CanRead": true,
            "CanReadAll": true,
            "CanWrite": true,
            "CanWriteAll": true,
            "TableName": "Feature",
            "Active": true
        },
        {
            "Id": "F5CBF818-B520-40D8-8FF3-54825859CD3F",
            "RoleId": "0001f180-0000-0000-8000-13a7c7a23b11",
            "TableName": "Feature",
            "Active": true
        }
    ],
    "UserSettings": [
        {
            "Id": "0676652d-95a2-7c92-8000-8b7846cd9543",
            "ComponentId": "01932dbc-046d-7708-8b42-8e7be803bff0",
            "UserId": "00781eb8-0000-0000-8000-52bf71dcaef7",
            "Value": "[{\"Id\":\"00f340cc-0000-0000-8000-0563f6f4b421\",\"FieldName\":\"ShipmentId\",\"Order\":0,\"Width\":\"118px\"},{\"Id\":\"01932dbc-046c-714f-bf93-b4bc9fd897dd\",\"FieldName\":\"IsLock\",\"Order\":1,\"Width\":\"55px\"},{\"Id\":\"00bf40d0-0000-0000-8001-f9d6b9eef11c\",\"FieldName\":\"DescriptionId\",\"Order\":2,\"Width\":\"286px\"},{\"Id\":\"00bf40d0-0000-0000-8002-2651a4d17663\",\"FieldName\":\"Quantity\",\"Order\":3,\"Width\":\"102px\"},{\"Id\":\"00bf40d0-0000-0000-8003-e59cbb1c1e33\",\"FieldName\":\"UnitId\",\"Order\":4,\"Width\":\"90px\"},{\"Id\":\"00bf40d0-0000-0000-8004-d5c13e1b65d9\",\"FieldName\":\"Amount\",\"Order\":5,\"Width\":\"93px\"},{\"Id\":\"00bf4034-0000-0000-8000-bdc96943038e\",\"FieldName\":\"CurrencyId\",\"Order\":6,\"Width\":\"99px\"},{\"Id\":\"001940c8-0000-0000-8000-2e0e9a9a3aec\",\"FieldName\":\"ExchangeRateINV\",\"Order\":7,\"Width\":\"101px\"},{\"Id\":\"00bf40d0-0000-0000-8005-c9ff6384d12c\",\"FieldName\":\"Vat\",\"Order\":8,\"Width\":\"127px\"},{\"Id\":\"00434074-0000-0000-8000-2ec76ab138e4\",\"FieldName\":\"Payable\",\"Order\":9,\"Width\":\"142px\"},{\"Id\":\"00bf4034-0000-0000-8001-8921e0aae01a\",\"FieldName\":\"Receivable\",\"Order\":10,\"Width\":\"110px\"}]",
            "Active": true
        },
        {
            "Id": "06773c7b-6fae-787d-8000-d6b65b66c474",
            "ComponentId": "00fa4000-0000-0000-8000-af05bc46316c",
            "UserId": "00781eb8-0000-0000-8000-52bf71dcaef7",
            "Value": "[{\"Id\":\"01932dbc-046b-7228-b4fd-337bdcd33135\",\"FieldName\":\"Code\",\"Order\":0,\"Width\":\"131px\"},{\"Id\":\"01932dbc-046d-7708-8b42-8726230cc5a8\",\"FieldName\":\"VendorId\",\"Order\":1,\"Width\":\"386px\"},{\"Id\":\"01932dbc-046b-7228-b4fd-27f1716d9322\",\"FieldName\":\"ActionId\",\"Order\":2,\"Width\":\"97px\"},{\"Id\":\"01932dbc-046c-714f-bf93-a91a9b214acb\",\"FieldName\":\"DebitAmount\",\"Order\":3,\"Width\":\"125px\"},{\"Id\":\"01932dbc-046c-714f-bf93-a7b3c11be5be\",\"FieldName\":\"PostDate\",\"Order\":4,\"Width\":\"95px\"},{\"Id\":\"01932dbc-046c-714f-bf93-a06e3bd64ca9\",\"FieldName\":\"DueDate\",\"Order\":5,\"Width\":\"81px\"},{\"Id\":\"01932dbc-046c-714f-bf93-9e3d2b52ce3f\",\"FieldName\":\"PostOtherDate\",\"Order\":6,\"Width\":\"117px\"},{\"Id\":\"01932dbc-046b-7228-b4fd-342a93955a3f\",\"FieldName\":\"RevisedDate\",\"Order\":7,\"Width\":\"113px\"},{\"Id\":\"01932dbc-0469-7659-acf9-72baa6e5adff\",\"FieldName\":\"VoucherTypeId\",\"Order\":8,\"Width\":\"133px\"},{\"Id\":\"01932dbc-046a-7117-bcf4-c31b8780b8f1\",\"FieldName\":\"EntityIds\",\"Order\":9,\"Width\":\"142px\"},{\"Id\":\"01932dbc-046a-7117-bcf4-c8d4ba5a5334\",\"FieldName\":\"HblIds\",\"Order\":10,\"Width\":\"161px\"},{\"Id\":\"01932dbc-046c-714f-bf93-adf6e242422d\",\"FieldName\":\"MblNos\",\"Order\":11,\"Width\":\"77px\"},{\"Id\":\"01932dbc-046a-7117-bcf4-cdfae74cea63\",\"FieldName\":\"ObhTypeId\",\"Order\":12,\"Width\":\"94px\"},{\"Id\":\"01932dbc-046b-7228-b4fd-22e22396c750\",\"FieldName\":\"FeeTypeId\",\"Order\":13,\"Width\":\"96px\"},{\"Id\":\"01932dbc-046c-714f-bf93-b004e3e9971e\",\"FieldName\":\"ExchangeRateUSD\",\"Order\":14,\"Width\":\"128px\"},{\"Id\":\"01932dbc-046b-7228-b4fd-2fea57b0557e\",\"FieldName\":\"Remark\",\"Order\":15,\"Width\":\"130px\"}]",
            "Active": true
        }
    ]
}