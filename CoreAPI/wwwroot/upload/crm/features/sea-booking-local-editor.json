{
    "Id": "00041434-0000-0000-8000-accc00807ae6",
    "Name": "sea-booking-local-editor",
    "Label": "Sea Booking Local Editor",
    "ParentId": "003b1404-0000-0000-8000-b490ad0d1f26",
    "Style": "width:99%;",
    "Script": "return {\r\n    OnSave: function (form, gridview) {\r\n        var detailFee = this.GET(\"BookingDetail\");\r\n        if (detailFee && detailFee.AllListViewItem.length > 0) {\r\n            detailFee.AllListViewItem.filter(x => !x.GroupRow).forEach((item, index) => {\r\n                item.Entity.Order = index;\r\n            });\r\n        }\r\n    },\r\n    CheckSave: function () {\r\n        var detailFee = this.GET(\"BookingDetail\");\r\n        var data = detailFee.AllListViewItem.filter(x => !x.GroupRow);\r\n        const seen = new Set();\r\n        const duplicates = data.filter(item => {\r\n            const key = `${item.Entity.DescriptionId}-${item.Entity.VendorId}-${item.Entity.UnitId}`;\r\n            if (seen.has(key)) {\r\n                return true;\r\n            } else {\r\n                seen.add(key);\r\n                return false;\r\n            }\r\n        });\r\n        if (duplicates.length > 0) {\r\n            this.EditForm.OpenConfig(\"Duplicate fees have been detected. Please double-check and confirm if the data is correct. Data has been saved ! !\", () => {\r\n            }, () => { }, false, [], true);\r\n            detailFee.ClearSelected();\r\n            duplicates.forEach(x => {\r\n                x.Selected = true;\r\n                x.Element.focus();\r\n            })\r\n            return false;\r\n        }\r\n        return false;\r\n    },\r\n    SaveAs: async function (btn) {\r\n        var newEntity = JSON.parse(JSON.stringify(this.Entity));\r\n        this.Entity = newEntity;\r\n        this.Entity.Id = this.Uuid7.NewGuid();\r\n        this.Entity.BookingNo = null;\r\n        this.Entity.ShipmentId = null;\r\n        this.Entity.HblNo = null;\r\n        this.Entity.ReferenceNo = null;\r\n        this.Entity.BookingNoteId = null;\r\n        this.Entity.BookingOrderId = null;\r\n        this.Entity.FileNo = null;\r\n        this.Entity.IsSend = false;\r\n        this.Entity.MblNo = null;\r\n        this.Entity.ReceiverIds = null;\r\n        this.Entity.CreatedOn = this.dayjs();\r\n        this.Entity.BookingDate = this.dayjs();\r\n        var config = JSON.parse(localStorage.getItem(\"SalesFunction\"));\r\n        this.Entity.StatusId = config[\"APPROVE_BOOKINGLOCAL\"] ? 3 : 1;\r\n        this.Entity.InsertedBy = this.Token.UserId;\r\n        this.Entity.NoApproved = config[\"APPROVE_BOOKINGLOCAL\"] ? true : false;\r\n        var inquiryDetail = this.GET(\"BookingDetail\");\r\n        if (inquiryDetail && inquiryDetail.AllListViewItem.length > 0) {\r\n            inquiryDetail.AllListViewItem.forEach(row => {\r\n                row.Entity.Id = this.Uuid7.NewGuid();\r\n                row.Entity.BookingId = this.Entity.Id;\r\n                row.Entity.StatusId = 1;\r\n                row.Entity.NoApproved = config[\"APPROVE_BOOKINGLOCAL\"] ? true : false;\r\n                row.Children.forEach(cell => {\r\n                    cell.Entity = row.Entity;\r\n                });\r\n                row.UpdateView(true);\r\n            });\r\n        }\r\n        var entityContainer = this.GET(\"EntityContainer\");\r\n        if (entityContainer && entityContainer.AllListViewItem.length > 0) {\r\n            entityContainer.AllListViewItem.forEach(row => {\r\n                row.Entity.Id = this.Uuid7.NewGuid();\r\n                row.Entity.EntityId = this.Entity.Id;\r\n                row.UpdateView(true);\r\n            });\r\n        }\r\n        this.UpdateView(true);\r\n        this.Dirty = true;\r\n        this.Toast.Success(\"Save as success\");\r\n    },\r\n    ReloadSummary: function () {\r\n        window.setTimeout(() => {\r\n            var detail = this.GET(\"Summary\");\r\n            detail.ReloadData();\r\n        }, 500);\r\n    },\r\n    UpdateGroupFee: function (data) {\r\n        data.Parent.Entity.GroupFee = data.Entity.Description.Group ? data.Entity.Description.Group.Name : 'Local charge';\r\n        data.Parent.UpdateView(false, false, \"GroupFee\");\r\n    },\r\n    CalcPrice: function (com, entity) {\r\n        entity.Quantity = this.Decimal(entity.Quantity || 0);\r\n        entity.Amount = this.Decimal(entity.Amount || 0);\r\n        entity.TotalAmount = (entity.Quantity || new this.Decimal(0)).times(entity.Amount || new this.Decimal(0));\r\n        entity.AmountTax = (entity.TotalAmount).times(entity.Vat || new this.Decimal(0)).div(100);\r\n        entity.TotalAmountTax = entity.TotalAmount.plus(entity.AmountTax);\r\n        com.Parent.UpdateView(false);\r\n    },\r\n    OnSaveAdd: function (form, gridview) {\r\n        this.Entity = {\r\n            Id: this.Uuid7.NewGuid(),\r\n            BookingNo: null,\r\n            StatusId: 1\r\n        }\r\n    },\r\n    BeforeCreated: function (rowSection, entity) {\r\n        entity.GroupFee = entity.GroupFee;\r\n        var detail = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"BookingDetail\");\r\n        if (detail && detail.AllListViewItem && detail.AllListViewItem.length == 0) {\r\n            return;\r\n        }\r\n        var lastItem = detail.AllListViewItem[detail.AllListViewItem.length - 1];\r\n        entity.VendorId = entity.VendorId == null ? lastItem.Entity.VendorId || null : entity.VendorId;\r\n    },\r\n    AddDuplicateMenu: function (form, gridview) {\r\n        gridview.MenuItems.push({\r\n            Icon: \"fal fa-folders\",\r\n            Text: \"Duplicate\",\r\n            Click: () => this.DuplicateFee(form, gridview)\r\n        });\r\n    },\r\n    DuplicateFee: function (form, gridview) {\r\n        var defaultFee = this.GET(\"BookingDetail\");\r\n        var newItem = JSON.parse(JSON.stringify(defaultFee.Header.filter(x => x.FieldName == \"VendorId\" || x.FieldName == \"IsBuying\")));\r\n        newItem.forEach(item => {\r\n            item.FieldName = \"View\" + item.FieldName;\r\n        })\r\n        var form = this.EditForm.OpenConfig(\"Please select Payer/Payee!\", () => {\r\n            if (!form.Entity.ViewVendorId) {\r\n                return;\r\n            }\r\n            var selecteds = defaultFee.AllListViewItem.filter(x => !x.GroupRow && x.Selected);\r\n            var newFees = JSON.parse(JSON.stringify(selecteds.map(x => x.Entity)));\r\n            newFees.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.VendorId = form.Entity.ViewVendorId;\r\n                item.IsBuying = form.Entity.ViewIsBuying;\r\n                if (!item.IsObh) {\r\n                    item.Amount = null;\r\n                    item.TotalAmount = null;\r\n                    item.AmountTax = null;\r\n                    item.TotalAmountTax = null;\r\n                }\r\n                item.IsBuying = this.EditForm.Entity.ViewIsBuying;\r\n            });\r\n            defaultFee.LoadMasterData(newFees).then(() => {\r\n                defaultFee.ClearSelected();\r\n                defaultFee.AddRows(newFees).then(rows => {\r\n                    rows.forEach(row => {\r\n                        row.Selected = true;\r\n                    });\r\n                    rows[0].Element.focus();\r\n                    var detail = this.GET(\"Summary\");\r\n                    detail.ReloadData();\r\n                });\r\n            });\r\n        }, () => { }, true, newItem);\r\n    },\r\n    CreateBookingNotes: function (btn) {\r\n        debugger;\r\n        if (this.EditForm.Entity.BookingNoteId) {\r\n            this.OpenPopup(\"sea-booking-note-editor\", { Id: this.EditForm.Entity.BookingNoteId }, true);\r\n            return;\r\n        }\r\n        var form = this.EditForm.OpenConfig(\"Do you want create sea booking notes!\", () => {\r\n            var booking = JSON.parse(JSON.stringify(this.EditForm.Entity));\r\n            booking.Id = this.Uuid7.NewGuid();\r\n            booking.BookingLocalId = this.EditForm.Entity.Id;\r\n            booking.BookingNoteId = null;\r\n            booking.BookingOrderId = null;\r\n            booking.StatusId = 3;\r\n            booking.VoucherTypeId = 4;\r\n            booking.TypeId = 4;\r\n            booking.BookingNo = null;\r\n            booking.InsertedBy = this.Token.UserId;\r\n            booking.BookingDate = this.dayjs().format('YYYY-MM-DD');\r\n            var bookingTransit = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"EntityTransit\");\r\n            var itemsBookingTransit = bookingTransit.AllListViewItem.map(x => x.Entity);\r\n            var newItemsBookingTransit = JSON.parse(JSON.stringify(itemsBookingTransit));\r\n            newItemsBookingTransit.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = booking.Id;\r\n            })\r\n            booking.EntityTransit = newItemsBookingTransit;\r\n            var inquiryContainer = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"EntityContainer\");\r\n            var items = inquiryContainer.AllListViewItem.map(x => x.Entity);\r\n            var newItems = JSON.parse(JSON.stringify(items));\r\n            newItems.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = booking.Id;\r\n            })\r\n            booking.EntityContainer = newItems;\r\n            this.OpenPopup(\"sea-booking-note-editor\", booking);\r\n        }, () => { });\r\n    },\r\n    CreateBookingOrder: function (btn) {\r\n        if (this.EditForm.Entity.BookingOrderId) {\r\n            this.OpenPopup(\"sea-booking-order-editor\", { Id: this.EditForm.Entity.BookingOrderId }, true);\r\n            return;\r\n        }\r\n        var form = this.EditForm.OpenConfig(\"Do you want sea create booking order!\", () => {\r\n            var booking = JSON.parse(JSON.stringify(this.EditForm.Entity));\r\n            booking.Id = this.Uuid7.NewGuid();\r\n            booking.BookingLocalId = this.EditForm.Entity.Id;\r\n            booking.BookingNoteId = null;\r\n            booking.BookingOrderId = null;\r\n            booking.StatusId = 3;\r\n            booking.VoucherTypeId = 5;\r\n            booking.TypeId = 1;\r\n            booking.BookingNo = null;\r\n            booking.InsertedBy = this.Token.UserId;\r\n            booking.BookingDate = this.dayjs().format('YYYY-MM-DD');\r\n            var bookingTransit = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"EntityTransit\");\r\n            var itemsBookingTransit = bookingTransit.AllListViewItem.map(x => x.Entity);\r\n            var newItemsBookingTransit = JSON.parse(JSON.stringify(itemsBookingTransit));\r\n            newItemsBookingTransit.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = booking.Id;\r\n            })\r\n            booking.EntityTransit = newItemsBookingTransit;\r\n            var inquiryContainer = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"EntityContainer\");\r\n            var items = inquiryContainer.AllListViewItem.map(x => x.Entity);\r\n            var newItems = JSON.parse(JSON.stringify(items));\r\n            newItems.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = booking.Id;\r\n            })\r\n            booking.EntityContainer = newItems;\r\n            this.OpenPopup(\"sea-booking-order-editor\", booking);\r\n        }, () => { });\r\n    },\r\n    ForwardBookingLocal: function (form, gridview) {\r\n        var newItem = JSON.parse(JSON.stringify(this.EditForm.ChildCom.filter(x => x.Meta.FieldName == \"ReceiverIds\").map(x => x.Meta)));\r\n        newItem.forEach(item => {\r\n            item.FieldName = \"ForwardId\";\r\n            item.IsMultiple = false;\r\n            item.Label = \"Forward\";\r\n        });\r\n        var form = this.EditForm.OpenConfig(\"Please select user forward!\", () => {\r\n            if (!this.Entity.ForwardId) {\r\n                return;\r\n            }\r\n            this.EditForm.ActForwordEntity();\r\n        }, () => { }, true, newItem);\r\n    },\r\n    CreateShipment: function (btn) {\r\n        var featureName = \"sea-export-fcl-editor\";\r\n        switch (this.Entity.ServiceId) {\r\n            case 3:\r\n                featureName = \"sea-export-fcl-editor\";\r\n                break;\r\n            case 4:\r\n                featureName = \"sea-import-fcl-editor\";\r\n                break;\r\n            case 5:\r\n                featureName = \"sea-export-lcl-editor\";\r\n                break;\r\n            case 6:\r\n                featureName = \"sea-import-lcl-editor\";\r\n                break;\r\n            case 16:\r\n                featureName = \"sea-import-consol-editor\";\r\n                break;\r\n            case 17:\r\n                featureName = \"sea-export-consol-editor\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (this.EditForm.Entity.ShipmentId) {\r\n            this.OpenPopup(featureName, { Id: this.EditForm.Entity.ShipmentId, BookingLocalId: this.EditForm.Entity.Id }, true);\r\n            return;\r\n        }\r\n        var form = this.EditForm.OpenConfig(\"Do you want to create shipment sea!\", () => {\r\n            var shipment = JSON.parse(JSON.stringify(this.EditForm.Entity));\r\n            var bookingNo = shipment.BookingNo;\r\n            var hblNo = shipment.HblNo;\r\n            shipment.Id = this.Uuid7.NewGuid();\r\n            shipment.BookingLocalId = this.EditForm.Entity.Id;\r\n            shipment.Code = null;\r\n            shipment.BookingNo = shipment.ReferenceNo || shipment.RefNo;\r\n            shipment.HblNo = null;\r\n            shipment.ParentId = null;\r\n            shipment.StatusId = 1;\r\n            shipment.VoucherTypeId = 6;\r\n            shipment.ShipmentDate = this.dayjs().format('YYYY-MM-DD');\r\n            shipment.TypeId = shipment.ServiceId;\r\n            shipment.InsertedBy = this.Token.UserId;\r\n            shipment.BookingDate = this.dayjs().format('YYYY-MM-DD');\r\n            var bookingTransit = this.EditForm.FirstCom(\"EntityTransit\");\r\n            var inquiryContainer = this.EditForm.FirstCom(\"EntityContainer\");\r\n            var bookingDetail = this.EditForm.FirstCom(\"BookingDetail\");\r\n            var itemsBookingTransit = bookingTransit.AllListViewItem.map(x => x.Entity);\r\n            var newItemsBookingTransit = JSON.parse(JSON.stringify(itemsBookingTransit));\r\n            newItemsBookingTransit.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = shipment.Id;\r\n            })\r\n            shipment.EntityTransit = newItemsBookingTransit;\r\n            var firstTransit = shipment.EntityTransit.find(x => x.PortTransitId);\r\n            if (firstTransit) {\r\n                shipment.PortTransitId = firstTransit.PortTransitId;\r\n            }\r\n            var items = inquiryContainer.AllListViewItem.map(x => x.Entity);\r\n            var newItems = JSON.parse(JSON.stringify(items));\r\n            newItems.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = shipment.Id;\r\n            })\r\n            shipment.EntityContainer = newItems;\r\n            var shipmentDetail = JSON.parse(JSON.stringify(shipment));\r\n            shipmentDetail.ParentId = shipment.Id;\r\n            shipmentDetail.Id = this.Uuid7.NewGuid();\r\n            shipmentDetail.BookingNo = shipmentDetail.ReferenceNo || bookingNo;\r\n            shipmentDetail.HblNo = hblNo;\r\n            shipmentDetail.EntityAttachedIn = [\r\n                {\r\n                    Id: this.Uuid7.NewGuid(),\r\n                    ShipmentId: shipmentDetail.Id,\r\n                    Name: \"Sea house bill\",\r\n                    TypeId: 1,\r\n                },\r\n                {\r\n                    Id: this.Uuid7.NewGuid(),\r\n                    Name: \"Booking Oder\",\r\n                    ShipmentId: shipmentDetail.Id,\r\n                    TypeId: 1,\r\n                },\r\n                {\r\n                    Id: this.Uuid7.NewGuid(),\r\n                    Name: \"Other\",\r\n                    ShipmentId: shipmentDetail.Id,\r\n                    TypeId: 1,\r\n                }\r\n            ];\r\n            let agent = this.Entity.Agent;\r\n            let agentText = \"\";\r\n            if (agent) {\r\n                agentText += `${(agent.CompanyName || '')}\\n`;\r\n                agentText += `${(agent.Address || '')}\\n`;\r\n                agentText += `Tell: ${(agent.PhoneNumber || '')} Fax: ${(agent.Fax || '')}\\n`;\r\n                agentText += `Contact person: ${(agent.ContactName || '')}`;\r\n            }\r\n            shipmentDetail.ShipperDes = shipment.ShipperDes;\r\n            shipmentDetail.ConsigneeDes = shipment.ConsigneeDes;\r\n            shipmentDetail.FreightPayableId = this.EditForm.Entity.PaymentTerm ? (this.Entity.PaymentTerm.Name == \"Prepaid\" ? \"00b644a0-0000-0000-8000-f3b8ecd580b9\" : \"00b94450-0000-0000-8000-1a2085cef64b\") : null;\r\n            shipmentDetail.TypeId = shipment.TypeId;\r\n            shipmentDetail.Notes = shipment.SpecialRequest;\r\n            shipmentDetail.QuotationId = shipment.QuotationId;\r\n            shipmentDetail.QuotationCode = shipment.QuotationCode;\r\n            shipmentDetail.PolId = shipment.PolId;\r\n            shipmentDetail.PodId = shipment.PodId;\r\n            shipmentDetail.EtaDate = shipment.EtaDate;\r\n            shipmentDetail.EtdDate = shipment.EtdDate;\r\n            shipmentDetail.Vessel = `${(shipment.Vessel || '')}/${(shipment.VesselVoy || '')}`;\r\n            shipmentDetail.VesselVoy = shipment.VesselVoy;\r\n            shipmentDetail.OceanVessel = `${(shipment.OceanVessel || '')}/${(shipment.OceanVesselVoy || '')}`;\r\n            shipmentDetail.OceanVesselVoy = shipment.OceanVesselVoy;\r\n            shipmentDetail.CommodityId = shipment.CommodityId;\r\n            shipmentDetail.PortTransitId = shipment.PortTransitId;\r\n            if (!shipmentDetail.PlaceReceiptId) {\r\n                shipmentDetail.PlaceReceiptId = shipment.PolId;\r\n            }\r\n            if (!shipmentDetail.PlaceDeliveryId) {\r\n                shipmentDetail.PlaceDeliveryId = shipment.PodId;\r\n            }\r\n            shipmentDetail.SaillingDate = shipment.EtdDate;\r\n            shipmentDetail.IssueDate = shipment.EtaDate;\r\n            shipmentDetail.PlaceIssueId = shipment.PolId;\r\n            shipmentDetail.ForDeliveryGoodsId = shipment.AgentId;\r\n            shipmentDetail.ForDeliveryGoodsDes = agentText.trim();\r\n            shipmentDetail.EntityContainer.forEach(item => {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.EntityId = shipment.Id;\r\n            });\r\n            var itemsFee = bookingDetail.AllListViewItem.filter(x => !x.GroupRow && x.Entity).map(x => x.Entity);\r\n            var feeItems = JSON.parse(JSON.stringify(itemsFee.filter(x => !x.IsBuying && !x.IsAdv && !x.IsAdvCustomer && !x.IsAdvProvider)));\r\n            var fee1Items = JSON.parse(JSON.stringify(itemsFee.filter(x => x.IsBuying && !x.IsAdv && !x.IsAdvCustomer && !x.IsAdvProvider)));\r\n            var fee3Items = JSON.parse(JSON.stringify(itemsFee.filter(x => x.IsAdv || x.IsAdvCustomer || x.IsAdvProvider)));\r\n            for (var item of feeItems) {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.ShipmentId = shipmentDetail.Id;\r\n                item.TypeId = 1;\r\n                if (item.IsObh) {\r\n                    var obhFee = fee1Items.find(x => x.DescriptionId == item.DescriptionId && x.IsObh);\r\n                    item.ObhId = obhFee.VendorId;\r\n                }\r\n            }\r\n            shipmentDetail.ShipmentFee = feeItems;\r\n            fee1Items = fee1Items.filter(x => !x.IsObh);\r\n            for (var item of fee1Items) {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.ShipmentId = shipmentDetail.Id;\r\n                item.TypeId = 2;\r\n            }\r\n            for (var item of fee3Items) {\r\n                item.Id = this.Uuid7.NewGuid();\r\n                item.ShipmentId = shipmentDetail.Id;\r\n                item.TypeId = 3;\r\n            }\r\n            shipmentDetail.ShipmentFee2 = fee1Items;\r\n            shipmentDetail.ShipmentFee3 = fee3Items;\r\n            this.OpenPopup(featureName, shipment, false, { ShipmentDetail: shipmentDetail, Dirty: true, _dirtyShipmentDetail: true });\r\n        }, () => { });\r\n    }\r\n}",
    "Events": "{\r\n    \"onsave\": \"OnSave\",\r\n    \"onsaveadd\": \"OnSaveAdd\"\r\n}",
    "EntityId": "Booking",
    "ComponentGroup": [
        {
            "Id": "00051400-0000-0000-8000-fab8bd1d1f70",
            "FieldName": "Left",
            "Order": 1,
            "ComponentType": "Section",
            "ClassName": "card-body",
            "XxlCol": 12,
            "DisabledExp": "this.EditForm.Entity.ShipmentId || this.EditForm.Entity.InsertedBy != this.Token.UserId",
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 4,
            "Components": [
                {
                    "Id": "00051434-0000-0000-8000-081ac9b4b598",
                    "FieldName": "CreatedOn",
                    "Order": 2,
                    "ComponentType": "Datepicker",
                    "Column": 6,
                    "Label": "Created on",
                    "ShowLabel": true
                },
                {
                    "Id": "00051458-0000-0000-8000-a2a4e513abeb",
                    "FieldName": "BookingNo",
                    "Order": 1,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "Ref No",
                    "ShowLabel": true
                },
                {
                    "Id": "00051460-0000-0000-8000-d51ffb2a5cd3",
                    "FieldName": "SaleId",
                    "Order": 6,
                    "ComponentType": "Dropdown",
                    "FormatData": "{FullName}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Sales man",
                    "ShowLabel": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [User] as ds where (TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from [User] as ds where (TypeId = 1)\"\r\n}",
                    "RefName": "User",
                    "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"NickName\", \"Label\" : \"NickName\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"DepartmentId\", \"Label\" : \"Department\", \"ComponentType\" : \"Dropdown\", \"RefName\":\"MasterData\",\"FormatData\" : \"{Name}\" }]"
                },
                {
                    "Id": "0005148c-0000-0000-8000-4200db2c4a4e",
                    "FieldName": "AgentId",
                    "Order": 5,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Agent",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('partner-editor',{ ServiceId: 2, ActionId: 1, PartnerTypeIds: '00da1840-0000-0000-8000-4d715de86733',PartnerTypeIdsText: 'Agent'})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('partner-editor',this.Entity.Matched)\"\r\n}",
                    "Query": "{\r\n    \"sql\": \"select * from Partner as ds where (ActionId = 1 and IsNoDebt = 0 and (PartnerTypeIdsText like N'%Agent%'))\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds  where (ActionId = 1 and IsNoDebt = 0  and (PartnerTypeIdsText like N'%Agent%'))\"\r\n}",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "PreQuery": "{ \"UserId\": this.Token.UserId }",
                    "ShowHotKey": true
                },
                {
                    "Id": "00051498-0000-0000-8000-65696cb172b1",
                    "FieldName": "VendorId",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Provider",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('provider-editor',{ ServiceId: 3, ActionId: 1})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('provider-editor',this.Matched)\"\r\n}",
                    "PopulateField": "const newPicVendor = this.Matched.ContactName + \"/\" + (this.Matched.ContactPhoneNumber || \"\") + \"/\" + (this.Matched.ContactEmail || \"\");\r\nif (this.EditForm.Entity.PhoneNumber = [this.Matched.ContactPhoneNumber, this.Matched.ContactEmail].filter(Boolean).join('/');this.EditForm.Entity.PicVendor !== newPicVendor) {\r\n    this.EditForm.Entity.PhoneNumber = [this.Matched.ContactPhoneNumber, this.Matched.ContactEmail].filter(Boolean).join('/');this.EditForm.Entity.PicVendor = newPicVendor;\r\n    this.EditForm.UpdateView(false, false, \"PicVendor\");\r\n}",
                    "Query": "{     \"sql\": \"select * from Partner as ds where ServiceId = 3 and ActionId = 1 and IsNoDebt = 0\",     \"total\": \"select count(ds.Id) as total from Partner as ds  where ServiceId = 3 and ActionId = 1 and IsNoDebt = 0\" }",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "PreQuery": "{ \"UserId\": this.Token.UserId }",
                    "ShowHotKey": true
                },
                {
                    "Id": "000514a4-0000-0000-8000-a82827b4db96",
                    "FieldName": "CustomerId",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Customer",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('customer-editor',{ ServiceId : 1, TypeId : 3, ActionId : 1, SaleId: this.Token.UserId })\",\r\n    \"edit\": \"this.EditForm.OpenPopup('customer-editor',this.Matched)\"\r\n}",
                    "Validation": "[{\"Rule\": \"required\", \"Message\": \"{0} is required\"}]",
                    "PopulateField": "this.EditForm.Entity.PhoneNumber = this.Matched.ContactPhoneNumber\r\nthis.EditForm.Entity.Pic = this.Matched.ContactName;\r\nthis.EditForm.Entity.Sale = null;\r\nthis.EditForm.Entity.SaleId = this.Matched.SaleId;\r\nlet customer = this.Matched;\r\nlet customerText = `${(customer.CompanyName || '')}\\n`;\r\ncustomerText += `${(customer.Address || '')}\\n`;\r\ncustomerText += `Tell: ${(customer.PhoneNumber || '')} Fax: ${(customer.Fax || '')}\\n`;\r\ncustomerText += `Contact person:${(customer.ContactName || '')}`;\r\nif (this.EditForm.Entity.Service.Name.includes('Import')) {\r\n    this.EditForm.Entity.ConsigneeId = this.Matched.Id;\r\n    this.EditForm.Entity.ConsigneeIdText = this.Matched.Name;\r\n    this.EditForm.Entity.ConsigneeDes = customerText;\r\n}\r\nelse if (this.EditForm.Entity.Service.Name.includes('Export')) {\r\n    this.EditForm.Entity.ShipperId = this.Matched.Id;\r\n    this.EditForm.Entity.ShipperIdText = this.Matched.Name;\r\n    this.EditForm.Entity.ShipperDes = customerText;\r\n}\r\nthis.EditForm.UpdateView(false, false, \"Pic\", \"SaleId\", \"PhoneNumber\", \"ConsigneeId\", \"ConsigneeIdText\", \"ShipperId\", \"ShipperIdText\", \"ConsigneeDes\", \"ShipperDes\");\r\nreturn null;",
                    "Query": "{\r\n    \"sql\": \"select * from Partner as ds where (ActionId = 1 and IsNoDebt = 0 and ServiceId = 1 and TypeId in (2,3) and (ds.IsPublic = 1 or ds.GroupId = '{TokenGroupId}' or ds.SaleId = '{TokenUserId}' or ds.InsertedBy = '{TokenUserId}' or ds.DistributeInformationIds like N'%{TokenUserId}%'))\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds  where (ActionId = 1 and IsNoDebt = 0 and ServiceId = 1 and TypeId in (2,3) and (ds.IsPublic = 1 or ds.GroupId = '{TokenGroupId}' or ds.SaleId = '{TokenUserId}' or ds.InsertedBy = '{TokenUserId}' or ds.DistributeInformationIds like N'%{TokenUserId}%'))\"\r\n}",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "PreQuery": "{\r\n    \"UserId\": this.Token.UserId,\r\n    \"UserName\": this.Token.UserName\r\n}",
                    "ShowHotKey": true
                }
            ]
        },
        {
            "Id": "00051440-0000-0000-8000-5c664c48621b",
            "FieldName": "Main",
            "Order": 3,
            "ComponentType": "Section",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 4,
            "Components": [
                {
                    "Id": "00051414-0000-0000-8000-2b21ad9e66fa",
                    "FieldName": "CarrierId",
                    "Order": 7,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Carrier",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('provider-editor',{ ServiceId: 3, ActionId: 1,PartnerTypeIds: '00671858-0000-0000-8000-d917e69b0ea0',PartnerTypeIdsText: 'Carrier'})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('provider-editor',this.Matched)\"\r\n}",
                    "Query": "{     \"sql\": \"select * from Partner as ds where ServiceId = 3 and ActionId = 1 and IsNoDebt = 0\",     \"total\": \"select count(ds.Id) as total from Partner as ds  where ServiceId = 3 and ActionId = 1 and IsNoDebt = 0\" }",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "PreQuery": "{ \"UserId\": this.Token.UserId }",
                    "ShowHotKey": true
                },
                {
                    "Id": "00051420-0000-0000-8000-1f5c037f433f",
                    "FieldName": "MblTypeId",
                    "Order": 2,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "MBL Type",
                    "ShowLabel": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"COPY\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"ORIGINAL\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"SURRENDERED\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "00051464-0000-0000-8000-db6ccced0372",
                    "FieldName": "HblNo",
                    "Order": 3,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "HBL No",
                    "ShowLabel": true
                },
                {
                    "Id": "000514a8-0000-0000-8000-b0b92cf20850",
                    "FieldName": "HblTypeId",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "HBL Type",
                    "ShowLabel": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"DRAFT\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"ORIGINAL\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"SURRENDERED\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000514dc-0000-0000-8000-8b1cb7b1d196",
                    "FieldName": "FileNo",
                    "Order": 5,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "File No",
                    "ShowLabel": true
                },
                {
                    "Id": "000514e8-0000-0000-8000-a1f32e578d98",
                    "FieldName": "MblNo",
                    "Order": 1,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "MBL No",
                    "ShowLabel": true
                }
            ]
        },
        {
            "Id": "00051494-0000-0000-8000-f17ccd4bcf61",
            "FieldName": "Container",
            "Order": 2,
            "ComponentType": "Section",
            "ClassName": "scroll-content",
            "XxlCol": 12,
            "DisabledExp": "this.EditForm.Entity.ShipmentId || this.EditForm.Entity.InsertedBy != this.Token.UserId"
        },
        {
            "Id": "000514c4-0000-0000-8000-2feb2ed8c73a",
            "FieldName": "Button",
            "Order": 1,
            "ComponentType": "Section",
            "ClassName": "ribbon-group",
            "Style": "margin-bottom: 0px;padding: 0;",
            "XxlCol": 12,
            "Components": [
                {
                    "Id": "00051424-0000-0000-8000-99b80155da0a",
                    "FieldName": "btnSaveAdd",
                    "Order": 0,
                    "ComponentType": "Button",
                    "Column": 1,
                    "GroupFormat": "Options",
                    "Label": "Save As",
                    "Icon": "fas fa-sliders-h-square",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{ \"click\" : \"SaveAs\" }"
                },
                {
                    "Id": "00051478-0000-0000-8000-5ca8a3e1e28b",
                    "FieldName": "btnSendEntity",
                    "Order": 2,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Send",
                    "Icon": "far fa-share-all",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{ \"click\" : \"SendEntity\" }",
                    "ShowExp": "(this.Entity.StatusId == 1 || this.Entity.StatusId == 4) && this.Token.UserId == this.Entity.InsertedBy"
                },
                {
                    "Id": "0005148c-0000-0000-8000-066f631dcf02",
                    "FieldName": "btnDecline",
                    "Order": 3,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Decline",
                    "Icon": "fal fa-comment-alt-slash",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{ \"click\" : \"DeclineEntity\" }",
                    "ShowExp": "var rs = this.Entity.StatusId == 2 && this.Entity.UserApprovedIds.includes(this.Token.UserId); return rs; "
                },
                {
                    "Id": "00051490-0000-0000-8000-bac80835f067",
                    "FieldName": "btnSaveAdd",
                    "Order": 1,
                    "ComponentType": "Button",
                    "Column": 1,
                    "GroupFormat": "Options",
                    "Label": "Save & Add",
                    "Icon": "fas fa-sliders-h-square",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{ \"click\" : \"SaveAdd\" }"
                },
                {
                    "Id": "00051498-0000-0000-8000-02ae4355da4b",
                    "FieldName": "btnApprove",
                    "Order": 4,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Approve",
                    "Icon": "fal fa-check-circle",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{ \"click\" : \"ApprovedEntity\" }",
                    "ShowExp": "var rs = this.Entity.StatusId == 2 && this.Entity.UserApprovedIds.includes(this.Token.UserId); return rs; "
                },
                {
                    "Id": "000514f8-0000-0000-8000-12741bb3edb5",
                    "FieldName": "btnSave",
                    "Order": 5,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Save",
                    "Icon": "fal fa-save",
                    "ClassName": "btn detail-button primary",
                    "HotKey": "Ctrl-S",
                    "Events": "{ \"click\" : \"SavePatch\" }"
                },
                {
                    "Id": "001b3180-0000-0000-8000-14d27180966d",
                    "FieldName": "btnCreateBookingNotes",
                    "Order": 4,
                    "ComponentType": "Button",
                    "Column": 1,
                    "GroupFormat": "Options",
                    "Label": "Booking Notes",
                    "Icon": "fas fa-sliders-h-square",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{\r\n    \"click\": \"CreateBookingNotes\"\r\n}",
                    "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
                },
                {
                    "Id": "00683adc-0000-0000-8000-0a34879c654c",
                    "FieldName": "btnCreateBookingOrder",
                    "Order": 4,
                    "ComponentType": "Button",
                    "Column": 1,
                    "GroupFormat": "Options",
                    "Label": "Booking Order",
                    "Icon": "fas fa-sliders-h-square",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{    \"click\": \"CreateBookingOrder\"}",
                    "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
                },
                {
                    "Id": "008f3748-0000-0000-8000-8937d0f7727f",
                    "FieldName": "btnForward",
                    "Order": 4,
                    "ComponentType": "Button",
                    "Column": 1,
                    "GroupFormat": "Options",
                    "Label": "Forward",
                    "Icon": "fas fa-sliders-h-square",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{    \"click\": \"ForwardBookingLocal\"}",
                    "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
                },
                {
                    "Id": "0193a10f-ad2a-7681-8ae4-bfbebebf0a0e",
                    "FieldName": "btnCreateShipment",
                    "Order": -1,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Generate Shipment",
                    "Icon": "fal fa-shopping-cart",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{    \"click\": \"CreateShipment\"}",
                    "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3 && !this.Entity.ShipmentId"
                },
                {
                    "Id": "0193a111-3584-71ff-970c-5758bcae7e1a",
                    "FieldName": "btnDeclineShipment",
                    "Order": -1,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Decline",
                    "Icon": "fal fa-comment-alt-slash",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{    \"click\": \"DeclineEntity\"}",
                    "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3 && !this.Entity.ShipmentId"
                },
                {
                    "Id": "0193e49f-80aa-7295-93d3-4a28c24f575a",
                    "FieldName": "btnViewShipment",
                    "Order": -1,
                    "ComponentType": "Button",
                    "Column": 1,
                    "Label": "Open Shipment",
                    "Icon": "fal fa-shopping-cart",
                    "ClassName": "btn detail-button secondary-outline",
                    "Events": "{    \"click\": \"CreateShipment\"}",
                    "ShowExp": "this.Entity.ShipmentId"
                }
            ]
        },
        {
            "Id": "000514d0-0000-0000-8000-5755c270572c",
            "FieldName": "Left1",
            "Order": 5,
            "ComponentType": "Section",
            "Label": "Parties",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 12
        },
        {
            "Id": "000514dc-0000-0000-8000-13e25b0374b2",
            "FieldName": "Main",
            "Order": 2,
            "ComponentType": "Section",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 4,
            "Components": [
                {
                    "Id": "00051424-0000-0000-8000-62e687f54869",
                    "FieldName": "CommodityId",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Commodity",
                    "ShowLabel": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Commodity Type'\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Commodity Type'\"\r\n}",
                    "RefName": "MasterData",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "00051448-0000-0000-8000-022bef155b25",
                    "FieldName": "ServiceText",
                    "Order": 4,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "Service",
                    "ShowLabel": true
                },
                {
                    "Id": "00051458-0000-0000-8000-4ef5ac286c9c",
                    "FieldName": "ShipmentTypeId",
                    "Order": 5,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Shipment type",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"change\": \"ShowHideDetail\"\r\n}",
                    "DefaultVal": "0",
                    "Query": "[\r\n    {\r\n        \"Id\": 0,\r\n        \"Name\": \"FREE-HAND\"\r\n    },\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"NOMINATE\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "0005145c-0000-0000-8000-892e6ad2aef2",
                    "FieldName": "BookingDate",
                    "Order": 2,
                    "ComponentType": "Datepicker",
                    "Column": 6,
                    "Label": "Booking Date",
                    "ShowLabel": true
                },
                {
                    "Id": "00051464-0000-0000-8000-d5ddf419af07",
                    "FieldName": "RefNo",
                    "Order": 1,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "Booking No (MBL)",
                    "ShowLabel": true
                },
                {
                    "Id": "000514fc-0000-0000-8000-d8d2f1240e01",
                    "FieldName": "PoNo",
                    "Order": 6,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Row": 50,
                    "Label": "Po No",
                    "ShowLabel": true,
                    "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"TaxCode\", \"Label\" : \"TaxCode\", \"ComponentType\" : \"Input\" }]"
                }
            ]
        },
        {
            "Id": "000514dc-0000-0000-8000-62a31f5eabfd",
            "FieldName": "Child1",
            "Order": 1,
            "ComponentType": "Section",
            "XxlCol": 12,
            "ParentId": "000514d0-0000-0000-8000-5755c270572c",
            "XxlOuterColumn": 8,
            "Components": [
                {
                    "Id": "0005142c-0000-0000-8000-a0a2fd1ff80e",
                    "FieldName": "ShipperId",
                    "Order": 1,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Shipper",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('partner-editor',{ ServiceId: 2, ActionId: 1, PartnerTypeIds: '00e318b8-0000-0000-8000-a7988356b712',PartnerTypeIdsText: 'Shipper'}})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('partner-editor',thisMatched)\"\r\n}",
                    "PopulateField": "let shipper = this.EditForm.ShipmentDetail.Shipper;\r\nlet shipperText = `${(shipper.CompanyName || '')}\\n`;\r\nshipperText += `${(shipper.Address || '')}\\n`;\r\nshipperText += `Tell: ${(shipper.PhoneNumber || '')} Fax: ${(shipper.Fax || '')}\\n`;\r\nshipperText += `Contact person: ${(shipper.ContactName || '')}`;\r\nthis.EditForm.ShipmentDetail.ShipperDes = shipperText.trim();\r\nthis.EditForm.UpdateView2(false, false, \"ShipmentDetail\", false, \"ShipperDes\");\r\nreturn null;",
                    "Query": "{\r\n    \"sql\": \"select * from Partner as ds where (ActionId = 1 and IsNoDebt = 0 and (PartnerTypeIdsText like N'%Shipper%'))\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds  where (ActionId = 1 and IsNoDebt = 0 and (PartnerTypeIdsText like N'%Shipper%'))\"\r\n}",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "ShowHotKey": true
                },
                {
                    "Id": "00061450-0000-0000-8000-f6e592cbf390",
                    "FieldName": "ShipperDes",
                    "Order": 3,
                    "ComponentType": "Textarea",
                    "Column": 6,
                    "Row": 4,
                    "Label": "Shipper"
                },
                {
                    "Id": "000614e0-0000-0000-8000-066f4e040520",
                    "FieldName": "ConsigneeId",
                    "Order": 2,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Consignee",
                    "ShowLabel": true,
                    "Events": "{\r\n    \"add\": \"this.EditForm.OpenPopup('partner-editor',{ ServiceId: 2, ActionId: 1, PartnerTypeIds: '00e51814-0000-0000-8000-4128ce0e4c14',PartnerTypeIdsText: 'Consignee'})\",\r\n    \"edit\": \"this.EditForm.OpenPopup('partner-editor',this.Matched)\"\r\n}",
                    "PopulateField": "let shipper = this.EditForm.ShipmentDetail.Consignee;\r\nlet shipperText = `${(shipper.CompanyName || '')}\\n`;\r\nshipperText += `${(shipper.Address || '')}\\n`;\r\nshipperText += `Tell: ${(shipper.PhoneNumber || '')} Fax: ${(shipper.Fax || '')}\\n`;\r\nshipperText += `Contact person: ${(shipper.ContactName || '')}`;\r\nthis.EditForm.ShipmentDetail.ConsigneeDes = shipperText.trim();\r\nthis.EditForm.UpdateView2(false, false, \"ShipmentDetail\", false, \"ConsigneeDes\");\r\nreturn null;",
                    "Query": "{\r\n    \"sql\": \"select * from Partner as ds where (ActionId = 1 and IsNoDebt = 0 and PartnerTypeIdsText like N'%Consignee%')\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds  where (ActionId = 1 and IsNoDebt = 0 and PartnerTypeIdsText like N'%Consignee%')\"\r\n}",
                    "RefName": "Partner",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
                    "ShowHotKey": true
                },
                {
                    "Id": "000614f4-0000-0000-8000-3000a251fc67",
                    "FieldName": "ConsigneeDes",
                    "Order": 4,
                    "ComponentType": "Textarea",
                    "Column": 6,
                    "Row": 4,
                    "Label": "Consignee"
                }
            ]
        },
        {
            "Id": "00061400-0000-0000-8000-ae1f25ed343e",
            "FieldName": "Sea Container Origin",
            "Order": 8,
            "ComponentType": "Section",
            "Label": "Origin",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 6,
            "Components": [
                {
                    "Id": "00061420-0000-0000-8000-6b52429dd5b1",
                    "FieldName": "Voy",
                    "Order": 6,
                    "ComponentType": "Input",
                    "Column": 3,
                    "Label": "Voy",
                    "ShowLabel": true
                },
                {
                    "Id": "00061428-0000-0000-8000-0d5a8d5e54bc",
                    "FieldName": "Vessel",
                    "Order": 5,
                    "ComponentType": "Input",
                    "Column": 3,
                    "Label": "Feeder vessel",
                    "ShowLabel": true
                },
                {
                    "Id": "00061444-0000-0000-8000-84afc85b794b",
                    "FieldName": "Quantity",
                    "Order": 7,
                    "ComponentType": "Number",
                    "Column": 3,
                    "Precision": 3,
                    "Label": "Quantity",
                    "ShowLabel": true,
                    "Style": " height: 30px;"
                },
                {
                    "Id": "00061450-0000-0000-8000-b8612b5df26d",
                    "FieldName": "EtdDate",
                    "Order": 2,
                    "ComponentType": "Datepicker",
                    "Column": 6,
                    "Label": "ETD",
                    "ShowLabel": true
                },
                {
                    "Id": "00061468-0000-0000-8000-fe3d8830ec3a",
                    "FieldName": "ContReturnAtId",
                    "Order": 12,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Cont Return at",
                    "ShowLabel": true,
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "00061474-0000-0000-8000-91078ca4b2dc",
                    "FieldName": "GW",
                    "Order": 9,
                    "ComponentType": "Number",
                    "Column": 3,
                    "Precision": 3,
                    "Label": "GW",
                    "ShowLabel": true
                },
                {
                    "Id": "00061498-0000-0000-8000-da85094c2c3b",
                    "FieldName": "CBM",
                    "Order": 10,
                    "ComponentType": "Number",
                    "Column": 3,
                    "Precision": 3,
                    "Label": "CBM",
                    "ShowLabel": true
                },
                {
                    "Id": "000614d0-0000-0000-8000-286de8643d92",
                    "FieldName": "ContPickupAtId",
                    "Order": 11,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Cont Pickup at",
                    "ShowLabel": true,
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000614e0-0000-0000-8000-f5978646aa92",
                    "FieldName": "PolId",
                    "Order": 1,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Port of Loading",
                    "ShowLabel": true,
                    "Validation": "[{\"Rule\": \"required\", \"Message\": \"{0} is required\"}]\r\n",
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000614f8-0000-0000-8000-b045feb78a09",
                    "FieldName": "UnitId",
                    "Order": 8,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 3,
                    "Row": 100,
                    "Label": "Unit",
                    "ShowLabel": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where ds1.Name in (N'Unit Type','LTL Type','Container Type')\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where ds1.Name in (N'Unit Type','LTL Type','Container Type')\"\r\n}",
                    "RefName": "MasterData",
                    "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\"\r\n    },\r\n    {\r\n        \"FieldName\": \"Description\",\r\n        \"Label\": \"Description\",\r\n        \"ComponentType\": \"Input\"\r\n    }\r\n]"
                },
                {
                    "Id": "009d4388-0000-0000-8000-d473db60584f",
                    "FieldName": "PlaceReceiptId",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Place of Receipt",
                    "ShowLabel": true,
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "00bd2d9c-0000-0000-8000-c4f964bfd13d",
                    "FieldName": "EntityTransit",
                    "Order": 3,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 200,
                    "Label": "Booking Transit",
                    "ClassName": "sticky",
                    "DefaultVal": "{\r\n    \"EntityId\": this.EditForm.Entity.Id,\r\n    \"TableName\": \"Booking Local\"\r\n}",
                    "CanAdd": true,
                    "Query": "{\r\n    \"sql\": \"select * from EntityTransit as ds where EntityId = '{EntityId}'\",\r\n    \"total\": \"select count(ds.Id) as total from EntityTransit as ds where EntityId = '{EntityId}'\"\r\n}",
                    "RefName": "EntityTransit",
                    "PreQuery": "{ \"EntityId\": this.EditForm.Entity.Id}",
                    "Editable": true
                }
            ]
        },
        {
            "Id": "00061440-0000-0000-8000-18fa10283602",
            "FieldName": "Child2",
            "Order": 2,
            "ComponentType": "Section",
            "XxlCol": 12,
            "ParentId": "000514d0-0000-0000-8000-5755c270572c",
            "XxlOuterColumn": 4,
            "Components": [
                {
                    "Id": "00061478-0000-0000-8000-997cc2965196",
                    "FieldName": "DetailsGoods",
                    "Order": 4,
                    "ComponentType": "Textarea",
                    "Column": 12,
                    "Row": 6,
                    "Label": "Details of Goods",
                    "ShowLabel": true
                }
            ]
        },
        {
            "Id": "00061480-0000-0000-8000-7e083e7dafd7",
            "FieldName": "Other infor shipment",
            "Order": 10,
            "ComponentType": "Section",
            "Label": "Other infor shipment",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 6,
            "Components": [
                {
                    "Id": "00061410-0000-0000-8000-7c06e2dc68ff",
                    "FieldName": "PaymentTermId",
                    "Order": 5,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Payment term",
                    "ShowLabel": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 0,\r\n        \"Name\": \"Collect\"\r\n    },\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Prepaid\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "0006141c-0000-0000-8000-219e564b9b8d",
                    "FieldName": "DetFree",
                    "Order": 8,
                    "ComponentType": "Number",
                    "Column": 6,
                    "Precision": 3,
                    "Label": "DET (free)",
                    "ShowLabel": true
                },
                {
                    "Id": "00061430-0000-0000-8000-c0414811fc58",
                    "FieldName": "FreightRate",
                    "Order": 6,
                    "ComponentType": "Number",
                    "Column": 6,
                    "Precision": 3,
                    "Label": "Freight rate",
                    "ShowLabel": true
                },
                {
                    "Id": "000614ac-0000-0000-8000-c2724c556028",
                    "FieldName": "DemFree",
                    "Order": 7,
                    "ComponentType": "Number",
                    "Column": 6,
                    "Precision": 3,
                    "Label": "DEM (free)",
                    "ShowLabel": true
                },
                {
                    "Id": "00071454-0000-0000-8000-74549fce4233",
                    "FieldName": "PickupAddress",
                    "Order": 9,
                    "ComponentType": "Textarea",
                    "Column": 6,
                    "Row": 3,
                    "Label": "Pickup address",
                    "ShowLabel": true
                },
                {
                    "Id": "00071458-0000-0000-8000-862298ac3bff",
                    "FieldName": "TypeMoveId",
                    "Order": 11,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Type of Move",
                    "ShowLabel": true,
                    "Query": "[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"FCL/LCL; CY/CFS\"\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"LCL/FCL; CFS/CY\"\r\n    },\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"LCL/LCL; CFS/CFS\"\r\n    },\r\n    {\r\n        \"Id\": 4,\r\n        \"Name\": \"FCL/FCL; CY/C\"\r\n    }\r\n]",
                    "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "00071460-0000-0000-8000-c162ad000d13",
                    "FieldName": "SpecialRequest",
                    "Order": 12,
                    "ComponentType": "Textarea",
                    "Column": 6,
                    "Row": 3,
                    "Label": "Special Request",
                    "ShowLabel": true
                },
                {
                    "Id": "000714d0-0000-0000-8000-d49f850c4b14",
                    "FieldName": "DeliveryAddress",
                    "Order": 10,
                    "ComponentType": "Textarea",
                    "Column": 6,
                    "Row": 3,
                    "Label": "Delivery address",
                    "ShowLabel": true
                }
            ]
        },
        {
            "Id": "000614e4-0000-0000-8000-c9d0b89dff64",
            "FieldName": "Sea Container Destination",
            "Order": 9,
            "ComponentType": "Section",
            "Label": "Destination",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 6,
            "Components": [
                {
                    "Id": "00061410-0000-0000-8000-af471700d745",
                    "FieldName": "EtaDate",
                    "Order": 2,
                    "ComponentType": "Datepicker",
                    "Column": 6,
                    "Label": "ETA",
                    "ShowLabel": true
                },
                {
                    "Id": "00061454-0000-0000-8000-5314d3c1a1de",
                    "FieldName": "OceanVessel",
                    "Order": 22,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "Ocean vessel",
                    "ShowLabel": true
                },
                {
                    "Id": "00061460-0000-0000-8000-29dbb1bb737c",
                    "FieldName": "EntityContainer",
                    "Order": 50,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 200,
                    "Label": "Booking Container",
                    "ClassName": "sticky",
                    "DefaultVal": "{\r\n    \"EntityId\": this.EditForm.Entity.Id,\r\n    \"TableName\": \"Booking Local\"\r\n}",
                    "CanAdd": true,
                    "Query": "{\r\n    \"sql\": \"select * from EntityContainer as ds where EntityId = '{EntityId}'\",\r\n    \"total\": \"select count(ds.Id) as total from EntityContainer as ds where EntityId = '{EntityId}'\"\r\n}",
                    "RefName": "EntityContainer",
                    "PreQuery": "{ \"EntityId\": this.EditForm.Entity.Id}",
                    "Editable": true
                },
                {
                    "Id": "00061460-0000-0000-8000-322e2250a3ed",
                    "FieldName": "FinalDestinationId",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Final destination",
                    "ShowLabel": true,
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000614ac-0000-0000-8000-9e2a1801e053",
                    "FieldName": "PodId",
                    "Order": 1,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Port of Discharge",
                    "ShowLabel": true,
                    "Validation": "[{\"Rule\": \"required\", \"Message\": \"{0} is required\"}]\r\n",
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000614f4-0000-0000-8000-41cb73aa361e",
                    "FieldName": "PlaceDeliveryId",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{Name}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 100,
                    "Label": "Place of delivery",
                    "ShowLabel": true,
                    "Query": "{    \"sql\": \"select * from [Terminal] as ds\",    \"total\": \"select count(ds.Id) as total from [Terminal] as ds\"}",
                    "RefName": "Terminal",
                    "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"Address\", \"Label\" : \"Address\", \"ComponentType\" : \"Input\" }]"
                },
                {
                    "Id": "000614f8-0000-0000-8000-dacd076f7d48",
                    "FieldName": "OceanVesselVoy",
                    "Order": 23,
                    "ComponentType": "Input",
                    "Column": 6,
                    "Label": "Voy",
                    "ShowLabel": true
                }
            ]
        },
        {
            "Id": "00071458-0000-0000-8000-69f256edade8",
            "FieldName": "Center",
            "Order": 4,
            "ComponentType": "Section",
            "ClassName": "title-option",
            "Style": "margin-bottom: 0px;padding: 0;",
            "XxlCol": 12,
            "Components": [
                {
                    "Id": "0007149c-0000-0000-8000-1e19178bf3b2",
                    "FieldName": "ServiceId",
                    "Order": 1,
                    "ComponentType": "Select",
                    "FormatData": "{Description}",
                    "PlainText": "Select data",
                    "Column": 6,
                    "Row": 50,
                    "Label": "Service mode",
                    "ShowLabel": true,
                    "Style": "display: flex;align-items: center;gap: 1rem;",
                    "Events": "{\r\n    \"change\":\"ShowHideColumn\"\r\n}",
                    "Validation": "[{\"Rule\": \"required\", \"Message\": \"{0} is required\"}]",
                    "PopulateField": "this.EditForm.ShowHideDetail();\r\nreturn null;",
                    "Query": "[\r\n    {\r\n        \"Id\": 3,\r\n        \"Name\": \"Sea Export FCL\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #007bff;'><i class='fas fa-ship mr-1'></i>Sea Export FCL</span>\"\r\n    },\r\n    {\r\n        \"Id\": 4,\r\n        \"Name\": \"Sea Import FCL\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #dc3545;'><i class='fas fa-shipping-fast mr-1'></i>Sea Import FCL</span>\"\r\n    },\r\n    {\r\n        \"Id\": 5,\r\n        \"Name\": \"Sea Export LCL\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #28a745;'><i class='fas fa-boxes mr-1'></i>Sea Export LCL</span>\"\r\n    },\r\n    {\r\n        \"Id\": 6,\r\n        \"Name\": \"Sea Import LCL\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #ffc107;'><i class='fas fa-dolly mr-1'></i>Sea Import LCL</span>\"\r\n    },\r\n    {\r\n        \"Id\": 16,\r\n        \"Name\": \"Import Consol\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #17a2b8;'><i class='fas fa-warehouse mr-1'></i>Import Consol</span>\"\r\n    },\r\n    {\r\n        \"Id\": 17,\r\n        \"Name\": \"Export Consol\",\r\n        \"Description\": \"<span style='padding: 5px 10px; border-radius: 12px; color: white; background-color: #343a40;'><i class='fas fa-plane-departure mr-1'></i>Export Consol</span>\"\r\n    }\r\n]\r\n",
                    "Template": "[{ \"FieldName\" : \"Description\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]"
                }
            ]
        },
        {
            "Id": "00071484-0000-0000-8000-364dc8695749",
            "FieldName": "Other infor shipment",
            "Order": 11,
            "ComponentType": "Section",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 6,
            "Components": [
                {
                    "Id": "0007140c-0000-0000-8000-565386c3170a",
                    "FieldName": "Notes",
                    "Order": 1,
                    "ComponentType": "Textarea",
                    "Column": 12,
                    "Row": 3,
                    "Label": "Shipment notes",
                    "ShowLabel": true
                },
                {
                    "Id": "00071478-0000-0000-8000-ec54804f625b",
                    "FieldName": "ReceiverIds",
                    "Order": 4,
                    "ComponentType": "Dropdown",
                    "FormatData": "{FullName}",
                    "PlainText": "Select data",
                    "Column": 12,
                    "Row": 100,
                    "Label": "Receiver",
                    "ShowLabel": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [User] as ds where (TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from [User] as ds where (TypeId = 1)\"\r\n}",
                    "RefName": "User",
                    "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"NickName\", \"Label\" : \"NickName\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"DepartmentId\", \"Label\" : \"Department\", \"ComponentType\" : \"Dropdown\", \"RefName\":\"MasterData\",\"FormatData\" : \"{Name}\" }]",
                    "IsMultiple": true
                },
                {
                    "Id": "000714a0-0000-0000-8000-fb9b08c6841d",
                    "FieldName": "UserApprovedIds",
                    "Order": 3,
                    "ComponentType": "Dropdown",
                    "FormatData": "{FullName}",
                    "PlainText": "Select data",
                    "Column": 12,
                    "Row": 100,
                    "Label": "Checked By",
                    "ShowLabel": true,
                    "Disabled": true,
                    "Query": "{\r\n    \"sql\": \"select ds.* from [User] as ds where (TypeId = 1)\",\r\n    \"total\": \"select count(ds.Id) as total from [User] as ds where (TypeId = 1)\"\r\n}",
                    "RefName": "User",
                    "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"NickName\", \"Label\" : \"NickName\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"DepartmentId\", \"Label\" : \"Department\", \"ComponentType\" : \"Dropdown\", \"RefName\":\"MasterData\",\"FormatData\" : \"{Name}\" }]",
                    "IsMultiple": true
                },
                {
                    "Id": "000714c0-0000-0000-8000-8bbce0ea6338",
                    "FieldName": "AttachedFile",
                    "Order": 2,
                    "ComponentType": "FileUpload",
                    "Column": 12,
                    "Row": 3,
                    "Label": "Attached File",
                    "IsMultiple": true
                }
            ]
        },
        {
            "Id": "003d2d84-0000-0000-8000-efc85c69140a",
            "FieldName": "Other infor shipment",
            "Order": 13,
            "ComponentType": "Section",
            "Label": "Estimate Profit",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 12,
            "IsDropDown": true,
            "Components": [
                {
                    "Id": "00a22de8-0000-0000-8000-924a050b04db",
                    "FieldName": "Summary",
                    "Order": 2,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 50,
                    "Label": "Summary",
                    "ClassName": "sticky",
                    "Events": "{\r\n    \"FirstLoad\": \"ReloadSummary\"\r\n}",
                    "Query": "var detail = this.EditForm.ChildCom.find(x => x.IsListView && x.Meta.FieldName == \"BookingDetail\");\r\nvar groupedItems = {};\r\nvar listItem = detail.AllListViewItem.filter(x => !x.GroupRow).map(x => x.Entity);\r\nvar sellingRate = listItem.filter(x => !x.IsBuying && !x.IsObh && x.TotalAmount);\r\nvar buyingRate = listItem.filter(x => x.IsBuying && !x.IsObh && x.TotalAmount);\r\nvar obh = listItem.filter(x => !x.IsBuying && x.IsObh && x.TotalAmount);\r\nvar vnd = {\r\n    CurrencyText: \"VND\",\r\n    TotalRevenue: (sellingRate.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateVND || 1) || 0), this.Decimal(0))),\r\n    TotalCost: (buyingRate.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateVND || 1) || 0), this.Decimal(0))),\r\n    TotalObh: (obh.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateVND || 1) || 0), this.Decimal(0))),\r\n}\r\nvnd.Profit = vnd.TotalRevenue.sub(vnd.TotalCost);\r\nvnd.ProfitRate = (vnd.Profit.div(vnd.TotalRevenue || this.Decimal(1))).times(this.Decimal(100));\r\nvar usd = {\r\n    CurrencyText: \"USD\",\r\n    TotalRevenue: (sellingRate.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateUSD || 1) || 0), this.Decimal(0))),\r\n    TotalCost: (buyingRate.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateUSD || 1) || 0), this.Decimal(0))),\r\n    TotalObh: (obh.reduce((a, b) => a.plus(this.Decimal(b.TotalAmount).times(b.ExchangeRateUSD || 1) || 0), this.Decimal(0))),\r\n}\r\nusd.Profit = usd.TotalRevenue.sub(usd.TotalCost);\r\nusd.ProfitRate = (usd.Profit.div(usd.TotalRevenue || this.Decimal(1))).times(this.Decimal(100));\r\nreturn [vnd, usd];",
                    "IsSumary": true,
                    "OrderBy": "ds.InsertedDate desc",
                    "AddRowExp": "this.EditForm.Entity.StatusId == 1 || this.EditForm.Entity.StatusId == 4"
                }
            ]
        },
        {
            "Id": "00f136a4-0000-0000-8000-85f9e4892f84",
            "FieldName": "Other infor shipment",
            "Order": 14,
            "ComponentType": "Section",
            "Label": "Approve History",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 12,
            "IsDropDown": true,
            "Components": [
                {
                    "Id": "00ff3688-0000-0000-8000-7f0a0d874c4f",
                    "FieldName": "Approvement",
                    "Order": 1,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 50,
                    "Label": "Approvement",
                    "ClassName": "sticky",
                    "ChildStyle": "height: 150px;",
                    "Query": "{\r\n    \"sql\": \"select * from Approvement as ds where RecordId = '{RecordId}'\",\r\n    \"total\": \"select count(ds.Id) as total from Approvement as ds where RecordId = '{RecordId}'\"\r\n}",
                    "RefName": "Approvement",
                    "PreQuery": "{\r\n    \"RecordId\": this.EditForm.Entity.Id\r\n}",
                    "OrderBy": "ds.InsertedDate desc",
                    "AddRowExp": "this.Entity.StatusId != 3"
                }
            ]
        },
        {
            "Id": "00f92ad0-0000-0000-8000-37d6fa28e8bb",
            "FieldName": "Other infor shipment",
            "Order": 12,
            "ComponentType": "Section",
            "Label": "Pricing Details",
            "ClassName": "card-body",
            "XxlCol": 12,
            "ParentId": "00051494-0000-0000-8000-f17ccd4bcf61",
            "XxlOuterColumn": 12,
            "IsDropDown": true,
            "Components": [
                {
                    "Id": "00702a1c-0000-0000-8000-ef95ee400660",
                    "FieldName": "BookingDetail",
                    "Order": 2,
                    "ComponentType": "GridView",
                    "Column": 12,
                    "Row": 200,
                    "GroupBy": "VendorId",
                    "GroupFormat": "return this.Entity.Vendor.Name;",
                    "Label": "BookingDetail",
                    "ClassName": "sticky",
                    "Events": "{\r\n    \"BeforeCreated\": \"BeforeCreated\",\r\n    \"AfterCreated\": \"ReloadSummary\",\r\n    \"AfterDeleted\": \"ReloadSummary\",\r\n    \"contextmenu\": \"AddDuplicateMenu\",\r\n    \"change\": \"ReloadSummary\"\r\n}",
                    "DefaultVal": "{ \"BookingId\": this.EditForm.Entity.Id, \"OtherFee\": true }",
                    "CanAdd": true,
                    "Query": "{\r\n    \"sql\": \"select * from BookingDetail as ds where BookingId = '{BookingId}' and OtherFee = 1\",\r\n    \"total\": \"select count(ds.Id) as total from BookingDetail as ds where BookingId = '{BookingId}' and OtherFee = 1\"\r\n}",
                    "RefName": "BookingDetail",
                    "PreQuery": "{ \"BookingId\" : this.EditForm.Entity.Id}",
                    "IsSumary": true,
                    "Editable": true,
                    "OrderBy": "ds.[Order] asc"
                }
            ]
        }
    ],
    "GridPolicies": [
        {
            "Id": "0007143c-0000-0000-8000-2e1ddc4fc8af",
            "FieldName": "ContainerTypeId",
            "Order": 1,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Container Type",
            "Width": "168px",
            "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Container Type'\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Container Type'\"\r\n}",
            "RefName": "MasterData",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "168px",
            "MaxWidth": "168px",
            "EntityId": "EntityContainer"
        },
        {
            "Id": "0007147c-0000-0000-8000-3d35ed24e2a5",
            "FieldName": "Quantity",
            "Order": 0,
            "ComponentType": "Number",
            "Precision": 3,
            "Label": "Quantity",
            "Width": "206px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "206px",
            "MaxWidth": "206px",
            "EntityId": "EntityContainer"
        },
        {
            "Id": "000c2d5c-0000-0000-8000-609639af9216",
            "FieldName": "EtaTsDate",
            "Order": 1,
            "ComponentType": "Datepicker",
            "Precision": 2,
            "Label": "ETA (TS)",
            "Width": "206px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "206px",
            "MaxWidth": "206px",
            "EntityId": "EntityTransit"
        },
        {
            "Id": "000c2dc0-0000-0000-8000-953c7af49ad3",
            "FieldName": "PortTransitId",
            "Order": 0,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Port of Transit",
            "Width": "224px",
            "Query": "{\r\n    \"sql\": \"select ds.* from [Terminal] as ds\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds\"\r\n}",
            "RefName": "Terminal",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "224px",
            "MaxWidth": "224px",
            "EntityId": "EntityTransit"
        },
        {
            "Id": "00123610-0000-0000-8000-14e33e649441",
            "FieldName": "Approved",
            "Order": 0,
            "ComponentType": "Checkbox",
            "Label": "Approved",
            "Width": "133px",
            "FocusSearch": true,
            "MinWidth": "133px",
            "MaxWidth": "133px",
            "EntityId": "Approvement"
        },
        {
            "Id": "00123610-0000-0000-8001-8a99e8634590",
            "FieldName": "ReasonOfChange",
            "Order": 1,
            "ComponentType": "Input",
            "Label": "Reason Change",
            "Width": "374px",
            "FocusSearch": true,
            "MinWidth": "374px",
            "MaxWidth": "374px",
            "EntityId": "Approvement"
        },
        {
            "Id": "00123610-0000-0000-8002-9a6b8e8de7ee",
            "FieldName": "ApprovedDate",
            "Order": 2,
            "ComponentType": "Datepicker",
            "FormatData": "DD/MM/YYYY HH:mm",
            "Label": "Action Date",
            "Width": "144px",
            "FocusSearch": true,
            "MinWidth": "144px",
            "MaxWidth": "144px",
            "EntityId": "Approvement"
        },
        {
            "Id": "00123610-0000-0000-8003-24cf4fb46af8",
            "FieldName": "ApprovedBy",
            "Order": 3,
            "ComponentType": "Dropdown",
            "FormatData": "{FullName}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Action by",
            "Width": "116px",
            "RefName": "User",
            "Template": "[{ \"FieldName\" : \"FullName\", \"Label\" : \"Full Name\", \"ComponentType\" : \"FullName\" },\r\n{ \"FieldName\" : \"NickName\", \"Label\" : \"NickName\", \"ComponentType\" : \"Input\" },\r\n{ \"FieldName\" : \"DepartmentId\", \"Label\" : \"Department\", \"ComponentType\" : \"Dropdown\", \"RefName\":\"MasterData\",\"FormatData\" : \"{Name}\" }]",
            "FocusSearch": true,
            "MinWidth": "116px",
            "MaxWidth": "116px",
            "EntityId": "Approvement"
        },
        {
            "Id": "00172a10-0000-0000-8000-096f35640510",
            "FieldName": "TotalAmountTax",
            "Order": 7,
            "ComponentType": "Number",
            "Precision": 3,
            "GroupFormat": "const vndItems = this.ChildrenItems\r\n    .map(x => x.Entity)\r\n    .filter(x => x.Currency.Name === 'VND' && x.TotalAmountTax);\r\n\r\nconst vndAmount = vndItems.length === 0\r\n    ? ''\r\n    : vndItems\r\n        .reduce((a, b) => a.plus(b.TotalAmountTax || 0), new this.Decimal(0))\r\n        .toFixed(0)\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' VND';\r\n\r\nconst usdItems = this.ChildrenItems\r\n    .map(x => x.Entity)\r\n    .filter(x => x.Currency.Code != 'VND' && x.TotalAmountTax);\r\n\r\nconst usdAmount = usdItems.length === 0\r\n    ? ''\r\n    : usdItems\r\n        .reduce((a, b) => a.plus(b.TotalAmountTax || 0), new this.Decimal(0))\r\n        .toFixed(3)\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' USD';\r\n\r\nreturn vndAmount + (usdAmount ? ' ' + usdAmount : '');",
            "Label": "Amount",
            "Disabled": true,
            "Width": "185px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "185px",
            "MaxWidth": "185px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00202d70-0000-0000-8000-4ae3a439ab0f",
            "FieldName": "EtdTsDate",
            "Order": 2,
            "ComponentType": "Datepicker",
            "Precision": 2,
            "Label": "ETD (TS)",
            "Width": "206px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "206px",
            "MaxWidth": "206px",
            "EntityId": "EntityTransit"
        },
        {
            "Id": "00242a6c-0000-0000-8000-5f62713bf5ba",
            "FieldName": "IsBuying",
            "Order": 8,
            "ComponentType": "Checkbox",
            "Row": 50,
            "Label": "Buying",
            "Width": "76px",
            "RefName": "Terminal",
            "Editable": true,
            "MinWidth": "76px",
            "MaxWidth": "76px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00253020-0000-0000-8000-3474362b4e17",
            "FieldName": "Cost40",
            "Order": 21,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "COST",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost40",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "004c2dc0-0000-0000-8000-035caf688e40",
            "FieldName": "ProfitRate",
            "Order": 5,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT STATISTICS",
            "Width": "230px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "230px",
            "MaxWidth": "230px",
            "EntityId": "Summary"
        },
        {
            "Id": "00503074-0000-0000-8000-fd882f93bb94",
            "FieldName": "CostLCL",
            "Order": 10,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "COST",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "LCL",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "005030d8-0000-0000-8000-6ffa0a5f8ae2",
            "FieldName": "ProfitLCL",
            "Order": 12,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "LCL",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "005030d8-0000-0000-8001-11368180c7e2",
            "FieldName": "ProfitRateLCL",
            "Order": 13,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "Rate",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "LCL",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00623088-0000-0000-8000-b42ce2456030",
            "FieldName": "Revenue20",
            "Order": 14,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "REV",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost20",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00623088-0000-0000-8002-fd75e8b952bf",
            "FieldName": "Profit20",
            "Order": 17,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost20",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00623088-0000-0000-8003-a5be3ab0a214",
            "FieldName": "ProfitRate20",
            "Order": 18,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "Rate",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost20",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "006a3024-0000-0000-8000-75d6ab15f61a",
            "FieldName": "Cost40HC",
            "Order": 30,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "COST",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost40HC",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "007c300c-0000-0000-8000-7165cb8e299e",
            "FieldName": "Cost45",
            "Order": 51,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "COST",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost45",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00972a20-0000-0000-8000-d7ef0f9409ed",
            "FieldName": "UnitId",
            "Order": 3,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Unit",
            "Width": "123px",
            "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where ds1.Name in (N'Unit Type','LTL Type','Container Type')\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where ds1.Name in (N'Unit Type','LTL Type','Container Type')\"\r\n}",
            "RefName": "MasterData",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\"\r\n    },\r\n    {\r\n        \"FieldName\": \"Description\",\r\n        \"Label\": \"Description\",\r\n        \"ComponentType\": \"Input\"\r\n    }\r\n]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "123px",
            "MaxWidth": "123px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a20-0000-0000-8001-4a63e386bc02",
            "FieldName": "Amount",
            "Order": 4,
            "ComponentType": "Number",
            "Precision": 3,
            "Label": "Unit Price",
            "Events": "{\r\n    \"input\": \"CalcPrice\"\r\n}",
            "Width": "86px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "86px",
            "MaxWidth": "86px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a20-0000-0000-8002-2c40de07e8d1",
            "FieldName": "Quantity",
            "Order": 2,
            "ComponentType": "Number",
            "Precision": 2,
            "Label": "Quantity",
            "Events": "{\r\n    \"input\": \"CalcPrice\"\r\n}",
            "Width": "100px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a20-0000-0000-8003-466c6004cd90",
            "FieldName": "Vat",
            "Order": 6,
            "ComponentType": "Number",
            "Precision": 2,
            "Label": "Vat",
            "Events": "{\r\n    \"input\": \"CalcPrice\"\r\n}",
            "Width": "57px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "57px",
            "MaxWidth": "57px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a20-0000-0000-8004-31163b1e0dfd",
            "FieldName": "VendorId",
            "Order": 0,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Partner Name",
            "Width": "315px",
            "Query": "{\r\n    \"sql\": \"select *,CASE WHEN ds.Id IN ('{PartnerIds}') THEN 0 ELSE 1 END AS priority from Partner as ds where ServiceId in (1,2,3) and (TypeId not in (1,2) or TypeId is null) and ActionId = 1 and IsNoDebt = 0\",\r\n    \"total\": \"select count(ds.Id) as total from Partner as ds  where ServiceId in (1,2,3) and (TypeId not in (1,2) or TypeId is null) and ActionId = 1 and IsNoDebt = 0\"\r\n}",
            "RefName": "Partner",
            "Template": "[\r\n    {\r\n        \"FieldName\": \"Name\",\r\n        \"Label\": \"Name\",\r\n        \"ComponentType\": \"Input\",\r\n        \"MaxWidth\": \"500px\",\r\n        \"MinWidth\": \"500px\",\r\n        \"Width\": \"500px\"\r\n    },\r\n    {\r\n        \"FieldName\": \"TaxCode\",\r\n        \"Label\": \"TaxCode\",\r\n        \"ComponentType\": \"TaxCode\",\r\n        \"MaxWidth\": \"100px\",\r\n        \"MinWidth\": \"100px\",\r\n        \"Width\": \"100px\"\r\n    }\r\n]",
            "PreQuery": "{\r\n    \"PartnerIds\": [this.EditForm.Entity.CustomerId,this.EditForm.Entity.VendorId,this.EditForm.Entity.AgentId,this.EditForm.Entity.AgentId,this.EditForm.Entity.ShipperId,this.EditForm.Entity.ConsigneeId].filter(x=> x).join(`','`)\r\n}",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "315px",
            "MaxWidth": "315px",
            "OrderBy": "priority ASC",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a20-0000-0000-8005-a47eb3194bf5",
            "FieldName": "IsObh",
            "Order": 9,
            "ComponentType": "Checkbox",
            "Row": 50,
            "Label": "OBH",
            "Width": "76px",
            "RefName": "Terminal",
            "Editable": true,
            "MinWidth": "76px",
            "MaxWidth": "76px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972a84-0000-0000-8000-5b39836f5247",
            "FieldName": "Note",
            "Order": 10,
            "ComponentType": "Input",
            "Precision": 3,
            "Label": "Note",
            "Width": "266px",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "266px",
            "MaxWidth": "266px",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972abc-0000-0000-8001-1c6e42fa82ea",
            "FieldName": "DescriptionId",
            "Order": 1,
            "ComponentType": "Dropdown",
            "FormatData": "{Name}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Description",
            "Events": "{\r\n    \"change\": \"UpdateGroupFee\"\r\n}",
            "Width": "184px",
            "Query": "{\r\n    \"sql\": \"select * from FeeType as ds\",\r\n    \"total\": \"select count(ds.Id) as total from FeeType as ds\"\r\n}",
            "RefName": "FeeType",
            "Template": "[{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Description\", \"Label\" : \"Description\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"GroupId\", \"Label\" : \"Group\", \"ComponentType\" : \"Dropdown\", \"RefName\" : \"MasterData\", \"FormatData\" : \"{Name}\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "184px",
            "MaxWidth": "184px",
            "OrderBy": "ds.IsFreight desc",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00972abc-0000-0000-8002-72648fc85e1a",
            "FieldName": "CurrencyId",
            "Order": 5,
            "ComponentType": "Dropdown",
            "FormatData": "{Code}",
            "PlainText": "Select data",
            "Row": 100,
            "Label": "Currency",
            "Events": "{\"change\":\"CheckCurrency\"}",
            "Width": "124px",
            "Query": "{\r\n    \"sql\": \"select ds.* from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency'\",\r\n    \"total\": \"select count(ds.Id) as total from [MasterData] as ds left join [MasterData] ds1 on ds.ParentId = ds1.Id where  ds1.Name = N'Currency'\"\r\n}",
            "RefName": "MasterData",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Currency\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "Editable": true,
            "MinWidth": "124px",
            "MaxWidth": "124px",
            "OrderBy": "ds.Enum asc",
            "EntityId": "BookingDetail"
        },
        {
            "Id": "00a630fc-0000-0000-8000-acc378295de2",
            "FieldName": "CurrencyText",
            "Order": 1,
            "ComponentType": "Input",
            "Row": 50,
            "Label": "Currency",
            "Width": "100px",
            "FocusSearch": true,
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00ab2d50-0000-0000-8000-b1cdaadfb771",
            "FieldName": "TotalRevenue",
            "Order": 1,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "TOTAL REVENUE",
            "Width": "204px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "204px",
            "MaxWidth": "204px",
            "EntityId": "Summary"
        },
        {
            "Id": "00ab2d50-0000-0000-8001-d0c75fe3f9ee",
            "FieldName": "TotalCost",
            "Order": 2,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "TOTAL COST",
            "Width": "225px",
            "FocusSearch": true,
            "MinWidth": "225px",
            "MaxWidth": "225px",
            "EntityId": "Summary"
        },
        {
            "Id": "00ab2db4-0000-0000-8000-c149bf8cc801",
            "FieldName": "TotalObh",
            "Order": 3,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "TOTAL OBH",
            "Width": "201px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "201px",
            "MaxWidth": "201px",
            "EntityId": "Summary"
        },
        {
            "Id": "00ab2db4-0000-0000-8001-489a067fb415",
            "FieldName": "Profit",
            "Order": 4,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "TOTAL PROFIT",
            "Width": "193px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "193px",
            "MaxWidth": "193px",
            "EntityId": "Summary"
        },
        {
            "Id": "00b22d54-0000-0000-8000-c0c7aa97a66a",
            "FieldName": "CurrencyText",
            "Order": 0,
            "ComponentType": "Input",
            "Row": 50,
            "Label": "Currency",
            "Width": "143px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "MinWidth": "143px",
            "MaxWidth": "143px",
            "EntityId": "Summary"
        },
        {
            "Id": "00b83028-0000-0000-8001-b7812a4fd05f",
            "FieldName": "Profit40",
            "Order": 22,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost40",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00b83028-0000-0000-8002-59a2ec7730d6",
            "FieldName": "ProfitRate40",
            "Order": 23,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "Rate",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost40",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00b830c4-0000-0000-8000-5b506ff6eb50",
            "FieldName": "Revenue40",
            "Order": 19,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "REV",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost40",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00c0302c-0000-0000-8000-4a528edbd310",
            "FieldName": "Revenue40HC",
            "Order": 29,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "REV",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost40HC",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00c03090-0000-0000-8001-db93398762a6",
            "FieldName": "Profit40HC",
            "Order": 32,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost40HC",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00c03090-0000-0000-8002-ac2fc85f8b6d",
            "FieldName": "ProfitRate40HC",
            "Order": 33,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "Rate",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost40HC",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00ce3050-0000-0000-8000-b5197ee0e379",
            "FieldName": "Revenue45",
            "Order": 50,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "REV",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost45",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00ce3050-0000-0000-8002-f39ae72dd73a",
            "FieldName": "Profit45",
            "Order": 52,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "PROFIT",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost45",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00ce30b4-0000-0000-8000-297bf604da82",
            "FieldName": "ProfitRate45",
            "Order": 53,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "Rate",
            "Width": "100px",
            "Template": "[{ \"FieldName\" : \"Code\", \"Label\" : \"Code\", \"ComponentType\" : \"Input\" },{ \"FieldName\" : \"Name\", \"Label\" : \"Name\", \"ComponentType\" : \"Input\" }]",
            "FocusSearch": true,
            "GroupName": "Cost45",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00e43038-0000-0000-8000-114a7c5210f9",
            "FieldName": "RevenueLCL",
            "Order": 9,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "REV",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "LCL",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        },
        {
            "Id": "00ee30f4-0000-0000-8000-06accdd2ca78",
            "FieldName": "Cost20",
            "Order": 15,
            "ComponentType": "Number",
            "Row": 50,
            "Label": "COST",
            "Width": "100px",
            "FocusSearch": true,
            "GroupName": "Cost20",
            "MinWidth": "100px",
            "MaxWidth": "100px",
            "EntityId": "Summary2"
        }
    ],
    "Components": [
        {
            "Id": "00051424-0000-0000-8000-99b80155da0a",
            "FieldName": "btnSaveAdd",
            "Order": 0,
            "ComponentType": "Button",
            "Column": 1,
            "GroupFormat": "Options",
            "Label": "Save As",
            "Icon": "fas fa-sliders-h-square",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{ \"click\" : \"SaveAs\" }"
        },
        {
            "Id": "00051478-0000-0000-8000-5ca8a3e1e28b",
            "FieldName": "btnSendEntity",
            "Order": 2,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Send",
            "Icon": "far fa-share-all",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{ \"click\" : \"SendEntity\" }",
            "ShowExp": "(this.Entity.StatusId == 1 || this.Entity.StatusId == 4) && this.Token.UserId == this.Entity.InsertedBy"
        },
        {
            "Id": "0005148c-0000-0000-8000-066f631dcf02",
            "FieldName": "btnDecline",
            "Order": 3,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Decline",
            "Icon": "fal fa-comment-alt-slash",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{ \"click\" : \"DeclineEntity\" }",
            "ShowExp": "var rs = this.Entity.StatusId == 2 && this.Entity.UserApprovedIds.includes(this.Token.UserId); return rs; "
        },
        {
            "Id": "00051490-0000-0000-8000-bac80835f067",
            "FieldName": "btnSaveAdd",
            "Order": 1,
            "ComponentType": "Button",
            "Column": 1,
            "GroupFormat": "Options",
            "Label": "Save & Add",
            "Icon": "fas fa-sliders-h-square",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{ \"click\" : \"SaveAdd\" }"
        },
        {
            "Id": "00051498-0000-0000-8000-02ae4355da4b",
            "FieldName": "btnApprove",
            "Order": 4,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Approve",
            "Icon": "fal fa-check-circle",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{ \"click\" : \"ApprovedEntity\" }",
            "ShowExp": "var rs = this.Entity.StatusId == 2 && this.Entity.UserApprovedIds.includes(this.Token.UserId); return rs; "
        },
        {
            "Id": "000514f8-0000-0000-8000-12741bb3edb5",
            "FieldName": "btnSave",
            "Order": 5,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Save",
            "Icon": "fal fa-save",
            "ClassName": "btn detail-button primary",
            "HotKey": "Ctrl-S",
            "Events": "{ \"click\" : \"SavePatch\" }"
        },
        {
            "Id": "001b3180-0000-0000-8000-14d27180966d",
            "FieldName": "btnCreateBookingNotes",
            "Order": 4,
            "ComponentType": "Button",
            "Column": 1,
            "GroupFormat": "Options",
            "Label": "Booking Notes",
            "Icon": "fas fa-sliders-h-square",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{\r\n    \"click\": \"CreateBookingNotes\"\r\n}",
            "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
        },
        {
            "Id": "00683adc-0000-0000-8000-0a34879c654c",
            "FieldName": "btnCreateBookingOrder",
            "Order": 4,
            "ComponentType": "Button",
            "Column": 1,
            "GroupFormat": "Options",
            "Label": "Booking Order",
            "Icon": "fas fa-sliders-h-square",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{    \"click\": \"CreateBookingOrder\"}",
            "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
        },
        {
            "Id": "008f3748-0000-0000-8000-8937d0f7727f",
            "FieldName": "btnForward",
            "Order": 4,
            "ComponentType": "Button",
            "Column": 1,
            "GroupFormat": "Options",
            "Label": "Forward",
            "Icon": "fas fa-sliders-h-square",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{    \"click\": \"ForwardBookingLocal\"}",
            "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3"
        },
        {
            "Id": "0193a10f-ad2a-7681-8ae4-bfbebebf0a0e",
            "FieldName": "btnCreateShipment",
            "Order": -1,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Generate Shipment",
            "Icon": "fal fa-shopping-cart",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{    \"click\": \"CreateShipment\"}",
            "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3 && !this.Entity.ShipmentId"
        },
        {
            "Id": "0193a111-3584-71ff-970c-5758bcae7e1a",
            "FieldName": "btnDeclineShipment",
            "Order": -1,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Decline",
            "Icon": "fal fa-comment-alt-slash",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{    \"click\": \"DeclineEntity\"}",
            "ShowExp": "!this.Entity.Id.startsWith('-') && (this.Entity.ReceiverIds && this.Entity.ReceiverIds.includes(this.Token.UserId) || this.Entity.ForwardId == this.Token.UserId)  && this.Entity.StatusId == 3 && !this.Entity.ShipmentId"
        },
        {
            "Id": "0193e49f-80aa-7295-93d3-4a28c24f575a",
            "FieldName": "btnViewShipment",
            "Order": -1,
            "ComponentType": "Button",
            "Column": 1,
            "Label": "Open Shipment",
            "Icon": "fal fa-shopping-cart",
            "ClassName": "btn detail-button secondary-outline",
            "Events": "{    \"click\": \"CreateShipment\"}",
            "ShowExp": "this.Entity.ShipmentId"
        }
    ],
    "FeaturePolicies": [
        {
            "Id": "23223FF7-5228-4CDB-99C6-AA794D458C63",
            "RoleId": "0001f180-0000-0000-8000-13a7c7a23b11",
            "TableName": "Feature"
        },
        {
            "Id": "366B15C4-6D0C-4861-AC8B-DFD6DE6B6A2C",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba7",
            "CanRead": true,
            "CanWrite": true,
            "TableName": "Feature"
        },
        {
            "Id": "59F0D184-025D-4632-92B3-8FFC2698EAA3",
            "RoleId": "CUSTOMER",
            "TableName": "Feature"
        },
        {
            "Id": "B0E2FA30-B20C-4502-8CA1-558E7A14930D",
            "RoleId": "0001fd80-0000-0000-8000-23a7c7a43ba7",
            "TableName": "Feature"
        },
        {
            "Id": "BADD3333-13B7-4335-B1F9-DB64139A0152",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba2",
            "TableName": "Feature"
        },
        {
            "Id": "C90F3ECA-6B3A-442C-8205-E9EDEE78EC77",
            "RoleId": "0001fd80-0000-0000-8000-e3a7c7a43ba1",
            "CanRead": true,
            "CanWrite": true,
            "CanDelete": true,
            "TableName": "Feature"
        },
        {
            "Id": "DB00C09E-31B7-46C6-AC78-8801B6BFF3A6",
            "RoleId": "0001fd80-0000-0000-8000-13a7c7a43b11",
            "TableName": "Feature"
        },
        {
            "Id": "DE4B310E-A381-442C-9C42-CB521A9ED73D",
            "RoleId": "00012180-0000-0000-8000-13a7c7a23b11",
            "TableName": "Feature"
        },
        {
            "Id": "DF5217A5-3C0D-461D-80A5-634F95B8101F",
            "RoleId": "00012180-0000-0000-8000-13a7a7a23b11",
            "CanRead": true,
            "CanReadAll": true,
            "CanWrite": true,
            "CanWriteAll": true,
            "CanDelete": true,
            "CanDeleteAll": true,
            "TableName": "Feature"
        },
        {
            "Id": "F1DD960E-E244-413D-B109-0882452E3D03",
            "RoleId": "0001f180-0000-0000-8000-13a7c7a43b11",
            "TableName": "Feature"
        }
    ],
    "UserSettings": [
        {
            "Id": "067622e7-f243-72cc-8000-5eecaad5aa6a",
            "ComponentId": "00702a1c-0000-0000-8000-ef95ee400660",
            "UserId": "00781eb8-0000-0000-8000-52bf71dcaef7",
            "Value": "[{\"Id\":\"00972a20-0000-0000-8004-31163b1e0dfd\",\"FieldName\":\"VendorId\",\"Order\":0,\"Width\":\"211px\"},{\"Id\":\"00972abc-0000-0000-8001-1c6e42fa82ea\",\"FieldName\":\"DescriptionId\",\"Order\":1,\"Width\":\"275px\"},{\"Id\":\"00972a20-0000-0000-8002-2c40de07e8d1\",\"FieldName\":\"Quantity\",\"Order\":2,\"Width\":\"100px\"},{\"Id\":\"00972a20-0000-0000-8000-d7ef0f9409ed\",\"FieldName\":\"UnitId\",\"Order\":3,\"Width\":\"123px\"},{\"Id\":\"00972a20-0000-0000-8001-4a63e386bc02\",\"FieldName\":\"Amount\",\"Order\":4,\"Width\":\"86px\"},{\"Id\":\"00972abc-0000-0000-8002-72648fc85e1a\",\"FieldName\":\"CurrencyId\",\"Order\":5,\"Width\":\"124px\"},{\"Id\":\"00972a20-0000-0000-8003-466c6004cd90\",\"FieldName\":\"Vat\",\"Order\":6,\"Width\":\"57px\"},{\"Id\":\"00172a10-0000-0000-8000-096f35640510\",\"FieldName\":\"TotalAmountTax\",\"Order\":7,\"Width\":\"185px\"},{\"Id\":\"00242a6c-0000-0000-8000-5f62713bf5ba\",\"FieldName\":\"IsBuying\",\"Order\":8,\"Width\":\"76px\"},{\"Id\":\"00972a20-0000-0000-8005-a47eb3194bf5\",\"FieldName\":\"IsObh\",\"Order\":9,\"Width\":\"76px\"},{\"Id\":\"00972a84-0000-0000-8000-5b39836f5247\",\"FieldName\":\"Note\",\"Order\":10,\"Width\":\"266px\"}]"
        }
    ]
}